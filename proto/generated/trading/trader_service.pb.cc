// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: trading/trader_service.proto
// Protobuf C++ Version: 6.32.1

#include "trading/trader_service.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace financio {
namespace trading {

inline constexpr HealthPong::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        note_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR HealthPong::HealthPong(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HealthPong_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HealthPongDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthPongDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthPongDefaultTypeInternal() {}
  union {
    HealthPong _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthPongDefaultTypeInternal _HealthPong_default_instance_;

inline constexpr HealthPing::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        note_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR HealthPing::HealthPing(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HealthPing_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HealthPingDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HealthPingDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HealthPingDefaultTypeInternal() {}
  union {
    HealthPing _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HealthPingDefaultTypeInternal _HealthPing_default_instance_;

inline constexpr FrontendToBackend::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR FrontendToBackend::FrontendToBackend(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FrontendToBackend_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrontendToBackendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrontendToBackendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrontendToBackendDefaultTypeInternal() {}
  union {
    FrontendToBackend _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrontendToBackendDefaultTypeInternal _FrontendToBackend_default_instance_;

inline constexpr BackendToFrontend::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR BackendToFrontend::BackendToFrontend(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BackendToFrontend_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BackendToFrontendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BackendToFrontendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BackendToFrontendDefaultTypeInternal() {}
  union {
    BackendToFrontend _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BackendToFrontendDefaultTypeInternal _BackendToFrontend_default_instance_;
}  // namespace trading
}  // namespace financio
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_trading_2ftrader_5fservice_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_trading_2ftrader_5fservice_2eproto = nullptr;
const ::uint32_t
    TableStruct_trading_2ftrader_5fservice_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendToBackend, _impl_._oneof_case_[0]),
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendToBackend, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendToBackend, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendToBackend, _impl_.kind_),
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::BackendToFrontend, _impl_._oneof_case_[0]),
        PROTOBUF_FIELD_OFFSET(::financio::trading::BackendToFrontend, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::BackendToFrontend, _impl_.kind_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::BackendToFrontend, _impl_.kind_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::HealthPing, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::HealthPing, _impl_.note_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::HealthPong, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::HealthPong, _impl_.note_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::financio::trading::FrontendToBackend)},
        {5, sizeof(::financio::trading::BackendToFrontend)},
        {10, sizeof(::financio::trading::HealthPing)},
        {15, sizeof(::financio::trading::HealthPong)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::financio::trading::_FrontendToBackend_default_instance_._instance,
    &::financio::trading::_BackendToFrontend_default_instance_._instance,
    &::financio::trading::_HealthPing_default_instance_._instance,
    &::financio::trading::_HealthPong_default_instance_._instance,
};
const char descriptor_table_protodef_trading_2ftrader_5fservice_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\034trading/trader_service.proto\022\020financio"
    ".trading\032\027trading/lifecycle.proto\032\025tradi"
    "ng/control.proto\032\023trading/state.proto\"\206\001"
    "\n\021FrontendToBackend\0224\n\007control\030\001 \001(\0132!.f"
    "inancio.trading.FrontendCommandH\000\0223\n\007mes"
    "sage\030\002 \001(\0132 .financio.trading.ControlMes"
    "sageH\000B\006\n\004kind\"\205\001\n\021BackendToFrontend\0227\n\006"
    "status\030\001 \001(\0132%.financio.trading.BackendS"
    "tatusUpdateH\000\022/\n\005state\030\002 \001(\0132\036.financio."
    "trading.StateMessageH\000B\006\n\004kind\"\032\n\nHealth"
    "Ping\022\014\n\004note\030\001 \001(\t\"\032\n\nHealthPong\022\014\n\004note"
    "\030\001 \001(\t2^\n\013TradingLink\022O\n\007Session\022 .finan"
    "cio.trading.ControlMessage\032\036.financio.tr"
    "ading.StateMessage(\0010\0012Z\n\rTraderControl\022"
    "I\n\013CheckHealth\022\034.financio.trading.Health"
    "Ping\032\034.financio.trading.HealthPongb\006prot"
    "o3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_trading_2ftrader_5fservice_2eproto_deps[3] = {
        &::descriptor_table_trading_2fcontrol_2eproto,
        &::descriptor_table_trading_2flifecycle_2eproto,
        &::descriptor_table_trading_2fstate_2eproto,
};
static ::absl::once_flag descriptor_table_trading_2ftrader_5fservice_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_trading_2ftrader_5fservice_2eproto = {
    false,
    false,
    642,
    descriptor_table_protodef_trading_2ftrader_5fservice_2eproto,
    "trading/trader_service.proto",
    &descriptor_table_trading_2ftrader_5fservice_2eproto_once,
    descriptor_table_trading_2ftrader_5fservice_2eproto_deps,
    3,
    4,
    schemas,
    file_default_instances,
    TableStruct_trading_2ftrader_5fservice_2eproto::offsets,
    file_level_enum_descriptors_trading_2ftrader_5fservice_2eproto,
    file_level_service_descriptors_trading_2ftrader_5fservice_2eproto,
};
namespace financio {
namespace trading {
// ===================================================================

class FrontendToBackend::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendToBackend, _impl_._oneof_case_);
};

void FrontendToBackend::set_allocated_control(::financio::trading::FrontendCommand* PROTOBUF_NULLABLE control) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (control) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(control)->GetArena();
    if (message_arena != submessage_arena) {
      control = ::google::protobuf::internal::GetOwnedMessage(message_arena, control, submessage_arena);
    }
    set_has_control();
    _impl_.kind_.control_ = control;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.FrontendToBackend.control)
}
void FrontendToBackend::clear_control() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kControl) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.control_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.control_);
    }
    clear_has_kind();
  }
}
void FrontendToBackend::set_allocated_message(::financio::trading::ControlMessage* PROTOBUF_NULLABLE message) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (message) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(message)->GetArena();
    if (message_arena != submessage_arena) {
      message = ::google::protobuf::internal::GetOwnedMessage(message_arena, message, submessage_arena);
    }
    set_has_message();
    _impl_.kind_.message_ = message;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.FrontendToBackend.message)
}
void FrontendToBackend::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kMessage) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.message_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.message_);
    }
    clear_has_kind();
  }
}
FrontendToBackend::FrontendToBackend(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FrontendToBackend_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.FrontendToBackend)
}
PROTOBUF_NDEBUG_INLINE FrontendToBackend::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::FrontendToBackend& from_msg)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

FrontendToBackend::FrontendToBackend(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FrontendToBackend& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FrontendToBackend_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FrontendToBackend* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (kind_case()) {
    case KIND_NOT_SET:
      break;
      case kControl:
        _impl_.kind_.control_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kind_.control_);
        break;
      case kMessage:
        _impl_.kind_.message_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kind_.message_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:financio.trading.FrontendToBackend)
}
PROTOBUF_NDEBUG_INLINE FrontendToBackend::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void FrontendToBackend::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FrontendToBackend::~FrontendToBackend() {
  // @@protoc_insertion_point(destructor:financio.trading.FrontendToBackend)
  SharedDtor(*this);
}
inline void FrontendToBackend::SharedDtor(MessageLite& self) {
  FrontendToBackend& this_ = static_cast<FrontendToBackend&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_kind()) {
    this_.clear_kind();
  }
  this_._impl_.~Impl_();
}

void FrontendToBackend::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:financio.trading.FrontendToBackend)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (kind_case()) {
    case kControl: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.control_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.control_);
      }
      break;
    }
    case kMessage: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.message_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.message_);
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}


inline void* PROTOBUF_NONNULL FrontendToBackend::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FrontendToBackend(arena);
}
constexpr auto FrontendToBackend::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FrontendToBackend),
                                            alignof(FrontendToBackend));
}
constexpr auto FrontendToBackend::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FrontendToBackend_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FrontendToBackend::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FrontendToBackend>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FrontendToBackend::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FrontendToBackend>(), &FrontendToBackend::ByteSizeLong,
              &FrontendToBackend::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FrontendToBackend, _impl_._cached_size_),
          false,
      },
      &FrontendToBackend::kDescriptorMethods,
      &descriptor_table_trading_2ftrader_5fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FrontendToBackend_class_data_ =
        FrontendToBackend::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FrontendToBackend::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FrontendToBackend_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FrontendToBackend_class_data_.tc_table);
  return FrontendToBackend_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
FrontendToBackend::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    FrontendToBackend_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::FrontendToBackend>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .financio.trading.FrontendCommand control = 1;
    {PROTOBUF_FIELD_OFFSET(FrontendToBackend, _impl_.kind_.control_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.ControlMessage message = 2;
    {PROTOBUF_FIELD_OFFSET(FrontendToBackend, _impl_.kind_.message_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::financio::trading::FrontendCommand>()},
      {::_pbi::TcParser::GetTable<::financio::trading::ControlMessage>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void FrontendToBackend::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.FrontendToBackend)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FrontendToBackend::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FrontendToBackend& this_ = static_cast<const FrontendToBackend&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FrontendToBackend::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FrontendToBackend& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.FrontendToBackend)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.kind_case()) {
    case kControl: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.kind_.control_, this_._impl_.kind_.control_->GetCachedSize(), target,
          stream);
      break;
    }
    case kMessage: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.kind_.message_, this_._impl_.kind_.message_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.FrontendToBackend)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FrontendToBackend::ByteSizeLong(const MessageLite& base) {
  const FrontendToBackend& this_ = static_cast<const FrontendToBackend&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FrontendToBackend::ByteSizeLong() const {
  const FrontendToBackend& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.FrontendToBackend)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.kind_case()) {
    // .financio.trading.FrontendCommand control = 1;
    case kControl: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.control_);
      break;
    }
    // .financio.trading.ControlMessage message = 2;
    case kMessage: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.message_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FrontendToBackend::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrontendToBackend*>(&to_msg);
  auto& from = static_cast<const FrontendToBackend&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.FrontendToBackend)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_kind();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kControl: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.control_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kind_.control_);
        } else {
          _this->_impl_.kind_.control_->MergeFrom(*from._impl_.kind_.control_);
        }
        break;
      }
      case kMessage: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.message_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kind_.message_);
        } else {
          _this->_impl_.kind_.message_->MergeFrom(*from._impl_.kind_.message_);
        }
        break;
      }
      case KIND_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrontendToBackend::CopyFrom(const FrontendToBackend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.FrontendToBackend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FrontendToBackend::InternalSwap(FrontendToBackend* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.kind_, other->_impl_.kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata FrontendToBackend::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BackendToFrontend::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::financio::trading::BackendToFrontend, _impl_._oneof_case_);
};

void BackendToFrontend::set_allocated_status(::financio::trading::BackendStatusUpdate* PROTOBUF_NULLABLE status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (status) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(status)->GetArena();
    if (message_arena != submessage_arena) {
      status = ::google::protobuf::internal::GetOwnedMessage(message_arena, status, submessage_arena);
    }
    set_has_status();
    _impl_.kind_.status_ = status;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.BackendToFrontend.status)
}
void BackendToFrontend::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kStatus) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.status_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.status_);
    }
    clear_has_kind();
  }
}
void BackendToFrontend::set_allocated_state(::financio::trading::StateMessage* PROTOBUF_NULLABLE state) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_kind();
  if (state) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(state)->GetArena();
    if (message_arena != submessage_arena) {
      state = ::google::protobuf::internal::GetOwnedMessage(message_arena, state, submessage_arena);
    }
    set_has_state();
    _impl_.kind_.state_ = state;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.BackendToFrontend.state)
}
void BackendToFrontend::clear_state() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (kind_case() == kState) {
    if (GetArena() == nullptr) {
      delete _impl_.kind_.state_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.state_);
    }
    clear_has_kind();
  }
}
BackendToFrontend::BackendToFrontend(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BackendToFrontend_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.BackendToFrontend)
}
PROTOBUF_NDEBUG_INLINE BackendToFrontend::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::BackendToFrontend& from_msg)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

BackendToFrontend::BackendToFrontend(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BackendToFrontend& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BackendToFrontend_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BackendToFrontend* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (kind_case()) {
    case KIND_NOT_SET:
      break;
      case kStatus:
        _impl_.kind_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kind_.status_);
        break;
      case kState:
        _impl_.kind_.state_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kind_.state_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:financio.trading.BackendToFrontend)
}
PROTOBUF_NDEBUG_INLINE BackendToFrontend::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : kind_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void BackendToFrontend::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
BackendToFrontend::~BackendToFrontend() {
  // @@protoc_insertion_point(destructor:financio.trading.BackendToFrontend)
  SharedDtor(*this);
}
inline void BackendToFrontend::SharedDtor(MessageLite& self) {
  BackendToFrontend& this_ = static_cast<BackendToFrontend&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_kind()) {
    this_.clear_kind();
  }
  this_._impl_.~Impl_();
}

void BackendToFrontend::clear_kind() {
// @@protoc_insertion_point(one_of_clear_start:financio.trading.BackendToFrontend)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (kind_case()) {
    case kStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.status_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.status_);
      }
      break;
    }
    case kState: {
      if (GetArena() == nullptr) {
        delete _impl_.kind_.state_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.kind_.state_);
      }
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = KIND_NOT_SET;
}


inline void* PROTOBUF_NONNULL BackendToFrontend::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BackendToFrontend(arena);
}
constexpr auto BackendToFrontend::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(BackendToFrontend),
                                            alignof(BackendToFrontend));
}
constexpr auto BackendToFrontend::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BackendToFrontend_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BackendToFrontend::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BackendToFrontend>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BackendToFrontend::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BackendToFrontend>(), &BackendToFrontend::ByteSizeLong,
              &BackendToFrontend::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BackendToFrontend, _impl_._cached_size_),
          false,
      },
      &BackendToFrontend::kDescriptorMethods,
      &descriptor_table_trading_2ftrader_5fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BackendToFrontend_class_data_ =
        BackendToFrontend::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BackendToFrontend::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BackendToFrontend_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BackendToFrontend_class_data_.tc_table);
  return BackendToFrontend_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 2, 2, 0, 2>
BackendToFrontend::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BackendToFrontend_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::BackendToFrontend>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .financio.trading.BackendStatusUpdate status = 1;
    {PROTOBUF_FIELD_OFFSET(BackendToFrontend, _impl_.kind_.status_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.StateMessage state = 2;
    {PROTOBUF_FIELD_OFFSET(BackendToFrontend, _impl_.kind_.state_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::financio::trading::BackendStatusUpdate>()},
      {::_pbi::TcParser::GetTable<::financio::trading::StateMessage>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void BackendToFrontend::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.BackendToFrontend)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_kind();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BackendToFrontend::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BackendToFrontend& this_ = static_cast<const BackendToFrontend&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BackendToFrontend::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BackendToFrontend& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.BackendToFrontend)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.kind_case()) {
    case kStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.kind_.status_, this_._impl_.kind_.status_->GetCachedSize(), target,
          stream);
      break;
    }
    case kState: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.kind_.state_, this_._impl_.kind_.state_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.BackendToFrontend)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BackendToFrontend::ByteSizeLong(const MessageLite& base) {
  const BackendToFrontend& this_ = static_cast<const BackendToFrontend&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BackendToFrontend::ByteSizeLong() const {
  const BackendToFrontend& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.BackendToFrontend)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.kind_case()) {
    // .financio.trading.BackendStatusUpdate status = 1;
    case kStatus: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.status_);
      break;
    }
    // .financio.trading.StateMessage state = 2;
    case kState: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.kind_.state_);
      break;
    }
    case KIND_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BackendToFrontend::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BackendToFrontend*>(&to_msg);
  auto& from = static_cast<const BackendToFrontend&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.BackendToFrontend)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_kind();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kStatus: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kind_.status_);
        } else {
          _this->_impl_.kind_.status_->MergeFrom(*from._impl_.kind_.status_);
        }
        break;
      }
      case kState: {
        if (oneof_needs_init) {
          _this->_impl_.kind_.state_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.kind_.state_);
        } else {
          _this->_impl_.kind_.state_->MergeFrom(*from._impl_.kind_.state_);
        }
        break;
      }
      case KIND_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BackendToFrontend::CopyFrom(const BackendToFrontend& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.BackendToFrontend)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BackendToFrontend::InternalSwap(BackendToFrontend* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.kind_, other->_impl_.kind_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata BackendToFrontend::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HealthPing::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HealthPing>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HealthPing, _impl_._has_bits_);
};

HealthPing::HealthPing(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HealthPing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.HealthPing)
}
PROTOBUF_NDEBUG_INLINE HealthPing::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::HealthPing& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        note_(arena, from.note_) {}

HealthPing::HealthPing(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HealthPing& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HealthPing_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HealthPing* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:financio.trading.HealthPing)
}
PROTOBUF_NDEBUG_INLINE HealthPing::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        note_(arena) {}

inline void HealthPing::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HealthPing::~HealthPing() {
  // @@protoc_insertion_point(destructor:financio.trading.HealthPing)
  SharedDtor(*this);
}
inline void HealthPing::SharedDtor(MessageLite& self) {
  HealthPing& this_ = static_cast<HealthPing&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.note_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HealthPing::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HealthPing(arena);
}
constexpr auto HealthPing::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HealthPing),
                                            alignof(HealthPing));
}
constexpr auto HealthPing::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HealthPing_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HealthPing::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HealthPing>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HealthPing::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HealthPing>(), &HealthPing::ByteSizeLong,
              &HealthPing::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HealthPing, _impl_._cached_size_),
          false,
      },
      &HealthPing::kDescriptorMethods,
      &descriptor_table_trading_2ftrader_5fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HealthPing_class_data_ =
        HealthPing::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HealthPing::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HealthPing_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HealthPing_class_data_.tc_table);
  return HealthPing_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2>
HealthPing::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HealthPing, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HealthPing_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::HealthPing>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string note = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HealthPing, _impl_.note_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string note = 1;
    {PROTOBUF_FIELD_OFFSET(HealthPing, _impl_.note_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\4\0\0\0\0\0\0"
    "financio.trading.HealthPing"
    "note"
  }},
};
PROTOBUF_NOINLINE void HealthPing::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.HealthPing)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.note_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HealthPing::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HealthPing& this_ = static_cast<const HealthPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HealthPing::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HealthPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.HealthPing)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string note = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_note().empty()) {
      const ::std::string& _s = this_._internal_note();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HealthPing.note");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.HealthPing)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HealthPing::ByteSizeLong(const MessageLite& base) {
  const HealthPing& this_ = static_cast<const HealthPing&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HealthPing::ByteSizeLong() const {
  const HealthPing& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.HealthPing)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string note = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_note().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_note());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HealthPing::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HealthPing*>(&to_msg);
  auto& from = static_cast<const HealthPing&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.HealthPing)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_note().empty()) {
      _this->_internal_set_note(from._internal_note());
    } else {
      if (_this->_impl_.note_.IsDefault()) {
        _this->_internal_set_note("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HealthPing::CopyFrom(const HealthPing& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.HealthPing)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HealthPing::InternalSwap(HealthPing* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.note_, &other->_impl_.note_, arena);
}

::google::protobuf::Metadata HealthPing::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HealthPong::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HealthPong>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HealthPong, _impl_._has_bits_);
};

HealthPong::HealthPong(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HealthPong_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.HealthPong)
}
PROTOBUF_NDEBUG_INLINE HealthPong::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::HealthPong& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        note_(arena, from.note_) {}

HealthPong::HealthPong(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HealthPong& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HealthPong_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HealthPong* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:financio.trading.HealthPong)
}
PROTOBUF_NDEBUG_INLINE HealthPong::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        note_(arena) {}

inline void HealthPong::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HealthPong::~HealthPong() {
  // @@protoc_insertion_point(destructor:financio.trading.HealthPong)
  SharedDtor(*this);
}
inline void HealthPong::SharedDtor(MessageLite& self) {
  HealthPong& this_ = static_cast<HealthPong&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.note_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HealthPong::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HealthPong(arena);
}
constexpr auto HealthPong::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HealthPong),
                                            alignof(HealthPong));
}
constexpr auto HealthPong::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HealthPong_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HealthPong::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HealthPong>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HealthPong::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HealthPong>(), &HealthPong::ByteSizeLong,
              &HealthPong::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HealthPong, _impl_._cached_size_),
          false,
      },
      &HealthPong::kDescriptorMethods,
      &descriptor_table_trading_2ftrader_5fservice_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HealthPong_class_data_ =
        HealthPong::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HealthPong::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HealthPong_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HealthPong_class_data_.tc_table);
  return HealthPong_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 40, 2>
HealthPong::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HealthPong, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HealthPong_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::HealthPong>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string note = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HealthPong, _impl_.note_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string note = 1;
    {PROTOBUF_FIELD_OFFSET(HealthPong, _impl_.note_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\4\0\0\0\0\0\0"
    "financio.trading.HealthPong"
    "note"
  }},
};
PROTOBUF_NOINLINE void HealthPong::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.HealthPong)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.note_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HealthPong::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HealthPong& this_ = static_cast<const HealthPong&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HealthPong::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HealthPong& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.HealthPong)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string note = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_note().empty()) {
      const ::std::string& _s = this_._internal_note();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HealthPong.note");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.HealthPong)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HealthPong::ByteSizeLong(const MessageLite& base) {
  const HealthPong& this_ = static_cast<const HealthPong&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HealthPong::ByteSizeLong() const {
  const HealthPong& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.HealthPong)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string note = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_note().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_note());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HealthPong::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HealthPong*>(&to_msg);
  auto& from = static_cast<const HealthPong&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.HealthPong)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_note().empty()) {
      _this->_internal_set_note(from._internal_note());
    } else {
      if (_this->_impl_.note_.IsDefault()) {
        _this->_internal_set_note("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HealthPong::CopyFrom(const HealthPong& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.HealthPong)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HealthPong::InternalSwap(HealthPong* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.note_, &other->_impl_.note_, arena);
}

::google::protobuf::Metadata HealthPong::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace trading
}  // namespace financio
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_trading_2ftrader_5fservice_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

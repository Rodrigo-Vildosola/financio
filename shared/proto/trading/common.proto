syntax = "proto3";

package financio.trading;

// import "google/protobuf/timestamp.proto";

// Common primitives and enums shared by all modules.

// ---------- BACKEND lifecycle ----------
enum BackendStatus {
  BACKEND_STATUS_UNKNOWN           = 0;
  BACKEND_STATUS_STARTING          = 1;
  BACKEND_STATUS_READY             = 2;
  BACKEND_STATUS_IBKR_CONNECTING   = 3;
  BACKEND_STATUS_IBKR_CONNECTED    = 4;
  BACKEND_STATUS_IBKR_DISCONNECTED = 5;
  BACKEND_STATUS_ERROR             = 6;
}

// ---------- Request and event type enums ----------
enum ControlType {
  CONTROL_UNSPECIFIED  = 0;
  CONTROL_CONNECT      = 1;
  CONTROL_DISCONNECT   = 2;
  CONTROL_SUB_MKT      = 3;
  CONTROL_UNSUB_MKT    = 4;
  CONTROL_PLACE_ORDER  = 5;
  CONTROL_CANCEL_ORDER = 6;
  CONTROL_HISTORICAL   = 7;
  CONTROL_ACCOUNT_DATA = 8;
  CONTROL_NEWS         = 9;
  CONTROL_PING         = 10;
}

enum StateType {
  STATE_UNSPECIFIED   = 0;
  STATE_CONNECTED     = 1;
  STATE_DISCONNECTED  = 2;
  STATE_ERROR         = 3;
  STATE_PONG          = 4;
  STATE_TICK_PRICE    = 10;
  STATE_TICK_SIZE     = 11;
  STATE_ORDER_STATUS  = 12;
  STATE_ORDER_FILLED  = 13;
  STATE_HIST_BAR      = 20;
  STATE_HIST_END      = 21;
  STATE_ACCOUNT_SUM   = 30;
  STATE_PORTFOLIO     = 31;
  STATE_NEWS          = 32;
}

// ---------- Common structs ----------

message DecimalPB { int64 mantissa = 1; int32 scale = 2; }

message TickAttribPB {
  bool can_auto_execute = 1;
  bool past_limit       = 2;
  bool pre_open         = 3;
  bool bid_past_low     = 4; // LEFT FROM DEBUG
  bool ask_past_high    = 5; // LEFT FROM DEBUG
  bool delayed          = 6; // LEFT FROM DEBUG
}

message ExecutionPB {
  string exec_id     = 1;  // IBKR execution ID
  string time        = 2;  // Execution timestamp
  string acct_number = 3;  // Account code
  string exchange    = 4;  // Executing exchange
  string side        = 5;  // "BOT" / "SLD"
  double shares      = 6;  // Executed quantity
  double price       = 7;  // Execution price
  int64  perm_id     = 8;  // Permanent order ID
  int32  client_id   = 9;  // Client ID
  int64  order_id    = 10; // Local order ID
  double cum_qty     = 11; // Cumulative quantity filled
  double avg_price   = 12; // Average fill price
  string order_ref   = 13; // IBKR order ref string
  string model_code  = 14; // Model portfolio code
  int32  last_liquidity = 15; // Last liquidity flag (0â€“4)
  bool   pending_price_revision = 16; // IBKR internal
}


message BarPB {
  string time   = 1;
  double open   = 2;
  double high   = 3;
  double low    = 4;
  double close  = 5;
  double wap    = 6;
  double volume = 7;
  int32  count  = 8;
}

message ExecutionFilterPB {
  int32  client_id  = 1;
  string acct_code  = 2;
  string time       = 3;
  string symbol     = 4;
  string sec_type   = 5;
  string exchange   = 6;
  string side       = 7;
  int32  last_n_days = 8;
}

message ContractPB {
  string symbol    = 1;
  string sec_type  = 2;
  string exchange  = 3;
  string currency  = 4;
  string local_symbol = 5;
  string trading_class = 6;
  string primary_exchange = 7;
}

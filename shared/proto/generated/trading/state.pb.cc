// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: trading/state.proto
// Protobuf C++ Version: 6.32.1

#include "trading/state.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace financio {
namespace trading {

inline constexpr TickSize::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        size_{0},
        field_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TickSize::TickSize(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TickSize_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TickSizeDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TickSizeDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TickSizeDefaultTypeInternal() {}
  union {
    TickSize _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TickSizeDefaultTypeInternal _TickSize_default_instance_;

inline constexpr PortfolioPosition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_{0},
        avg_cost_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PortfolioPosition::PortfolioPosition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PortfolioPosition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PortfolioPositionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PortfolioPositionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PortfolioPositionDefaultTypeInternal() {}
  union {
    PortfolioPosition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PortfolioPositionDefaultTypeInternal _PortfolioPosition_default_instance_;

inline constexpr OrderStatus::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        status_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        filled_{0},
        remaining_{0},
        avg_fill_px_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderStatus::OrderStatus(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderStatus_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderStatusDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderStatusDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderStatusDefaultTypeInternal() {}
  union {
    OrderStatus _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderStatusDefaultTypeInternal _OrderStatus_default_instance_;

inline constexpr NewsHeadline::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        provider_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        headline_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR NewsHeadline::NewsHeadline(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(NewsHeadline_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct NewsHeadlineDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NewsHeadlineDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NewsHeadlineDefaultTypeInternal() {}
  union {
    NewsHeadline _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NewsHeadlineDefaultTypeInternal _NewsHeadline_default_instance_;

inline constexpr HistoricalEnd::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        start_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        end_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR HistoricalEnd::HistoricalEnd(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HistoricalEnd_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoricalEndDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoricalEndDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoricalEndDefaultTypeInternal() {}
  union {
    HistoricalEnd _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoricalEndDefaultTypeInternal _HistoricalEnd_default_instance_;

inline constexpr Error::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        code_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Error::Error(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(Error_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ErrorDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ErrorDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ErrorDefaultTypeInternal() {}
  union {
    Error _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ErrorDefaultTypeInternal _Error_default_instance_;

inline constexpr AccountSummary::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        key_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        value_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR AccountSummary::AccountSummary(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(AccountSummary_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct AccountSummaryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR AccountSummaryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~AccountSummaryDefaultTypeInternal() {}
  union {
    AccountSummary _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 AccountSummaryDefaultTypeInternal _AccountSummary_default_instance_;

inline constexpr TickPrice::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        attrib_{nullptr},
        price_{0},
        field_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TickPrice::TickPrice(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(TickPrice_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TickPriceDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TickPriceDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TickPriceDefaultTypeInternal() {}
  union {
    TickPrice _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TickPriceDefaultTypeInternal _TickPrice_default_instance_;

inline constexpr OrderFill::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        exec_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR OrderFill::OrderFill(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderFill_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderFillDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderFillDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderFillDefaultTypeInternal() {}
  union {
    OrderFill _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderFillDefaultTypeInternal _OrderFill_default_instance_;

inline constexpr HistoricalBar::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        bar_{nullptr} {}

template <typename>
PROTOBUF_CONSTEXPR HistoricalBar::HistoricalBar(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HistoricalBar_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoricalBarDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoricalBarDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoricalBarDefaultTypeInternal() {}
  union {
    HistoricalBar _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoricalBarDefaultTypeInternal _HistoricalBar_default_instance_;

inline constexpr StateMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        ts_{nullptr},
        id_{::int64_t{0}},
        type_{static_cast< ::financio::trading::StateType >(0)},
        payload_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR StateMessage::StateMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(StateMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StateMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StateMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StateMessageDefaultTypeInternal() {}
  union {
    StateMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StateMessageDefaultTypeInternal _StateMessage_default_instance_;
}  // namespace trading
}  // namespace financio
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_trading_2fstate_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_trading_2fstate_2eproto = nullptr;
const ::uint32_t
    TableStruct_trading_2fstate_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::Error, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::Error, _impl_.code_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::Error, _impl_.message_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::TickPrice, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::TickPrice, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::TickPrice, _impl_.field_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::TickPrice, _impl_.attrib_),
        1,
        2,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::TickSize, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::TickSize, _impl_.field_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::TickSize, _impl_.size_),
        1,
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::OrderStatus, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::OrderStatus, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::OrderStatus, _impl_.filled_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::OrderStatus, _impl_.remaining_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::OrderStatus, _impl_.avg_fill_px_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::OrderFill, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::OrderFill, _impl_.exec_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalBar, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalBar, _impl_.bar_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalEnd, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalEnd, _impl_.start_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalEnd, _impl_.end_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::AccountSummary, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::AccountSummary, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::AccountSummary, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::AccountSummary, _impl_.value_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::AccountSummary, _impl_.currency_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::PortfolioPosition, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::PortfolioPosition, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::PortfolioPosition, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::PortfolioPosition, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::PortfolioPosition, _impl_.avg_cost_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::NewsHeadline, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::NewsHeadline, _impl_.provider_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::NewsHeadline, _impl_.headline_),
        0,
        1,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_._oneof_case_[0]),
        18, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.ts_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_.payload_),
        2,
        1,
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::financio::trading::Error)},
        {7, sizeof(::financio::trading::TickPrice)},
        {16, sizeof(::financio::trading::TickSize)},
        {23, sizeof(::financio::trading::OrderStatus)},
        {34, sizeof(::financio::trading::OrderFill)},
        {39, sizeof(::financio::trading::HistoricalBar)},
        {44, sizeof(::financio::trading::HistoricalEnd)},
        {51, sizeof(::financio::trading::AccountSummary)},
        {62, sizeof(::financio::trading::PortfolioPosition)},
        {73, sizeof(::financio::trading::NewsHeadline)},
        {80, sizeof(::financio::trading::StateMessage)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::financio::trading::_Error_default_instance_._instance,
    &::financio::trading::_TickPrice_default_instance_._instance,
    &::financio::trading::_TickSize_default_instance_._instance,
    &::financio::trading::_OrderStatus_default_instance_._instance,
    &::financio::trading::_OrderFill_default_instance_._instance,
    &::financio::trading::_HistoricalBar_default_instance_._instance,
    &::financio::trading::_HistoricalEnd_default_instance_._instance,
    &::financio::trading::_AccountSummary_default_instance_._instance,
    &::financio::trading::_PortfolioPosition_default_instance_._instance,
    &::financio::trading::_NewsHeadline_default_instance_._instance,
    &::financio::trading::_StateMessage_default_instance_._instance,
};
const char descriptor_table_protodef_trading_2fstate_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\023trading/state.proto\022\020financio.trading\032"
    "\037google/protobuf/timestamp.proto\032\024tradin"
    "g/common.proto\"&\n\005Error\022\014\n\004code\030\001 \001(\005\022\017\n"
    "\007message\030\002 \001(\t\"Y\n\tTickPrice\022\r\n\005price\030\001 \001"
    "(\001\022\r\n\005field\030\002 \001(\005\022.\n\006attrib\030\003 \001(\0132\036.fina"
    "ncio.trading.TickAttribPB\"\'\n\010TickSize\022\r\n"
    "\005field\030\001 \001(\005\022\014\n\004size\030\002 \001(\001\"U\n\013OrderStatu"
    "s\022\016\n\006status\030\001 \001(\t\022\016\n\006filled\030\002 \001(\001\022\021\n\trem"
    "aining\030\003 \001(\001\022\023\n\013avg_fill_px\030\004 \001(\001\"8\n\tOrd"
    "erFill\022+\n\004exec\030\001 \001(\0132\035.financio.trading."
    "ExecutionPB\"5\n\rHistoricalBar\022$\n\003bar\030\001 \001("
    "\0132\027.financio.trading.BarPB\"+\n\rHistorical"
    "End\022\r\n\005start\030\001 \001(\t\022\013\n\003end\030\002 \001(\t\"O\n\016Accou"
    "ntSummary\022\017\n\007account\030\001 \001(\t\022\013\n\003key\030\002 \001(\t\022"
    "\r\n\005value\030\003 \001(\t\022\020\n\010currency\030\004 \001(\t\"X\n\021Port"
    "folioPosition\022\017\n\007account\030\001 \001(\t\022\016\n\006symbol"
    "\030\002 \001(\t\022\020\n\010position\030\003 \001(\001\022\020\n\010avg_cost\030\004 \001"
    "(\001\"2\n\014NewsHeadline\022\020\n\010provider\030\001 \001(\t\022\020\n\010"
    "headline\030\002 \001(\t\"\223\005\n\014StateMessage\022)\n\004type\030"
    "\001 \001(\0162\033.financio.trading.StateType\022\n\n\002id"
    "\030\002 \001(\003\022&\n\002ts\030\003 \001(\0132\032.google.protobuf.Tim"
    "estamp\022(\n\005error\030\n \001(\0132\027.financio.trading"
    ".ErrorH\000\0221\n\ntick_price\030\013 \001(\0132\033.financio."
    "trading.TickPriceH\000\022/\n\ttick_size\030\014 \001(\0132\032"
    ".financio.trading.TickSizeH\000\0225\n\014order_st"
    "atus\030\r \001(\0132\035.financio.trading.OrderStatu"
    "sH\000\0223\n\014order_filled\030\016 \001(\0132\033.financio.tra"
    "ding.OrderFillH\000\0223\n\010hist_bar\030\024 \001(\0132\037.fin"
    "ancio.trading.HistoricalBarH\000\0223\n\010hist_en"
    "d\030\025 \001(\0132\037.financio.trading.HistoricalEnd"
    "H\000\022;\n\017account_summary\030\036 \001(\0132 .financio.t"
    "rading.AccountSummaryH\000\022\?\n\020portfolio_upd"
    "ate\030\037 \001(\0132#.financio.trading.PortfolioPo"
    "sitionH\000\0227\n\rnews_headline\030  \001(\0132\036.financ"
    "io.trading.NewsHeadlineH\000B\t\n\007payloadb\006pr"
    "oto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_trading_2fstate_2eproto_deps[2] = {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_trading_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_trading_2fstate_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_trading_2fstate_2eproto = {
    false,
    false,
    1404,
    descriptor_table_protodef_trading_2fstate_2eproto,
    "trading/state.proto",
    &descriptor_table_trading_2fstate_2eproto_once,
    descriptor_table_trading_2fstate_2eproto_deps,
    2,
    11,
    schemas,
    file_default_instances,
    TableStruct_trading_2fstate_2eproto::offsets,
    file_level_enum_descriptors_trading_2fstate_2eproto,
    file_level_service_descriptors_trading_2fstate_2eproto,
};
namespace financio {
namespace trading {
// ===================================================================

class Error::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<Error>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Error, _impl_._has_bits_);
};

Error::Error(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Error_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.Error)
}
PROTOBUF_NDEBUG_INLINE Error::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::Error& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

Error::Error(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const Error& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, Error_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Error* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.code_ = from._impl_.code_;

  // @@protoc_insertion_point(copy_constructor:financio.trading.Error)
}
PROTOBUF_NDEBUG_INLINE Error::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void Error::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.code_ = {};
}
Error::~Error() {
  // @@protoc_insertion_point(destructor:financio.trading.Error)
  SharedDtor(*this);
}
inline void Error::SharedDtor(MessageLite& self) {
  Error& this_ = static_cast<Error&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL Error::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) Error(arena);
}
constexpr auto Error::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(Error),
                                            alignof(Error));
}
constexpr auto Error::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_Error_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &Error::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<Error>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &Error::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<Error>(), &Error::ByteSizeLong,
              &Error::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(Error, _impl_._cached_size_),
          false,
      },
      &Error::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull Error_class_data_ =
        Error::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
Error::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&Error_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(Error_class_data_.tc_table);
  return Error_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2>
Error::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Error, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    Error_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::Error>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(Error, _impl_.message_)}},
    // int32 code = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Error, _impl_.code_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(Error, _impl_.code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 code = 1;
    {PROTOBUF_FIELD_OFFSET(Error, _impl_.code_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(Error, _impl_.message_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\26\0\7\0\0\0\0\0"
    "financio.trading.Error"
    "message"
  }},
};
PROTOBUF_NOINLINE void Error::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.Error)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.message_.ClearNonDefaultToEmpty();
  }
  _impl_.code_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL Error::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const Error& this_ = static_cast<const Error&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL Error::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const Error& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.Error)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 code = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_code() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_code(), target);
    }
  }

  // string message = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.Error.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.Error)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t Error::ByteSizeLong(const MessageLite& base) {
  const Error& this_ = static_cast<const Error&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t Error::ByteSizeLong() const {
  const Error& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.Error)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string message = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // int32 code = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_code() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_code());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void Error::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Error*>(&to_msg);
  auto& from = static_cast<const Error&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.Error)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_code() != 0) {
        _this->_impl_.code_ = from._impl_.code_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Error::CopyFrom(const Error& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.Error)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Error::InternalSwap(Error* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  swap(_impl_.code_, other->_impl_.code_);
}

::google::protobuf::Metadata Error::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TickPrice::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TickPrice>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TickPrice, _impl_._has_bits_);
};

void TickPrice::clear_attrib() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.attrib_ != nullptr) _impl_.attrib_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
TickPrice::TickPrice(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TickPrice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.TickPrice)
}
PROTOBUF_NDEBUG_INLINE TickPrice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::TickPrice& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

TickPrice::TickPrice(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const TickPrice& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TickPrice_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TickPrice* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.attrib_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.attrib_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, price_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, price_),
           offsetof(Impl_, field_) -
               offsetof(Impl_, price_) +
               sizeof(Impl_::field_));

  // @@protoc_insertion_point(copy_constructor:financio.trading.TickPrice)
}
PROTOBUF_NDEBUG_INLINE TickPrice::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TickPrice::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attrib_),
           0,
           offsetof(Impl_, field_) -
               offsetof(Impl_, attrib_) +
               sizeof(Impl_::field_));
}
TickPrice::~TickPrice() {
  // @@protoc_insertion_point(destructor:financio.trading.TickPrice)
  SharedDtor(*this);
}
inline void TickPrice::SharedDtor(MessageLite& self) {
  TickPrice& this_ = static_cast<TickPrice&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.attrib_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TickPrice::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TickPrice(arena);
}
constexpr auto TickPrice::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TickPrice),
                                            alignof(TickPrice));
}
constexpr auto TickPrice::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TickPrice_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TickPrice::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TickPrice>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TickPrice::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TickPrice>(), &TickPrice::ByteSizeLong,
              &TickPrice::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TickPrice, _impl_._cached_size_),
          false,
      },
      &TickPrice::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TickPrice_class_data_ =
        TickPrice::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TickPrice::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TickPrice_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TickPrice_class_data_.tc_table);
  return TickPrice_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 0, 2>
TickPrice::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TickPrice, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    TickPrice_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::TickPrice>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double price = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 1, 0, PROTOBUF_FIELD_OFFSET(TickPrice, _impl_.price_)}},
    // int32 field = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TickPrice, _impl_.field_), 2>(),
     {16, 2, 0, PROTOBUF_FIELD_OFFSET(TickPrice, _impl_.field_)}},
    // .financio.trading.TickAttribPB attrib = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(TickPrice, _impl_.attrib_)}},
  }}, {{
    65535, 65535
  }}, {{
    // double price = 1;
    {PROTOBUF_FIELD_OFFSET(TickPrice, _impl_.price_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // int32 field = 2;
    {PROTOBUF_FIELD_OFFSET(TickPrice, _impl_.field_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .financio.trading.TickAttribPB attrib = 3;
    {PROTOBUF_FIELD_OFFSET(TickPrice, _impl_.attrib_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::financio::trading::TickAttribPB>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void TickPrice::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.TickPrice)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.attrib_ != nullptr);
    _impl_.attrib_->Clear();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.price_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.field_) -
        reinterpret_cast<char*>(&_impl_.price_)) + sizeof(_impl_.field_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TickPrice::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TickPrice& this_ = static_cast<const TickPrice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TickPrice::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TickPrice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.TickPrice)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double price = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_price(), target);
    }
  }

  // int32 field = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_field() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_field(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .financio.trading.TickAttribPB attrib = 3;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.attrib_, this_._impl_.attrib_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.TickPrice)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TickPrice::ByteSizeLong(const MessageLite& base) {
  const TickPrice& this_ = static_cast<const TickPrice&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TickPrice::ByteSizeLong() const {
  const TickPrice& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.TickPrice)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .financio.trading.TickAttribPB attrib = 3;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.attrib_);
    }
    // double price = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_price()) != 0) {
        total_size += 9;
      }
    }
    // int32 field = 2;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_field() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_field());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TickPrice::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TickPrice*>(&to_msg);
  auto& from = static_cast<const TickPrice&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.TickPrice)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.attrib_ != nullptr);
      if (_this->_impl_.attrib_ == nullptr) {
        _this->_impl_.attrib_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.attrib_);
      } else {
        _this->_impl_.attrib_->MergeFrom(*from._impl_.attrib_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_price()) != 0) {
        _this->_impl_.price_ = from._impl_.price_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_field() != 0) {
        _this->_impl_.field_ = from._impl_.field_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TickPrice::CopyFrom(const TickPrice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.TickPrice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TickPrice::InternalSwap(TickPrice* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TickPrice, _impl_.field_)
      + sizeof(TickPrice::_impl_.field_)
      - PROTOBUF_FIELD_OFFSET(TickPrice, _impl_.attrib_)>(
          reinterpret_cast<char*>(&_impl_.attrib_),
          reinterpret_cast<char*>(&other->_impl_.attrib_));
}

::google::protobuf::Metadata TickPrice::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class TickSize::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<TickSize>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(TickSize, _impl_._has_bits_);
};

TickSize::TickSize(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TickSize_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.TickSize)
}
TickSize::TickSize(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TickSize& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, TickSize_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE TickSize::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void TickSize::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, size_),
           0,
           offsetof(Impl_, field_) -
               offsetof(Impl_, size_) +
               sizeof(Impl_::field_));
}
TickSize::~TickSize() {
  // @@protoc_insertion_point(destructor:financio.trading.TickSize)
  SharedDtor(*this);
}
inline void TickSize::SharedDtor(MessageLite& self) {
  TickSize& this_ = static_cast<TickSize&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL TickSize::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) TickSize(arena);
}
constexpr auto TickSize::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(TickSize),
                                            alignof(TickSize));
}
constexpr auto TickSize::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_TickSize_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &TickSize::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<TickSize>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &TickSize::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<TickSize>(), &TickSize::ByteSizeLong,
              &TickSize::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(TickSize, _impl_._cached_size_),
          false,
      },
      &TickSize::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull TickSize_class_data_ =
        TickSize::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
TickSize::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&TickSize_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(TickSize_class_data_.tc_table);
  return TickSize_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 0, 2>
TickSize::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TickSize, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    TickSize_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::TickSize>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double size = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 0, 0, PROTOBUF_FIELD_OFFSET(TickSize, _impl_.size_)}},
    // int32 field = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(TickSize, _impl_.field_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(TickSize, _impl_.field_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 field = 1;
    {PROTOBUF_FIELD_OFFSET(TickSize, _impl_.field_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // double size = 2;
    {PROTOBUF_FIELD_OFFSET(TickSize, _impl_.size_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void TickSize::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.TickSize)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.size_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.field_) -
        reinterpret_cast<char*>(&_impl_.size_)) + sizeof(_impl_.field_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL TickSize::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const TickSize& this_ = static_cast<const TickSize&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL TickSize::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const TickSize& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.TickSize)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 field = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_field() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_field(), target);
    }
  }

  // double size = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_size()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_size(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.TickSize)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t TickSize::ByteSizeLong(const MessageLite& base) {
  const TickSize& this_ = static_cast<const TickSize&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t TickSize::ByteSizeLong() const {
  const TickSize& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.TickSize)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // double size = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_size()) != 0) {
        total_size += 9;
      }
    }
    // int32 field = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_field() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_field());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void TickSize::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TickSize*>(&to_msg);
  auto& from = static_cast<const TickSize&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.TickSize)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_size()) != 0) {
        _this->_impl_.size_ = from._impl_.size_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_field() != 0) {
        _this->_impl_.field_ = from._impl_.field_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TickSize::CopyFrom(const TickSize& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.TickSize)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TickSize::InternalSwap(TickSize* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(TickSize, _impl_.field_)
      + sizeof(TickSize::_impl_.field_)
      - PROTOBUF_FIELD_OFFSET(TickSize, _impl_.size_)>(
          reinterpret_cast<char*>(&_impl_.size_),
          reinterpret_cast<char*>(&other->_impl_.size_));
}

::google::protobuf::Metadata TickSize::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderStatus::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderStatus>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_._has_bits_);
};

OrderStatus::OrderStatus(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.OrderStatus)
}
PROTOBUF_NDEBUG_INLINE OrderStatus::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::OrderStatus& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        status_(arena, from.status_) {}

OrderStatus::OrderStatus(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderStatus& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderStatus_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderStatus* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, filled_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, filled_),
           offsetof(Impl_, avg_fill_px_) -
               offsetof(Impl_, filled_) +
               sizeof(Impl_::avg_fill_px_));

  // @@protoc_insertion_point(copy_constructor:financio.trading.OrderStatus)
}
PROTOBUF_NDEBUG_INLINE OrderStatus::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        status_(arena) {}

inline void OrderStatus::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, filled_),
           0,
           offsetof(Impl_, avg_fill_px_) -
               offsetof(Impl_, filled_) +
               sizeof(Impl_::avg_fill_px_));
}
OrderStatus::~OrderStatus() {
  // @@protoc_insertion_point(destructor:financio.trading.OrderStatus)
  SharedDtor(*this);
}
inline void OrderStatus::SharedDtor(MessageLite& self) {
  OrderStatus& this_ = static_cast<OrderStatus&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.status_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderStatus::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderStatus(arena);
}
constexpr auto OrderStatus::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderStatus),
                                            alignof(OrderStatus));
}
constexpr auto OrderStatus::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderStatus_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderStatus::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderStatus>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderStatus::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderStatus>(), &OrderStatus::ByteSizeLong,
              &OrderStatus::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_._cached_size_),
          false,
      },
      &OrderStatus::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderStatus_class_data_ =
        OrderStatus::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderStatus::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderStatus_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderStatus_class_data_.tc_table);
  return OrderStatus_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 43, 2>
OrderStatus::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OrderStatus_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::OrderStatus>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double avg_fill_px = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.avg_fill_px_)}},
    // string status = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.status_)}},
    // double filled = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 1, 0, PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.filled_)}},
    // double remaining = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.remaining_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string status = 1;
    {PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.status_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double filled = 2;
    {PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.filled_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double remaining = 3;
    {PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.remaining_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double avg_fill_px = 4;
    {PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.avg_fill_px_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\34\6\0\0\0\0\0\0"
    "financio.trading.OrderStatus"
    "status"
  }},
};
PROTOBUF_NOINLINE void OrderStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.OrderStatus)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.status_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x0000000eU) != 0) {
    ::memset(&_impl_.filled_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.avg_fill_px_) -
        reinterpret_cast<char*>(&_impl_.filled_)) + sizeof(_impl_.avg_fill_px_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderStatus::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderStatus& this_ = static_cast<const OrderStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderStatus::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.OrderStatus)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string status = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_status().empty()) {
      const ::std::string& _s = this_._internal_status();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.OrderStatus.status");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // double filled = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_filled()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_filled(), target);
    }
  }

  // double remaining = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_remaining()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_remaining(), target);
    }
  }

  // double avg_fill_px = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_avg_fill_px()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_avg_fill_px(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.OrderStatus)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderStatus::ByteSizeLong(const MessageLite& base) {
  const OrderStatus& this_ = static_cast<const OrderStatus&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderStatus::ByteSizeLong() const {
  const OrderStatus& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.OrderStatus)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string status = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_status().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_status());
      }
    }
    // double filled = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_filled()) != 0) {
        total_size += 9;
      }
    }
    // double remaining = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_remaining()) != 0) {
        total_size += 9;
      }
    }
    // double avg_fill_px = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_avg_fill_px()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderStatus::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderStatus*>(&to_msg);
  auto& from = static_cast<const OrderStatus&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.OrderStatus)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_status().empty()) {
        _this->_internal_set_status(from._internal_status());
      } else {
        if (_this->_impl_.status_.IsDefault()) {
          _this->_internal_set_status("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_filled()) != 0) {
        _this->_impl_.filled_ = from._impl_.filled_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_remaining()) != 0) {
        _this->_impl_.remaining_ = from._impl_.remaining_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_avg_fill_px()) != 0) {
        _this->_impl_.avg_fill_px_ = from._impl_.avg_fill_px_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderStatus::CopyFrom(const OrderStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.OrderStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderStatus::InternalSwap(OrderStatus* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.status_, &other->_impl_.status_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.avg_fill_px_)
      + sizeof(OrderStatus::_impl_.avg_fill_px_)
      - PROTOBUF_FIELD_OFFSET(OrderStatus, _impl_.filled_)>(
          reinterpret_cast<char*>(&_impl_.filled_),
          reinterpret_cast<char*>(&other->_impl_.filled_));
}

::google::protobuf::Metadata OrderStatus::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class OrderFill::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderFill>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderFill, _impl_._has_bits_);
};

void OrderFill::clear_exec() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.exec_ != nullptr) _impl_.exec_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
OrderFill::OrderFill(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderFill_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.OrderFill)
}
PROTOBUF_NDEBUG_INLINE OrderFill::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::OrderFill& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

OrderFill::OrderFill(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderFill& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderFill_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderFill* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.exec_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exec_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:financio.trading.OrderFill)
}
PROTOBUF_NDEBUG_INLINE OrderFill::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void OrderFill::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.exec_ = {};
}
OrderFill::~OrderFill() {
  // @@protoc_insertion_point(destructor:financio.trading.OrderFill)
  SharedDtor(*this);
}
inline void OrderFill::SharedDtor(MessageLite& self) {
  OrderFill& this_ = static_cast<OrderFill&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.exec_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderFill::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderFill(arena);
}
constexpr auto OrderFill::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(OrderFill),
                                            alignof(OrderFill));
}
constexpr auto OrderFill::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderFill_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderFill::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderFill>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderFill::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderFill>(), &OrderFill::ByteSizeLong,
              &OrderFill::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderFill, _impl_._cached_size_),
          false,
      },
      &OrderFill::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderFill_class_data_ =
        OrderFill::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderFill::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderFill_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderFill_class_data_.tc_table);
  return OrderFill_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
OrderFill::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderFill, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    OrderFill_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::OrderFill>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .financio.trading.ExecutionPB exec = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderFill, _impl_.exec_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .financio.trading.ExecutionPB exec = 1;
    {PROTOBUF_FIELD_OFFSET(OrderFill, _impl_.exec_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::financio::trading::ExecutionPB>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void OrderFill::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.OrderFill)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.exec_ != nullptr);
    _impl_.exec_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderFill::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderFill& this_ = static_cast<const OrderFill&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderFill::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderFill& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.OrderFill)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .financio.trading.ExecutionPB exec = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.exec_, this_._impl_.exec_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.OrderFill)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderFill::ByteSizeLong(const MessageLite& base) {
  const OrderFill& this_ = static_cast<const OrderFill&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderFill::ByteSizeLong() const {
  const OrderFill& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.OrderFill)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .financio.trading.ExecutionPB exec = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.exec_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderFill::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderFill*>(&to_msg);
  auto& from = static_cast<const OrderFill&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.OrderFill)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.exec_ != nullptr);
    if (_this->_impl_.exec_ == nullptr) {
      _this->_impl_.exec_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.exec_);
    } else {
      _this->_impl_.exec_->MergeFrom(*from._impl_.exec_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderFill::CopyFrom(const OrderFill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.OrderFill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderFill::InternalSwap(OrderFill* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.exec_, other->_impl_.exec_);
}

::google::protobuf::Metadata OrderFill::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoricalBar::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HistoricalBar>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HistoricalBar, _impl_._has_bits_);
};

void HistoricalBar::clear_bar() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.bar_ != nullptr) _impl_.bar_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
HistoricalBar::HistoricalBar(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoricalBar_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.HistoricalBar)
}
PROTOBUF_NDEBUG_INLINE HistoricalBar::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::HistoricalBar& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0} {}

HistoricalBar::HistoricalBar(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HistoricalBar& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoricalBar_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoricalBar* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.bar_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bar_)
                : nullptr;

  // @@protoc_insertion_point(copy_constructor:financio.trading.HistoricalBar)
}
PROTOBUF_NDEBUG_INLINE HistoricalBar::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void HistoricalBar::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.bar_ = {};
}
HistoricalBar::~HistoricalBar() {
  // @@protoc_insertion_point(destructor:financio.trading.HistoricalBar)
  SharedDtor(*this);
}
inline void HistoricalBar::SharedDtor(MessageLite& self) {
  HistoricalBar& this_ = static_cast<HistoricalBar&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.bar_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HistoricalBar::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HistoricalBar(arena);
}
constexpr auto HistoricalBar::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(HistoricalBar),
                                            alignof(HistoricalBar));
}
constexpr auto HistoricalBar::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HistoricalBar_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HistoricalBar::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HistoricalBar>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HistoricalBar::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HistoricalBar>(), &HistoricalBar::ByteSizeLong,
              &HistoricalBar::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HistoricalBar, _impl_._cached_size_),
          false,
      },
      &HistoricalBar::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HistoricalBar_class_data_ =
        HistoricalBar::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HistoricalBar::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HistoricalBar_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HistoricalBar_class_data_.tc_table);
  return HistoricalBar_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
HistoricalBar::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistoricalBar, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    HistoricalBar_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::HistoricalBar>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .financio.trading.BarPB bar = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HistoricalBar, _impl_.bar_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .financio.trading.BarPB bar = 1;
    {PROTOBUF_FIELD_OFFSET(HistoricalBar, _impl_.bar_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::financio::trading::BarPB>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void HistoricalBar::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.HistoricalBar)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.bar_ != nullptr);
    _impl_.bar_->Clear();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HistoricalBar::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HistoricalBar& this_ = static_cast<const HistoricalBar&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HistoricalBar::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HistoricalBar& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.HistoricalBar)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // .financio.trading.BarPB bar = 1;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        1, *this_._impl_.bar_, this_._impl_.bar_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.HistoricalBar)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HistoricalBar::ByteSizeLong(const MessageLite& base) {
  const HistoricalBar& this_ = static_cast<const HistoricalBar&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HistoricalBar::ByteSizeLong() const {
  const HistoricalBar& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.HistoricalBar)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // .financio.trading.BarPB bar = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.bar_);
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HistoricalBar::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoricalBar*>(&to_msg);
  auto& from = static_cast<const HistoricalBar&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.HistoricalBar)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(from._impl_.bar_ != nullptr);
    if (_this->_impl_.bar_ == nullptr) {
      _this->_impl_.bar_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.bar_);
    } else {
      _this->_impl_.bar_->MergeFrom(*from._impl_.bar_);
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoricalBar::CopyFrom(const HistoricalBar& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.HistoricalBar)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoricalBar::InternalSwap(HistoricalBar* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.bar_, other->_impl_.bar_);
}

::google::protobuf::Metadata HistoricalBar::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoricalEnd::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HistoricalEnd>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HistoricalEnd, _impl_._has_bits_);
};

HistoricalEnd::HistoricalEnd(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoricalEnd_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.HistoricalEnd)
}
PROTOBUF_NDEBUG_INLINE HistoricalEnd::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::HistoricalEnd& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        start_(arena, from.start_),
        end_(arena, from.end_) {}

HistoricalEnd::HistoricalEnd(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HistoricalEnd& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoricalEnd_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoricalEnd* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:financio.trading.HistoricalEnd)
}
PROTOBUF_NDEBUG_INLINE HistoricalEnd::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        start_(arena),
        end_(arena) {}

inline void HistoricalEnd::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HistoricalEnd::~HistoricalEnd() {
  // @@protoc_insertion_point(destructor:financio.trading.HistoricalEnd)
  SharedDtor(*this);
}
inline void HistoricalEnd::SharedDtor(MessageLite& self) {
  HistoricalEnd& this_ = static_cast<HistoricalEnd&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.start_.Destroy();
  this_._impl_.end_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HistoricalEnd::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HistoricalEnd(arena);
}
constexpr auto HistoricalEnd::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HistoricalEnd),
                                            alignof(HistoricalEnd));
}
constexpr auto HistoricalEnd::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HistoricalEnd_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HistoricalEnd::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HistoricalEnd>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HistoricalEnd::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HistoricalEnd>(), &HistoricalEnd::ByteSizeLong,
              &HistoricalEnd::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HistoricalEnd, _impl_._cached_size_),
          false,
      },
      &HistoricalEnd::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HistoricalEnd_class_data_ =
        HistoricalEnd::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HistoricalEnd::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HistoricalEnd_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HistoricalEnd_class_data_.tc_table);
  return HistoricalEnd_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 47, 2>
HistoricalEnd::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistoricalEnd, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HistoricalEnd_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::HistoricalEnd>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string end = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(HistoricalEnd, _impl_.end_)}},
    // string start = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HistoricalEnd, _impl_.start_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string start = 1;
    {PROTOBUF_FIELD_OFFSET(HistoricalEnd, _impl_.start_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string end = 2;
    {PROTOBUF_FIELD_OFFSET(HistoricalEnd, _impl_.end_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\36\5\3\0\0\0\0\0"
    "financio.trading.HistoricalEnd"
    "start"
    "end"
  }},
};
PROTOBUF_NOINLINE void HistoricalEnd::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.HistoricalEnd)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.start_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.end_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HistoricalEnd::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HistoricalEnd& this_ = static_cast<const HistoricalEnd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HistoricalEnd::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HistoricalEnd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.HistoricalEnd)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string start = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_start().empty()) {
      const ::std::string& _s = this_._internal_start();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HistoricalEnd.start");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string end = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_end().empty()) {
      const ::std::string& _s = this_._internal_end();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HistoricalEnd.end");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.HistoricalEnd)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HistoricalEnd::ByteSizeLong(const MessageLite& base) {
  const HistoricalEnd& this_ = static_cast<const HistoricalEnd&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HistoricalEnd::ByteSizeLong() const {
  const HistoricalEnd& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.HistoricalEnd)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string start = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_start().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_start());
      }
    }
    // string end = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_end().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_end());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HistoricalEnd::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoricalEnd*>(&to_msg);
  auto& from = static_cast<const HistoricalEnd&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.HistoricalEnd)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_start().empty()) {
        _this->_internal_set_start(from._internal_start());
      } else {
        if (_this->_impl_.start_.IsDefault()) {
          _this->_internal_set_start("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_end().empty()) {
        _this->_internal_set_end(from._internal_end());
      } else {
        if (_this->_impl_.end_.IsDefault()) {
          _this->_internal_set_end("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoricalEnd::CopyFrom(const HistoricalEnd& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.HistoricalEnd)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoricalEnd::InternalSwap(HistoricalEnd* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.start_, &other->_impl_.start_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.end_, &other->_impl_.end_, arena);
}

::google::protobuf::Metadata HistoricalEnd::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class AccountSummary::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<AccountSummary>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_._has_bits_);
};

AccountSummary::AccountSummary(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AccountSummary_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.AccountSummary)
}
PROTOBUF_NDEBUG_INLINE AccountSummary::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::AccountSummary& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_(arena, from.account_),
        key_(arena, from.key_),
        value_(arena, from.value_),
        currency_(arena, from.currency_) {}

AccountSummary::AccountSummary(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const AccountSummary& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, AccountSummary_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  AccountSummary* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:financio.trading.AccountSummary)
}
PROTOBUF_NDEBUG_INLINE AccountSummary::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_(arena),
        key_(arena),
        value_(arena),
        currency_(arena) {}

inline void AccountSummary::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
AccountSummary::~AccountSummary() {
  // @@protoc_insertion_point(destructor:financio.trading.AccountSummary)
  SharedDtor(*this);
}
inline void AccountSummary::SharedDtor(MessageLite& self) {
  AccountSummary& this_ = static_cast<AccountSummary&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_.Destroy();
  this_._impl_.key_.Destroy();
  this_._impl_.value_.Destroy();
  this_._impl_.currency_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL AccountSummary::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) AccountSummary(arena);
}
constexpr auto AccountSummary::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(AccountSummary),
                                            alignof(AccountSummary));
}
constexpr auto AccountSummary::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_AccountSummary_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &AccountSummary::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<AccountSummary>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &AccountSummary::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<AccountSummary>(), &AccountSummary::ByteSizeLong,
              &AccountSummary::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_._cached_size_),
          false,
      },
      &AccountSummary::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull AccountSummary_class_data_ =
        AccountSummary::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
AccountSummary::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&AccountSummary_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(AccountSummary_class_data_.tc_table);
  return AccountSummary_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 63, 2>
AccountSummary::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    AccountSummary_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::AccountSummary>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string currency = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_.currency_)}},
    // string account = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_.account_)}},
    // string key = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_.key_)}},
    // string value = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_.value_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account = 1;
    {PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_.account_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string key = 2;
    {PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_.key_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string value = 3;
    {PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_.value_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currency = 4;
    {PROTOBUF_FIELD_OFFSET(AccountSummary, _impl_.currency_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\37\7\3\5\10\0\0\0"
    "financio.trading.AccountSummary"
    "account"
    "key"
    "value"
    "currency"
  }},
};
PROTOBUF_NOINLINE void AccountSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.AccountSummary)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.account_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.key_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.value_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.currency_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL AccountSummary::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const AccountSummary& this_ = static_cast<const AccountSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL AccountSummary::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const AccountSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.AccountSummary)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_account().empty()) {
      const ::std::string& _s = this_._internal_account();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.AccountSummary.account");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string key = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_key().empty()) {
      const ::std::string& _s = this_._internal_key();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.AccountSummary.key");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string value = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_value().empty()) {
      const ::std::string& _s = this_._internal_value();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.AccountSummary.value");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string currency = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_currency().empty()) {
      const ::std::string& _s = this_._internal_currency();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.AccountSummary.currency");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.AccountSummary)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t AccountSummary::ByteSizeLong(const MessageLite& base) {
  const AccountSummary& this_ = static_cast<const AccountSummary&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t AccountSummary::ByteSizeLong() const {
  const AccountSummary& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.AccountSummary)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string account = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_account().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account());
      }
    }
    // string key = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_key().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_key());
      }
    }
    // string value = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_value().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_value());
      }
    }
    // string currency = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_currency().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_currency());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void AccountSummary::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<AccountSummary*>(&to_msg);
  auto& from = static_cast<const AccountSummary&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.AccountSummary)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_account().empty()) {
        _this->_internal_set_account(from._internal_account());
      } else {
        if (_this->_impl_.account_.IsDefault()) {
          _this->_internal_set_account("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_key().empty()) {
        _this->_internal_set_key(from._internal_key());
      } else {
        if (_this->_impl_.key_.IsDefault()) {
          _this->_internal_set_key("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_value().empty()) {
        _this->_internal_set_value(from._internal_value());
      } else {
        if (_this->_impl_.value_.IsDefault()) {
          _this->_internal_set_value("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_currency().empty()) {
        _this->_internal_set_currency(from._internal_currency());
      } else {
        if (_this->_impl_.currency_.IsDefault()) {
          _this->_internal_set_currency("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void AccountSummary::CopyFrom(const AccountSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.AccountSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void AccountSummary::InternalSwap(AccountSummary* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_, &other->_impl_.account_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.key_, &other->_impl_.key_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.value_, &other->_impl_.value_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
}

::google::protobuf::Metadata AccountSummary::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PortfolioPosition::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PortfolioPosition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_._has_bits_);
};

PortfolioPosition::PortfolioPosition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PortfolioPosition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.PortfolioPosition)
}
PROTOBUF_NDEBUG_INLINE PortfolioPosition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::PortfolioPosition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_(arena, from.account_),
        symbol_(arena, from.symbol_) {}

PortfolioPosition::PortfolioPosition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PortfolioPosition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PortfolioPosition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PortfolioPosition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, position_),
           offsetof(Impl_, avg_cost_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::avg_cost_));

  // @@protoc_insertion_point(copy_constructor:financio.trading.PortfolioPosition)
}
PROTOBUF_NDEBUG_INLINE PortfolioPosition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        account_(arena),
        symbol_(arena) {}

inline void PortfolioPosition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, position_),
           0,
           offsetof(Impl_, avg_cost_) -
               offsetof(Impl_, position_) +
               sizeof(Impl_::avg_cost_));
}
PortfolioPosition::~PortfolioPosition() {
  // @@protoc_insertion_point(destructor:financio.trading.PortfolioPosition)
  SharedDtor(*this);
}
inline void PortfolioPosition::SharedDtor(MessageLite& self) {
  PortfolioPosition& this_ = static_cast<PortfolioPosition&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PortfolioPosition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PortfolioPosition(arena);
}
constexpr auto PortfolioPosition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PortfolioPosition),
                                            alignof(PortfolioPosition));
}
constexpr auto PortfolioPosition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PortfolioPosition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PortfolioPosition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PortfolioPosition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PortfolioPosition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PortfolioPosition>(), &PortfolioPosition::ByteSizeLong,
              &PortfolioPosition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_._cached_size_),
          false,
      },
      &PortfolioPosition::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PortfolioPosition_class_data_ =
        PortfolioPosition::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PortfolioPosition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PortfolioPosition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PortfolioPosition_class_data_.tc_table);
  return PortfolioPosition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 56, 2>
PortfolioPosition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PortfolioPosition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::PortfolioPosition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // double avg_cost = 4;
    {::_pbi::TcParser::FastF64S1,
     {33, 3, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.avg_cost_)}},
    // string account = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.account_)}},
    // string symbol = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.symbol_)}},
    // double position = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 2, 0, PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.position_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string account = 1;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.account_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string symbol = 2;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.symbol_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // double position = 3;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.position_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double avg_cost = 4;
    {PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.avg_cost_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\42\7\6\0\0\0\0\0"
    "financio.trading.PortfolioPosition"
    "account"
    "symbol"
  }},
};
PROTOBUF_NOINLINE void PortfolioPosition::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.PortfolioPosition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.account_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.symbol_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000000cU) != 0) {
    ::memset(&_impl_.position_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.avg_cost_) -
        reinterpret_cast<char*>(&_impl_.position_)) + sizeof(_impl_.avg_cost_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PortfolioPosition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PortfolioPosition& this_ = static_cast<const PortfolioPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PortfolioPosition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PortfolioPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.PortfolioPosition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string account = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_account().empty()) {
      const ::std::string& _s = this_._internal_account();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.PortfolioPosition.account");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string symbol = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_symbol().empty()) {
      const ::std::string& _s = this_._internal_symbol();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.PortfolioPosition.symbol");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // double position = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_position()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_position(), target);
    }
  }

  // double avg_cost = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_avg_cost()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          4, this_._internal_avg_cost(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.PortfolioPosition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PortfolioPosition::ByteSizeLong(const MessageLite& base) {
  const PortfolioPosition& this_ = static_cast<const PortfolioPosition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PortfolioPosition::ByteSizeLong() const {
  const PortfolioPosition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.PortfolioPosition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string account = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_account().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_account());
      }
    }
    // string symbol = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_symbol().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_symbol());
      }
    }
    // double position = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_position()) != 0) {
        total_size += 9;
      }
    }
    // double avg_cost = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_avg_cost()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PortfolioPosition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PortfolioPosition*>(&to_msg);
  auto& from = static_cast<const PortfolioPosition&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.PortfolioPosition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_account().empty()) {
        _this->_internal_set_account(from._internal_account());
      } else {
        if (_this->_impl_.account_.IsDefault()) {
          _this->_internal_set_account("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_symbol().empty()) {
        _this->_internal_set_symbol(from._internal_symbol());
      } else {
        if (_this->_impl_.symbol_.IsDefault()) {
          _this->_internal_set_symbol("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_position()) != 0) {
        _this->_impl_.position_ = from._impl_.position_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_avg_cost()) != 0) {
        _this->_impl_.avg_cost_ = from._impl_.avg_cost_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PortfolioPosition::CopyFrom(const PortfolioPosition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.PortfolioPosition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PortfolioPosition::InternalSwap(PortfolioPosition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_, &other->_impl_.account_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.avg_cost_)
      + sizeof(PortfolioPosition::_impl_.avg_cost_)
      - PROTOBUF_FIELD_OFFSET(PortfolioPosition, _impl_.position_)>(
          reinterpret_cast<char*>(&_impl_.position_),
          reinterpret_cast<char*>(&other->_impl_.position_));
}

::google::protobuf::Metadata PortfolioPosition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class NewsHeadline::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<NewsHeadline>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(NewsHeadline, _impl_._has_bits_);
};

NewsHeadline::NewsHeadline(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NewsHeadline_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.NewsHeadline)
}
PROTOBUF_NDEBUG_INLINE NewsHeadline::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::NewsHeadline& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        provider_(arena, from.provider_),
        headline_(arena, from.headline_) {}

NewsHeadline::NewsHeadline(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const NewsHeadline& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, NewsHeadline_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  NewsHeadline* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:financio.trading.NewsHeadline)
}
PROTOBUF_NDEBUG_INLINE NewsHeadline::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        provider_(arena),
        headline_(arena) {}

inline void NewsHeadline::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NewsHeadline::~NewsHeadline() {
  // @@protoc_insertion_point(destructor:financio.trading.NewsHeadline)
  SharedDtor(*this);
}
inline void NewsHeadline::SharedDtor(MessageLite& self) {
  NewsHeadline& this_ = static_cast<NewsHeadline&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.provider_.Destroy();
  this_._impl_.headline_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL NewsHeadline::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) NewsHeadline(arena);
}
constexpr auto NewsHeadline::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(NewsHeadline),
                                            alignof(NewsHeadline));
}
constexpr auto NewsHeadline::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_NewsHeadline_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &NewsHeadline::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<NewsHeadline>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &NewsHeadline::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<NewsHeadline>(), &NewsHeadline::ByteSizeLong,
              &NewsHeadline::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(NewsHeadline, _impl_._cached_size_),
          false,
      },
      &NewsHeadline::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull NewsHeadline_class_data_ =
        NewsHeadline::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
NewsHeadline::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&NewsHeadline_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(NewsHeadline_class_data_.tc_table);
  return NewsHeadline_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 54, 2>
NewsHeadline::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(NewsHeadline, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    NewsHeadline_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::NewsHeadline>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string headline = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(NewsHeadline, _impl_.headline_)}},
    // string provider = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(NewsHeadline, _impl_.provider_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string provider = 1;
    {PROTOBUF_FIELD_OFFSET(NewsHeadline, _impl_.provider_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string headline = 2;
    {PROTOBUF_FIELD_OFFSET(NewsHeadline, _impl_.headline_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\10\10\0\0\0\0\0"
    "financio.trading.NewsHeadline"
    "provider"
    "headline"
  }},
};
PROTOBUF_NOINLINE void NewsHeadline::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.NewsHeadline)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.provider_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.headline_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL NewsHeadline::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const NewsHeadline& this_ = static_cast<const NewsHeadline&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL NewsHeadline::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const NewsHeadline& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.NewsHeadline)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string provider = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_provider().empty()) {
      const ::std::string& _s = this_._internal_provider();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.NewsHeadline.provider");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string headline = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_headline().empty()) {
      const ::std::string& _s = this_._internal_headline();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.NewsHeadline.headline");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.NewsHeadline)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t NewsHeadline::ByteSizeLong(const MessageLite& base) {
  const NewsHeadline& this_ = static_cast<const NewsHeadline&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t NewsHeadline::ByteSizeLong() const {
  const NewsHeadline& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.NewsHeadline)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string provider = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_provider().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_provider());
      }
    }
    // string headline = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_headline().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_headline());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void NewsHeadline::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<NewsHeadline*>(&to_msg);
  auto& from = static_cast<const NewsHeadline&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.NewsHeadline)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_provider().empty()) {
        _this->_internal_set_provider(from._internal_provider());
      } else {
        if (_this->_impl_.provider_.IsDefault()) {
          _this->_internal_set_provider("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_headline().empty()) {
        _this->_internal_set_headline(from._internal_headline());
      } else {
        if (_this->_impl_.headline_.IsDefault()) {
          _this->_internal_set_headline("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NewsHeadline::CopyFrom(const NewsHeadline& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.NewsHeadline)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void NewsHeadline::InternalSwap(NewsHeadline* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.provider_, &other->_impl_.provider_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.headline_, &other->_impl_.headline_, arena);
}

::google::protobuf::Metadata NewsHeadline::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StateMessage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<StateMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(StateMessage, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::financio::trading::StateMessage, _impl_._oneof_case_);
};

void StateMessage::clear_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ts_ != nullptr) _impl_.ts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
void StateMessage::set_allocated_error(::financio::trading::Error* PROTOBUF_NULLABLE error) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (error) {
    ::google::protobuf::Arena* submessage_arena = error->GetArena();
    if (message_arena != submessage_arena) {
      error = ::google::protobuf::internal::GetOwnedMessage(message_arena, error, submessage_arena);
    }
    set_has_error();
    _impl_.payload_.error_ = error;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.error)
}
void StateMessage::set_allocated_tick_price(::financio::trading::TickPrice* PROTOBUF_NULLABLE tick_price) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (tick_price) {
    ::google::protobuf::Arena* submessage_arena = tick_price->GetArena();
    if (message_arena != submessage_arena) {
      tick_price = ::google::protobuf::internal::GetOwnedMessage(message_arena, tick_price, submessage_arena);
    }
    set_has_tick_price();
    _impl_.payload_.tick_price_ = tick_price;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.tick_price)
}
void StateMessage::set_allocated_tick_size(::financio::trading::TickSize* PROTOBUF_NULLABLE tick_size) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (tick_size) {
    ::google::protobuf::Arena* submessage_arena = tick_size->GetArena();
    if (message_arena != submessage_arena) {
      tick_size = ::google::protobuf::internal::GetOwnedMessage(message_arena, tick_size, submessage_arena);
    }
    set_has_tick_size();
    _impl_.payload_.tick_size_ = tick_size;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.tick_size)
}
void StateMessage::set_allocated_order_status(::financio::trading::OrderStatus* PROTOBUF_NULLABLE order_status) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_status) {
    ::google::protobuf::Arena* submessage_arena = order_status->GetArena();
    if (message_arena != submessage_arena) {
      order_status = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_status, submessage_arena);
    }
    set_has_order_status();
    _impl_.payload_.order_status_ = order_status;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.order_status)
}
void StateMessage::set_allocated_order_filled(::financio::trading::OrderFill* PROTOBUF_NULLABLE order_filled) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (order_filled) {
    ::google::protobuf::Arena* submessage_arena = order_filled->GetArena();
    if (message_arena != submessage_arena) {
      order_filled = ::google::protobuf::internal::GetOwnedMessage(message_arena, order_filled, submessage_arena);
    }
    set_has_order_filled();
    _impl_.payload_.order_filled_ = order_filled;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.order_filled)
}
void StateMessage::set_allocated_hist_bar(::financio::trading::HistoricalBar* PROTOBUF_NULLABLE hist_bar) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (hist_bar) {
    ::google::protobuf::Arena* submessage_arena = hist_bar->GetArena();
    if (message_arena != submessage_arena) {
      hist_bar = ::google::protobuf::internal::GetOwnedMessage(message_arena, hist_bar, submessage_arena);
    }
    set_has_hist_bar();
    _impl_.payload_.hist_bar_ = hist_bar;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.hist_bar)
}
void StateMessage::set_allocated_hist_end(::financio::trading::HistoricalEnd* PROTOBUF_NULLABLE hist_end) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (hist_end) {
    ::google::protobuf::Arena* submessage_arena = hist_end->GetArena();
    if (message_arena != submessage_arena) {
      hist_end = ::google::protobuf::internal::GetOwnedMessage(message_arena, hist_end, submessage_arena);
    }
    set_has_hist_end();
    _impl_.payload_.hist_end_ = hist_end;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.hist_end)
}
void StateMessage::set_allocated_account_summary(::financio::trading::AccountSummary* PROTOBUF_NULLABLE account_summary) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (account_summary) {
    ::google::protobuf::Arena* submessage_arena = account_summary->GetArena();
    if (message_arena != submessage_arena) {
      account_summary = ::google::protobuf::internal::GetOwnedMessage(message_arena, account_summary, submessage_arena);
    }
    set_has_account_summary();
    _impl_.payload_.account_summary_ = account_summary;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.account_summary)
}
void StateMessage::set_allocated_portfolio_update(::financio::trading::PortfolioPosition* PROTOBUF_NULLABLE portfolio_update) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (portfolio_update) {
    ::google::protobuf::Arena* submessage_arena = portfolio_update->GetArena();
    if (message_arena != submessage_arena) {
      portfolio_update = ::google::protobuf::internal::GetOwnedMessage(message_arena, portfolio_update, submessage_arena);
    }
    set_has_portfolio_update();
    _impl_.payload_.portfolio_update_ = portfolio_update;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.portfolio_update)
}
void StateMessage::set_allocated_news_headline(::financio::trading::NewsHeadline* PROTOBUF_NULLABLE news_headline) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (news_headline) {
    ::google::protobuf::Arena* submessage_arena = news_headline->GetArena();
    if (message_arena != submessage_arena) {
      news_headline = ::google::protobuf::internal::GetOwnedMessage(message_arena, news_headline, submessage_arena);
    }
    set_has_news_headline();
    _impl_.payload_.news_headline_ = news_headline;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.StateMessage.news_headline)
}
StateMessage::StateMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StateMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.StateMessage)
}
PROTOBUF_NDEBUG_INLINE StateMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::StateMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_{},
        _oneof_case_{from._oneof_case_[0]} {}

StateMessage::StateMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StateMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, StateMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StateMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ts_ = ((cached_has_bits & 0x00000001U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ts_)
                : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, id_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, id_),
           offsetof(Impl_, type_) -
               offsetof(Impl_, id_) +
               sizeof(Impl_::type_));
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kError:
        _impl_.payload_.error_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.error_);
        break;
      case kTickPrice:
        _impl_.payload_.tick_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.tick_price_);
        break;
      case kTickSize:
        _impl_.payload_.tick_size_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.tick_size_);
        break;
      case kOrderStatus:
        _impl_.payload_.order_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_status_);
        break;
      case kOrderFilled:
        _impl_.payload_.order_filled_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_filled_);
        break;
      case kHistBar:
        _impl_.payload_.hist_bar_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.hist_bar_);
        break;
      case kHistEnd:
        _impl_.payload_.hist_end_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.hist_end_);
        break;
      case kAccountSummary:
        _impl_.payload_.account_summary_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_summary_);
        break;
      case kPortfolioUpdate:
        _impl_.payload_.portfolio_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.portfolio_update_);
        break;
      case kNewsHeadline:
        _impl_.payload_.news_headline_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.news_headline_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:financio.trading.StateMessage)
}
PROTOBUF_NDEBUG_INLINE StateMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        payload_{},
        _oneof_case_{} {}

inline void StateMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ts_),
           0,
           offsetof(Impl_, type_) -
               offsetof(Impl_, ts_) +
               sizeof(Impl_::type_));
}
StateMessage::~StateMessage() {
  // @@protoc_insertion_point(destructor:financio.trading.StateMessage)
  SharedDtor(*this);
}
inline void StateMessage::SharedDtor(MessageLite& self) {
  StateMessage& this_ = static_cast<StateMessage&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  delete this_._impl_.ts_;
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void StateMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:financio.trading.StateMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kError: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.error_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.error_);
      }
      break;
    }
    case kTickPrice: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.tick_price_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.tick_price_);
      }
      break;
    }
    case kTickSize: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.tick_size_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.tick_size_);
      }
      break;
    }
    case kOrderStatus: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_status_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_status_);
      }
      break;
    }
    case kOrderFilled: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.order_filled_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.order_filled_);
      }
      break;
    }
    case kHistBar: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.hist_bar_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.hist_bar_);
      }
      break;
    }
    case kHistEnd: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.hist_end_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.hist_end_);
      }
      break;
    }
    case kAccountSummary: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.account_summary_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.account_summary_);
      }
      break;
    }
    case kPortfolioUpdate: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.portfolio_update_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.portfolio_update_);
      }
      break;
    }
    case kNewsHeadline: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.news_headline_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.news_headline_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* PROTOBUF_NONNULL StateMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StateMessage(arena);
}
constexpr auto StateMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StateMessage),
                                            alignof(StateMessage));
}
constexpr auto StateMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StateMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StateMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<StateMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StateMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<StateMessage>(), &StateMessage::ByteSizeLong,
              &StateMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StateMessage, _impl_._cached_size_),
          false,
      },
      &StateMessage::kDescriptorMethods,
      &descriptor_table_trading_2fstate_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StateMessage_class_data_ =
        StateMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StateMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StateMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StateMessage_class_data_.tc_table);
  return StateMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 13, 11, 0, 2>
StateMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(StateMessage, _impl_._has_bits_),
    0, // no _extensions_
    32, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    535282168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    11,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    StateMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::StateMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .financio.trading.StateType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(StateMessage, _impl_.type_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.type_)}},
    // int64 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(StateMessage, _impl_.id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.id_)}},
    // .google.protobuf.Timestamp ts = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.ts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .financio.trading.StateType type = 1;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.type_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int64 id = 2;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
    // .google.protobuf.Timestamp ts = 3;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.ts_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.Error error = 10;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.error_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.TickPrice tick_price = 11;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.tick_price_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.TickSize tick_size = 12;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.tick_size_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.OrderStatus order_status = 13;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.order_status_), _Internal::kOneofCaseOffset + 0, 4, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.OrderFill order_filled = 14;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.order_filled_), _Internal::kOneofCaseOffset + 0, 5, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.HistoricalBar hist_bar = 20;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.hist_bar_), _Internal::kOneofCaseOffset + 0, 6, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.HistoricalEnd hist_end = 21;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.hist_end_), _Internal::kOneofCaseOffset + 0, 7, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.AccountSummary account_summary = 30;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.account_summary_), _Internal::kOneofCaseOffset + 0, 8, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.PortfolioPosition portfolio_update = 31;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.portfolio_update_), _Internal::kOneofCaseOffset + 0, 9, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.NewsHeadline news_headline = 32;
    {PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.payload_.news_headline_), _Internal::kOneofCaseOffset + 0, 10, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
      {::_pbi::TcParser::GetTable<::financio::trading::Error>()},
      {::_pbi::TcParser::GetTable<::financio::trading::TickPrice>()},
      {::_pbi::TcParser::GetTable<::financio::trading::TickSize>()},
      {::_pbi::TcParser::GetTable<::financio::trading::OrderStatus>()},
      {::_pbi::TcParser::GetTable<::financio::trading::OrderFill>()},
      {::_pbi::TcParser::GetTable<::financio::trading::HistoricalBar>()},
      {::_pbi::TcParser::GetTable<::financio::trading::HistoricalEnd>()},
      {::_pbi::TcParser::GetTable<::financio::trading::AccountSummary>()},
      {::_pbi::TcParser::GetTable<::financio::trading::PortfolioPosition>()},
      {::_pbi::TcParser::GetTable<::financio::trading::NewsHeadline>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void StateMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.StateMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    ABSL_DCHECK(_impl_.ts_ != nullptr);
    _impl_.ts_->Clear();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.id_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.type_) -
        reinterpret_cast<char*>(&_impl_.id_)) + sizeof(_impl_.type_));
  }
  clear_payload();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL StateMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const StateMessage& this_ = static_cast<const StateMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL StateMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const StateMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.StateMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .financio.trading.StateType type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  // int64 id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_id(), target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp ts = 3;
  if ((cached_has_bits & 0x00000001U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.ts_, this_._impl_.ts_->GetCachedSize(), target,
        stream);
  }

  switch (this_.payload_case()) {
    case kError: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *this_._impl_.payload_.error_, this_._impl_.payload_.error_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTickPrice: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *this_._impl_.payload_.tick_price_, this_._impl_.payload_.tick_price_->GetCachedSize(), target,
          stream);
      break;
    }
    case kTickSize: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, *this_._impl_.payload_.tick_size_, this_._impl_.payload_.tick_size_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderStatus: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, *this_._impl_.payload_.order_status_, this_._impl_.payload_.order_status_->GetCachedSize(), target,
          stream);
      break;
    }
    case kOrderFilled: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          14, *this_._impl_.payload_.order_filled_, this_._impl_.payload_.order_filled_->GetCachedSize(), target,
          stream);
      break;
    }
    case kHistBar: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          20, *this_._impl_.payload_.hist_bar_, this_._impl_.payload_.hist_bar_->GetCachedSize(), target,
          stream);
      break;
    }
    case kHistEnd: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          21, *this_._impl_.payload_.hist_end_, this_._impl_.payload_.hist_end_->GetCachedSize(), target,
          stream);
      break;
    }
    case kAccountSummary: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          30, *this_._impl_.payload_.account_summary_, this_._impl_.payload_.account_summary_->GetCachedSize(), target,
          stream);
      break;
    }
    case kPortfolioUpdate: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          31, *this_._impl_.payload_.portfolio_update_, this_._impl_.payload_.portfolio_update_->GetCachedSize(), target,
          stream);
      break;
    }
    case kNewsHeadline: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          32, *this_._impl_.payload_.news_headline_, this_._impl_.payload_.news_headline_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.StateMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t StateMessage::ByteSizeLong(const MessageLite& base) {
  const StateMessage& this_ = static_cast<const StateMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t StateMessage::ByteSizeLong() const {
  const StateMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.StateMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // .google.protobuf.Timestamp ts = 3;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ts_);
    }
    // int64 id = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_id());
      }
    }
    // .financio.trading.StateType type = 1;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
  }
  switch (this_.payload_case()) {
    // .financio.trading.Error error = 10;
    case kError: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.error_);
      break;
    }
    // .financio.trading.TickPrice tick_price = 11;
    case kTickPrice: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.tick_price_);
      break;
    }
    // .financio.trading.TickSize tick_size = 12;
    case kTickSize: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.tick_size_);
      break;
    }
    // .financio.trading.OrderStatus order_status = 13;
    case kOrderStatus: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_status_);
      break;
    }
    // .financio.trading.OrderFill order_filled = 14;
    case kOrderFilled: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.order_filled_);
      break;
    }
    // .financio.trading.HistoricalBar hist_bar = 20;
    case kHistBar: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.hist_bar_);
      break;
    }
    // .financio.trading.HistoricalEnd hist_end = 21;
    case kHistEnd: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.hist_end_);
      break;
    }
    // .financio.trading.AccountSummary account_summary = 30;
    case kAccountSummary: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.account_summary_);
      break;
    }
    // .financio.trading.PortfolioPosition portfolio_update = 31;
    case kPortfolioUpdate: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.portfolio_update_);
      break;
    }
    // .financio.trading.NewsHeadline news_headline = 32;
    case kNewsHeadline: {
      total_size += 2 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.news_headline_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void StateMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StateMessage*>(&to_msg);
  auto& from = static_cast<const StateMessage&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.StateMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      ABSL_DCHECK(from._impl_.ts_ != nullptr);
      if (_this->_impl_.ts_ == nullptr) {
        _this->_impl_.ts_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ts_);
      } else {
        _this->_impl_.ts_->MergeFrom(*from._impl_.ts_);
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kError: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.error_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.error_);
        } else {
          _this->_impl_.payload_.error_->MergeFrom(*from._impl_.payload_.error_);
        }
        break;
      }
      case kTickPrice: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.tick_price_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.tick_price_);
        } else {
          _this->_impl_.payload_.tick_price_->MergeFrom(*from._impl_.payload_.tick_price_);
        }
        break;
      }
      case kTickSize: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.tick_size_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.tick_size_);
        } else {
          _this->_impl_.payload_.tick_size_->MergeFrom(*from._impl_.payload_.tick_size_);
        }
        break;
      }
      case kOrderStatus: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_status_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_status_);
        } else {
          _this->_impl_.payload_.order_status_->MergeFrom(*from._impl_.payload_.order_status_);
        }
        break;
      }
      case kOrderFilled: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.order_filled_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.order_filled_);
        } else {
          _this->_impl_.payload_.order_filled_->MergeFrom(*from._impl_.payload_.order_filled_);
        }
        break;
      }
      case kHistBar: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.hist_bar_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.hist_bar_);
        } else {
          _this->_impl_.payload_.hist_bar_->MergeFrom(*from._impl_.payload_.hist_bar_);
        }
        break;
      }
      case kHistEnd: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.hist_end_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.hist_end_);
        } else {
          _this->_impl_.payload_.hist_end_->MergeFrom(*from._impl_.payload_.hist_end_);
        }
        break;
      }
      case kAccountSummary: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.account_summary_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.account_summary_);
        } else {
          _this->_impl_.payload_.account_summary_->MergeFrom(*from._impl_.payload_.account_summary_);
        }
        break;
      }
      case kPortfolioUpdate: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.portfolio_update_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.portfolio_update_);
        } else {
          _this->_impl_.payload_.portfolio_update_->MergeFrom(*from._impl_.payload_.portfolio_update_);
        }
        break;
      }
      case kNewsHeadline: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.news_headline_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.news_headline_);
        } else {
          _this->_impl_.payload_.news_headline_->MergeFrom(*from._impl_.payload_.news_headline_);
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StateMessage::CopyFrom(const StateMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.StateMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StateMessage::InternalSwap(StateMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.type_)
      + sizeof(StateMessage::_impl_.type_)
      - PROTOBUF_FIELD_OFFSET(StateMessage, _impl_.ts_)>(
          reinterpret_cast<char*>(&_impl_.ts_),
          reinterpret_cast<char*>(&other->_impl_.ts_));
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata StateMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace trading
}  // namespace financio
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_trading_2fstate_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: trading/lifecycle.proto
// Protobuf C++ Version: 6.32.1

#include "trading/lifecycle.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace financio {
namespace trading {
template <typename>
PROTOBUF_CONSTEXPR StopBackend::StopBackend(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(StopBackend_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct StopBackendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StopBackendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StopBackendDefaultTypeInternal() {}
  union {
    StopBackend _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StopBackendDefaultTypeInternal _StopBackend_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR StartBackend::StartBackend(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(StartBackend_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct StartBackendDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StartBackendDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StartBackendDefaultTypeInternal() {}
  union {
    StartBackend _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StartBackendDefaultTypeInternal _StartBackend_default_instance_;
template <typename>
PROTOBUF_CONSTEXPR DisconnectBroker::DisconnectBroker(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(DisconnectBroker_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct DisconnectBrokerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DisconnectBrokerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DisconnectBrokerDefaultTypeInternal() {}
  union {
    DisconnectBroker _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DisconnectBrokerDefaultTypeInternal _DisconnectBroker_default_instance_;

inline constexpr ConnectBroker::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        host_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        port_{0},
        client_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ConnectBroker::ConnectBroker(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ConnectBroker_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ConnectBrokerDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ConnectBrokerDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ConnectBrokerDefaultTypeInternal() {}
  union {
    ConnectBroker _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ConnectBrokerDefaultTypeInternal _ConnectBroker_default_instance_;

inline constexpr FrontendCommand::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR FrontendCommand::FrontendCommand(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(FrontendCommand_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct FrontendCommandDefaultTypeInternal {
  PROTOBUF_CONSTEXPR FrontendCommandDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~FrontendCommandDefaultTypeInternal() {}
  union {
    FrontendCommand _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 FrontendCommandDefaultTypeInternal _FrontendCommand_default_instance_;

inline constexpr BackendStatusUpdate::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ts_{nullptr},
        status_{static_cast< ::financio::trading::BackendStatus >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR BackendStatusUpdate::BackendStatusUpdate(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(BackendStatusUpdate_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct BackendStatusUpdateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BackendStatusUpdateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~BackendStatusUpdateDefaultTypeInternal() {}
  union {
    BackendStatusUpdate _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BackendStatusUpdateDefaultTypeInternal _BackendStatusUpdate_default_instance_;
}  // namespace trading
}  // namespace financio
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_trading_2flifecycle_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_trading_2flifecycle_2eproto = nullptr;
const ::uint32_t
    TableStruct_trading_2flifecycle_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x000, // bitmap
        0x000, // bitmap
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::ConnectBroker, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::ConnectBroker, _impl_.host_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ConnectBroker, _impl_.port_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ConnectBroker, _impl_.client_id_),
        0,
        1,
        2,
        0x000, // bitmap
        0x004, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendCommand, _impl_._oneof_case_[0]),
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendCommand, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendCommand, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendCommand, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendCommand, _impl_.cmd_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendCommand, _impl_.cmd_),
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::BackendStatusUpdate, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::BackendStatusUpdate, _impl_.status_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::BackendStatusUpdate, _impl_.message_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::BackendStatusUpdate, _impl_.ts_),
        2,
        0,
        1,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::financio::trading::StartBackend)},
        {1, sizeof(::financio::trading::StopBackend)},
        {2, sizeof(::financio::trading::ConnectBroker)},
        {11, sizeof(::financio::trading::DisconnectBroker)},
        {12, sizeof(::financio::trading::FrontendCommand)},
        {19, sizeof(::financio::trading::BackendStatusUpdate)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::financio::trading::_StartBackend_default_instance_._instance,
    &::financio::trading::_StopBackend_default_instance_._instance,
    &::financio::trading::_ConnectBroker_default_instance_._instance,
    &::financio::trading::_DisconnectBroker_default_instance_._instance,
    &::financio::trading::_FrontendCommand_default_instance_._instance,
    &::financio::trading::_BackendStatusUpdate_default_instance_._instance,
};
const char descriptor_table_protodef_trading_2flifecycle_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\027trading/lifecycle.proto\022\020financio.trad"
    "ing\032\037google/protobuf/timestamp.proto\032\024tr"
    "ading/common.proto\"\016\n\014StartBackend\"\r\n\013St"
    "opBackend\">\n\rConnectBroker\022\014\n\004host\030\001 \001(\t"
    "\022\014\n\004port\030\002 \001(\005\022\021\n\tclient_id\030\003 \001(\005\"\022\n\020Dis"
    "connectBroker\"\204\002\n\017FrontendCommand\0227\n\rsta"
    "rt_backend\030\001 \001(\0132\036.financio.trading.Star"
    "tBackendH\000\0225\n\014stop_backend\030\002 \001(\0132\035.finan"
    "cio.trading.StopBackendH\000\0229\n\016connect_bro"
    "ker\030\003 \001(\0132\037.financio.trading.ConnectBrok"
    "erH\000\022\?\n\021disconnect_broker\030\004 \001(\0132\".financ"
    "io.trading.DisconnectBrokerH\000B\005\n\003cmd\"\177\n\023"
    "BackendStatusUpdate\022/\n\006status\030\001 \001(\0162\037.fi"
    "nancio.trading.BackendStatus\022\017\n\007message\030"
    "\002 \001(\t\022&\n\002ts\030\003 \001(\0132\032.google.protobuf.Time"
    "stampb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_trading_2flifecycle_2eproto_deps[2] = {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
        &::descriptor_table_trading_2fcommon_2eproto,
};
static ::absl::once_flag descriptor_table_trading_2flifecycle_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_trading_2flifecycle_2eproto = {
    false,
    false,
    613,
    descriptor_table_protodef_trading_2flifecycle_2eproto,
    "trading/lifecycle.proto",
    &descriptor_table_trading_2flifecycle_2eproto_once,
    descriptor_table_trading_2flifecycle_2eproto_deps,
    2,
    6,
    schemas,
    file_default_instances,
    TableStruct_trading_2flifecycle_2eproto::offsets,
    file_level_enum_descriptors_trading_2flifecycle_2eproto,
    file_level_service_descriptors_trading_2flifecycle_2eproto,
};
namespace financio {
namespace trading {
// ===================================================================

class StartBackend::_Internal {
 public:
};

StartBackend::StartBackend(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, StartBackend_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:financio.trading.StartBackend)
}
StartBackend::StartBackend(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StartBackend& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, StartBackend_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StartBackend* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:financio.trading.StartBackend)
}

inline void* PROTOBUF_NONNULL StartBackend::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StartBackend(arena);
}
constexpr auto StartBackend::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StartBackend),
                                            alignof(StartBackend));
}
constexpr auto StartBackend::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StartBackend_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StartBackend::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<StartBackend>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StartBackend::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<StartBackend>(), &StartBackend::ByteSizeLong,
              &StartBackend::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StartBackend, _impl_._cached_size_),
          false,
      },
      &StartBackend::kDescriptorMethods,
      &descriptor_table_trading_2flifecycle_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StartBackend_class_data_ =
        StartBackend::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StartBackend::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StartBackend_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StartBackend_class_data_.tc_table);
  return StartBackend_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
StartBackend::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StartBackend_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::StartBackend>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata StartBackend::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class StopBackend::_Internal {
 public:
};

StopBackend::StopBackend(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, StopBackend_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:financio.trading.StopBackend)
}
StopBackend::StopBackend(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const StopBackend& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, StopBackend_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StopBackend* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:financio.trading.StopBackend)
}

inline void* PROTOBUF_NONNULL StopBackend::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) StopBackend(arena);
}
constexpr auto StopBackend::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(StopBackend),
                                            alignof(StopBackend));
}
constexpr auto StopBackend::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_StopBackend_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &StopBackend::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<StopBackend>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &StopBackend::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<StopBackend>(), &StopBackend::ByteSizeLong,
              &StopBackend::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(StopBackend, _impl_._cached_size_),
          false,
      },
      &StopBackend::kDescriptorMethods,
      &descriptor_table_trading_2flifecycle_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull StopBackend_class_data_ =
        StopBackend::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
StopBackend::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&StopBackend_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(StopBackend_class_data_.tc_table);
  return StopBackend_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
StopBackend::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    StopBackend_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::StopBackend>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata StopBackend::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ConnectBroker::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ConnectBroker>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_._has_bits_);
};

ConnectBroker::ConnectBroker(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConnectBroker_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.ConnectBroker)
}
PROTOBUF_NDEBUG_INLINE ConnectBroker::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::ConnectBroker& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        host_(arena, from.host_) {}

ConnectBroker::ConnectBroker(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ConnectBroker& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ConnectBroker_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ConnectBroker* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, port_),
           offsetof(Impl_, client_id_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::client_id_));

  // @@protoc_insertion_point(copy_constructor:financio.trading.ConnectBroker)
}
PROTOBUF_NDEBUG_INLINE ConnectBroker::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        host_(arena) {}

inline void ConnectBroker::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, port_),
           0,
           offsetof(Impl_, client_id_) -
               offsetof(Impl_, port_) +
               sizeof(Impl_::client_id_));
}
ConnectBroker::~ConnectBroker() {
  // @@protoc_insertion_point(destructor:financio.trading.ConnectBroker)
  SharedDtor(*this);
}
inline void ConnectBroker::SharedDtor(MessageLite& self) {
  ConnectBroker& this_ = static_cast<ConnectBroker&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.host_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ConnectBroker::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ConnectBroker(arena);
}
constexpr auto ConnectBroker::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ConnectBroker),
                                            alignof(ConnectBroker));
}
constexpr auto ConnectBroker::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ConnectBroker_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ConnectBroker::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ConnectBroker>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ConnectBroker::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ConnectBroker>(), &ConnectBroker::ByteSizeLong,
              &ConnectBroker::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_._cached_size_),
          false,
      },
      &ConnectBroker::kDescriptorMethods,
      &descriptor_table_trading_2flifecycle_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ConnectBroker_class_data_ =
        ConnectBroker::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ConnectBroker::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ConnectBroker_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ConnectBroker_class_data_.tc_table);
  return ConnectBroker_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 43, 2>
ConnectBroker::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ConnectBroker_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::ConnectBroker>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string host = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_.host_)}},
    // int32 port = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConnectBroker, _impl_.port_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_.port_)}},
    // int32 client_id = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ConnectBroker, _impl_.client_id_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_.client_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string host = 1;
    {PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_.host_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 port = 2;
    {PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_.port_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // int32 client_id = 3;
    {PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_.client_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\36\4\0\0\0\0\0\0"
    "financio.trading.ConnectBroker"
    "host"
  }},
};
PROTOBUF_NOINLINE void ConnectBroker::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.ConnectBroker)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.host_.ClearNonDefaultToEmpty();
  }
  if ((cached_has_bits & 0x00000006U) != 0) {
    ::memset(&_impl_.port_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.client_id_) -
        reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.client_id_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ConnectBroker::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ConnectBroker& this_ = static_cast<const ConnectBroker&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ConnectBroker::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ConnectBroker& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.ConnectBroker)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string host = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_host().empty()) {
      const ::std::string& _s = this_._internal_host();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.ConnectBroker.host");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 port = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_port() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_port(), target);
    }
  }

  // int32 client_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_client_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<3>(
              stream, this_._internal_client_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.ConnectBroker)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ConnectBroker::ByteSizeLong(const MessageLite& base) {
  const ConnectBroker& this_ = static_cast<const ConnectBroker&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ConnectBroker::ByteSizeLong() const {
  const ConnectBroker& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.ConnectBroker)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string host = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_host().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_host());
      }
    }
    // int32 port = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_port() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_port());
      }
    }
    // int32 client_id = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_client_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_client_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ConnectBroker::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ConnectBroker*>(&to_msg);
  auto& from = static_cast<const ConnectBroker&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.ConnectBroker)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_host().empty()) {
        _this->_internal_set_host(from._internal_host());
      } else {
        if (_this->_impl_.host_.IsDefault()) {
          _this->_internal_set_host("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_port() != 0) {
        _this->_impl_.port_ = from._impl_.port_;
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_client_id() != 0) {
        _this->_impl_.client_id_ = from._impl_.client_id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ConnectBroker::CopyFrom(const ConnectBroker& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.ConnectBroker)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ConnectBroker::InternalSwap(ConnectBroker* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.host_, &other->_impl_.host_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_.client_id_)
      + sizeof(ConnectBroker::_impl_.client_id_)
      - PROTOBUF_FIELD_OFFSET(ConnectBroker, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
}

::google::protobuf::Metadata ConnectBroker::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class DisconnectBroker::_Internal {
 public:
};

DisconnectBroker::DisconnectBroker(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, DisconnectBroker_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(arena_constructor:financio.trading.DisconnectBroker)
}
DisconnectBroker::DisconnectBroker(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const DisconnectBroker& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::internal::ZeroFieldsBase(arena, DisconnectBroker_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  DisconnectBroker* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:financio.trading.DisconnectBroker)
}

inline void* PROTOBUF_NONNULL DisconnectBroker::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) DisconnectBroker(arena);
}
constexpr auto DisconnectBroker::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(DisconnectBroker),
                                            alignof(DisconnectBroker));
}
constexpr auto DisconnectBroker::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_DisconnectBroker_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &DisconnectBroker::MergeImpl,
          ::google::protobuf::internal::ZeroFieldsBase::GetNewImpl<DisconnectBroker>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &DisconnectBroker::SharedDtor,
          ::google::protobuf::internal::ZeroFieldsBase::GetClearImpl<DisconnectBroker>(), &DisconnectBroker::ByteSizeLong,
              &DisconnectBroker::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(DisconnectBroker, _impl_._cached_size_),
          false,
      },
      &DisconnectBroker::kDescriptorMethods,
      &descriptor_table_trading_2flifecycle_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull DisconnectBroker_class_data_ =
        DisconnectBroker::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
DisconnectBroker::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&DisconnectBroker_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(DisconnectBroker_class_data_.tc_table);
  return DisconnectBroker_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 0, 0, 0, 2>
DisconnectBroker::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    0, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967295,  // skipmap
    offsetof(decltype(_table_), field_names),  // no field_entries
    0,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    DisconnectBroker_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::DisconnectBroker>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, // no field_entries, or aux_entries
  {{
  }},
};







::google::protobuf::Metadata DisconnectBroker::GetMetadata() const {
  return ::google::protobuf::internal::ZeroFieldsBase::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class FrontendCommand::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::financio::trading::FrontendCommand, _impl_._oneof_case_);
};

void FrontendCommand::set_allocated_start_backend(::financio::trading::StartBackend* PROTOBUF_NULLABLE start_backend) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (start_backend) {
    ::google::protobuf::Arena* submessage_arena = start_backend->GetArena();
    if (message_arena != submessage_arena) {
      start_backend = ::google::protobuf::internal::GetOwnedMessage(message_arena, start_backend, submessage_arena);
    }
    set_has_start_backend();
    _impl_.cmd_.start_backend_ = start_backend;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.FrontendCommand.start_backend)
}
void FrontendCommand::set_allocated_stop_backend(::financio::trading::StopBackend* PROTOBUF_NULLABLE stop_backend) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (stop_backend) {
    ::google::protobuf::Arena* submessage_arena = stop_backend->GetArena();
    if (message_arena != submessage_arena) {
      stop_backend = ::google::protobuf::internal::GetOwnedMessage(message_arena, stop_backend, submessage_arena);
    }
    set_has_stop_backend();
    _impl_.cmd_.stop_backend_ = stop_backend;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.FrontendCommand.stop_backend)
}
void FrontendCommand::set_allocated_connect_broker(::financio::trading::ConnectBroker* PROTOBUF_NULLABLE connect_broker) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (connect_broker) {
    ::google::protobuf::Arena* submessage_arena = connect_broker->GetArena();
    if (message_arena != submessage_arena) {
      connect_broker = ::google::protobuf::internal::GetOwnedMessage(message_arena, connect_broker, submessage_arena);
    }
    set_has_connect_broker();
    _impl_.cmd_.connect_broker_ = connect_broker;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.FrontendCommand.connect_broker)
}
void FrontendCommand::set_allocated_disconnect_broker(::financio::trading::DisconnectBroker* PROTOBUF_NULLABLE disconnect_broker) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_cmd();
  if (disconnect_broker) {
    ::google::protobuf::Arena* submessage_arena = disconnect_broker->GetArena();
    if (message_arena != submessage_arena) {
      disconnect_broker = ::google::protobuf::internal::GetOwnedMessage(message_arena, disconnect_broker, submessage_arena);
    }
    set_has_disconnect_broker();
    _impl_.cmd_.disconnect_broker_ = disconnect_broker;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.FrontendCommand.disconnect_broker)
}
FrontendCommand::FrontendCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FrontendCommand_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.FrontendCommand)
}
PROTOBUF_NDEBUG_INLINE FrontendCommand::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::FrontendCommand& from_msg)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

FrontendCommand::FrontendCommand(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const FrontendCommand& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, FrontendCommand_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  FrontendCommand* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (cmd_case()) {
    case CMD_NOT_SET:
      break;
      case kStartBackend:
        _impl_.cmd_.start_backend_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_.start_backend_);
        break;
      case kStopBackend:
        _impl_.cmd_.stop_backend_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_.stop_backend_);
        break;
      case kConnectBroker:
        _impl_.cmd_.connect_broker_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_.connect_broker_);
        break;
      case kDisconnectBroker:
        _impl_.cmd_.disconnect_broker_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_.disconnect_broker_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:financio.trading.FrontendCommand)
}
PROTOBUF_NDEBUG_INLINE FrontendCommand::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : cmd_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void FrontendCommand::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
FrontendCommand::~FrontendCommand() {
  // @@protoc_insertion_point(destructor:financio.trading.FrontendCommand)
  SharedDtor(*this);
}
inline void FrontendCommand::SharedDtor(MessageLite& self) {
  FrontendCommand& this_ = static_cast<FrontendCommand&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_cmd()) {
    this_.clear_cmd();
  }
  this_._impl_.~Impl_();
}

void FrontendCommand::clear_cmd() {
// @@protoc_insertion_point(one_of_clear_start:financio.trading.FrontendCommand)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (cmd_case()) {
    case kStartBackend: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.start_backend_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.start_backend_);
      }
      break;
    }
    case kStopBackend: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.stop_backend_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.stop_backend_);
      }
      break;
    }
    case kConnectBroker: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.connect_broker_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.connect_broker_);
      }
      break;
    }
    case kDisconnectBroker: {
      if (GetArena() == nullptr) {
        delete _impl_.cmd_.disconnect_broker_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.disconnect_broker_);
      }
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}


inline void* PROTOBUF_NONNULL FrontendCommand::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) FrontendCommand(arena);
}
constexpr auto FrontendCommand::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(FrontendCommand),
                                            alignof(FrontendCommand));
}
constexpr auto FrontendCommand::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_FrontendCommand_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &FrontendCommand::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<FrontendCommand>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &FrontendCommand::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<FrontendCommand>(), &FrontendCommand::ByteSizeLong,
              &FrontendCommand::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(FrontendCommand, _impl_._cached_size_),
          false,
      },
      &FrontendCommand::kDescriptorMethods,
      &descriptor_table_trading_2flifecycle_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull FrontendCommand_class_data_ =
        FrontendCommand::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
FrontendCommand::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&FrontendCommand_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(FrontendCommand_class_data_.tc_table);
  return FrontendCommand_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 4, 4, 0, 2>
FrontendCommand::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    4,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    FrontendCommand_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::FrontendCommand>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .financio.trading.StartBackend start_backend = 1;
    {PROTOBUF_FIELD_OFFSET(FrontendCommand, _impl_.cmd_.start_backend_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.StopBackend stop_backend = 2;
    {PROTOBUF_FIELD_OFFSET(FrontendCommand, _impl_.cmd_.stop_backend_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.ConnectBroker connect_broker = 3;
    {PROTOBUF_FIELD_OFFSET(FrontendCommand, _impl_.cmd_.connect_broker_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.DisconnectBroker disconnect_broker = 4;
    {PROTOBUF_FIELD_OFFSET(FrontendCommand, _impl_.cmd_.disconnect_broker_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::financio::trading::StartBackend>()},
      {::_pbi::TcParser::GetTable<::financio::trading::StopBackend>()},
      {::_pbi::TcParser::GetTable<::financio::trading::ConnectBroker>()},
      {::_pbi::TcParser::GetTable<::financio::trading::DisconnectBroker>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void FrontendCommand::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.FrontendCommand)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_cmd();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL FrontendCommand::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const FrontendCommand& this_ = static_cast<const FrontendCommand&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL FrontendCommand::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const FrontendCommand& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.FrontendCommand)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  switch (this_.cmd_case()) {
    case kStartBackend: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          1, *this_._impl_.cmd_.start_backend_, this_._impl_.cmd_.start_backend_->GetCachedSize(), target,
          stream);
      break;
    }
    case kStopBackend: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          2, *this_._impl_.cmd_.stop_backend_, this_._impl_.cmd_.stop_backend_->GetCachedSize(), target,
          stream);
      break;
    }
    case kConnectBroker: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          3, *this_._impl_.cmd_.connect_broker_, this_._impl_.cmd_.connect_broker_->GetCachedSize(), target,
          stream);
      break;
    }
    case kDisconnectBroker: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          4, *this_._impl_.cmd_.disconnect_broker_, this_._impl_.cmd_.disconnect_broker_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.FrontendCommand)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t FrontendCommand::ByteSizeLong(const MessageLite& base) {
  const FrontendCommand& this_ = static_cast<const FrontendCommand&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t FrontendCommand::ByteSizeLong() const {
  const FrontendCommand& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.FrontendCommand)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  switch (this_.cmd_case()) {
    // .financio.trading.StartBackend start_backend = 1;
    case kStartBackend: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cmd_.start_backend_);
      break;
    }
    // .financio.trading.StopBackend stop_backend = 2;
    case kStopBackend: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cmd_.stop_backend_);
      break;
    }
    // .financio.trading.ConnectBroker connect_broker = 3;
    case kConnectBroker: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cmd_.connect_broker_);
      break;
    }
    // .financio.trading.DisconnectBroker disconnect_broker = 4;
    case kDisconnectBroker: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.cmd_.disconnect_broker_);
      break;
    }
    case CMD_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void FrontendCommand::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<FrontendCommand*>(&to_msg);
  auto& from = static_cast<const FrontendCommand&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.FrontendCommand)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_cmd();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kStartBackend: {
        if (oneof_needs_init) {
          _this->_impl_.cmd_.start_backend_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_.start_backend_);
        } else {
          _this->_impl_.cmd_.start_backend_->MergeFrom(*from._impl_.cmd_.start_backend_);
        }
        break;
      }
      case kStopBackend: {
        if (oneof_needs_init) {
          _this->_impl_.cmd_.stop_backend_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_.stop_backend_);
        } else {
          _this->_impl_.cmd_.stop_backend_->MergeFrom(*from._impl_.cmd_.stop_backend_);
        }
        break;
      }
      case kConnectBroker: {
        if (oneof_needs_init) {
          _this->_impl_.cmd_.connect_broker_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_.connect_broker_);
        } else {
          _this->_impl_.cmd_.connect_broker_->MergeFrom(*from._impl_.cmd_.connect_broker_);
        }
        break;
      }
      case kDisconnectBroker: {
        if (oneof_needs_init) {
          _this->_impl_.cmd_.disconnect_broker_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.cmd_.disconnect_broker_);
        } else {
          _this->_impl_.cmd_.disconnect_broker_->MergeFrom(*from._impl_.cmd_.disconnect_broker_);
        }
        break;
      }
      case CMD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void FrontendCommand::CopyFrom(const FrontendCommand& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.FrontendCommand)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void FrontendCommand::InternalSwap(FrontendCommand* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.cmd_, other->_impl_.cmd_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata FrontendCommand::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class BackendStatusUpdate::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<BackendStatusUpdate>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_._has_bits_);
};

void BackendStatusUpdate::clear_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ts_ != nullptr) _impl_.ts_->Clear();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
BackendStatusUpdate::BackendStatusUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BackendStatusUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.BackendStatusUpdate)
}
PROTOBUF_NDEBUG_INLINE BackendStatusUpdate::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::BackendStatusUpdate& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_(arena, from.message_) {}

BackendStatusUpdate::BackendStatusUpdate(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const BackendStatusUpdate& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, BackendStatusUpdate_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  BackendStatusUpdate* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.ts_ = ((cached_has_bits & 0x00000002U) != 0)
                ? ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ts_)
                : nullptr;
  _impl_.status_ = from._impl_.status_;

  // @@protoc_insertion_point(copy_constructor:financio.trading.BackendStatusUpdate)
}
PROTOBUF_NDEBUG_INLINE BackendStatusUpdate::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_(arena) {}

inline void BackendStatusUpdate::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, ts_),
           0,
           offsetof(Impl_, status_) -
               offsetof(Impl_, ts_) +
               sizeof(Impl_::status_));
}
BackendStatusUpdate::~BackendStatusUpdate() {
  // @@protoc_insertion_point(destructor:financio.trading.BackendStatusUpdate)
  SharedDtor(*this);
}
inline void BackendStatusUpdate::SharedDtor(MessageLite& self) {
  BackendStatusUpdate& this_ = static_cast<BackendStatusUpdate&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_.Destroy();
  delete this_._impl_.ts_;
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL BackendStatusUpdate::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) BackendStatusUpdate(arena);
}
constexpr auto BackendStatusUpdate::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(BackendStatusUpdate),
                                            alignof(BackendStatusUpdate));
}
constexpr auto BackendStatusUpdate::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_BackendStatusUpdate_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &BackendStatusUpdate::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<BackendStatusUpdate>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &BackendStatusUpdate::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<BackendStatusUpdate>(), &BackendStatusUpdate::ByteSizeLong,
              &BackendStatusUpdate::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_._cached_size_),
          false,
      },
      &BackendStatusUpdate::kDescriptorMethods,
      &descriptor_table_trading_2flifecycle_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull BackendStatusUpdate_class_data_ =
        BackendStatusUpdate::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
BackendStatusUpdate::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&BackendStatusUpdate_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(BackendStatusUpdate_class_data_.tc_table);
  return BackendStatusUpdate_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 1, 52, 2>
BackendStatusUpdate::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    BackendStatusUpdate_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::BackendStatusUpdate>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // .financio.trading.BackendStatus status = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(BackendStatusUpdate, _impl_.status_), 2>(),
     {8, 2, 0, PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_.status_)}},
    // string message = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_.message_)}},
    // .google.protobuf.Timestamp ts = 3;
    {::_pbi::TcParser::FastMtS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_.ts_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .financio.trading.BackendStatus status = 1;
    {PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_.status_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // string message = 2;
    {PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_.message_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .google.protobuf.Timestamp ts = 3;
    {PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_.ts_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }},
  {{
    "\44\0\7\0\0\0\0\0"
    "financio.trading.BackendStatusUpdate"
    "message"
  }},
};
PROTOBUF_NOINLINE void BackendStatusUpdate::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.BackendStatusUpdate)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.message_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(_impl_.ts_ != nullptr);
      _impl_.ts_->Clear();
    }
  }
  _impl_.status_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL BackendStatusUpdate::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const BackendStatusUpdate& this_ = static_cast<const BackendStatusUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL BackendStatusUpdate::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const BackendStatusUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.BackendStatusUpdate)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .financio.trading.BackendStatus status = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_status() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_status(), target);
    }
  }

  // string message = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message().empty()) {
      const ::std::string& _s = this_._internal_message();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.BackendStatusUpdate.message");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  cached_has_bits = this_._impl_._has_bits_[0];
  // .google.protobuf.Timestamp ts = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
        3, *this_._impl_.ts_, this_._impl_.ts_->GetCachedSize(), target,
        stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.BackendStatusUpdate)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t BackendStatusUpdate::ByteSizeLong(const MessageLite& base) {
  const BackendStatusUpdate& this_ = static_cast<const BackendStatusUpdate&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t BackendStatusUpdate::ByteSizeLong() const {
  const BackendStatusUpdate& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.BackendStatusUpdate)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string message = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message());
      }
    }
    // .google.protobuf.Timestamp ts = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.ts_);
    }
    // .financio.trading.BackendStatus status = 1;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_status() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_status());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void BackendStatusUpdate::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<BackendStatusUpdate*>(&to_msg);
  auto& from = static_cast<const BackendStatusUpdate&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.BackendStatusUpdate)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message().empty()) {
        _this->_internal_set_message(from._internal_message());
      } else {
        if (_this->_impl_.message_.IsDefault()) {
          _this->_internal_set_message("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      ABSL_DCHECK(from._impl_.ts_ != nullptr);
      if (_this->_impl_.ts_ == nullptr) {
        _this->_impl_.ts_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.ts_);
      } else {
        _this->_impl_.ts_->MergeFrom(*from._impl_.ts_);
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_status() != 0) {
        _this->_impl_.status_ = from._impl_.status_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void BackendStatusUpdate::CopyFrom(const BackendStatusUpdate& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.BackendStatusUpdate)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void BackendStatusUpdate::InternalSwap(BackendStatusUpdate* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_.status_)
      + sizeof(BackendStatusUpdate::_impl_.status_)
      - PROTOBUF_FIELD_OFFSET(BackendStatusUpdate, _impl_.ts_)>(
          reinterpret_cast<char*>(&_impl_.ts_),
          reinterpret_cast<char*>(&other->_impl_.ts_));
}

::google::protobuf::Metadata BackendStatusUpdate::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace trading
}  // namespace financio
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_trading_2flifecycle_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

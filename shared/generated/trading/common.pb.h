// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: trading/common.proto
// Protobuf C++ Version: 6.32.1

#ifndef trading_2fcommon_2eproto_2epb_2eh
#define trading_2fcommon_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/generated_enum_reflection.h"
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_trading_2fcommon_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_trading_2fcommon_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_trading_2fcommon_2eproto;
}  // extern "C"
namespace financio {
namespace trading {
enum BackendStatus : int;
extern const uint32_t BackendStatus_internal_data_[];
enum ControlType : int;
extern const uint32_t ControlType_internal_data_[];
enum StateType : int;
extern const uint32_t StateType_internal_data_[];
class BarPB;
struct BarPBDefaultTypeInternal;
extern BarPBDefaultTypeInternal _BarPB_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BarPB_class_data_;
class DecimalPB;
struct DecimalPBDefaultTypeInternal;
extern DecimalPBDefaultTypeInternal _DecimalPB_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DecimalPB_class_data_;
class ExecutionFilterPB;
struct ExecutionFilterPBDefaultTypeInternal;
extern ExecutionFilterPBDefaultTypeInternal _ExecutionFilterPB_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ExecutionFilterPB_class_data_;
class ExecutionPB;
struct ExecutionPBDefaultTypeInternal;
extern ExecutionPBDefaultTypeInternal _ExecutionPB_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ExecutionPB_class_data_;
class TickAttribPB;
struct TickAttribPBDefaultTypeInternal;
extern TickAttribPBDefaultTypeInternal _TickAttribPB_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull TickAttribPB_class_data_;
}  // namespace trading
}  // namespace financio
namespace google {
namespace protobuf {
template <>
internal::EnumTraitsT<::financio::trading::BackendStatus_internal_data_>
    internal::EnumTraitsImpl::value<::financio::trading::BackendStatus>;
template <>
internal::EnumTraitsT<::financio::trading::ControlType_internal_data_>
    internal::EnumTraitsImpl::value<::financio::trading::ControlType>;
template <>
internal::EnumTraitsT<::financio::trading::StateType_internal_data_>
    internal::EnumTraitsImpl::value<::financio::trading::StateType>;
}  // namespace protobuf
}  // namespace google

namespace financio {
namespace trading {
enum BackendStatus : int {
  BACKEND_STATUS_UNKNOWN = 0,
  BACKEND_STATUS_STARTING = 1,
  BACKEND_STATUS_READY = 2,
  BACKEND_STATUS_IBKR_CONNECTING = 3,
  BACKEND_STATUS_IBKR_CONNECTED = 4,
  BACKEND_STATUS_IBKR_DISCONNECTED = 5,
  BACKEND_STATUS_ERROR = 6,
  BackendStatus_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  BackendStatus_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t BackendStatus_internal_data_[];
inline constexpr BackendStatus BackendStatus_MIN =
    static_cast<BackendStatus>(0);
inline constexpr BackendStatus BackendStatus_MAX =
    static_cast<BackendStatus>(6);
inline bool BackendStatus_IsValid(int value) {
  return 0 <= value && value <= 6;
}
inline constexpr int BackendStatus_ARRAYSIZE = 6 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL BackendStatus_descriptor();
template <typename T>
const ::std::string& BackendStatus_Name(T value) {
  static_assert(::std::is_same<T, BackendStatus>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to BackendStatus_Name().");
  return BackendStatus_Name(static_cast<BackendStatus>(value));
}
template <>
inline const ::std::string& BackendStatus_Name(BackendStatus value) {
  return ::google::protobuf::internal::NameOfDenseEnum<BackendStatus_descriptor, 0, 6>(
      static_cast<int>(value));
}
inline bool BackendStatus_Parse(
    ::absl::string_view name, BackendStatus* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<BackendStatus>(BackendStatus_descriptor(), name,
                                           value);
}
enum ControlType : int {
  CONTROL_UNSPECIFIED = 0,
  CONTROL_CONNECT = 1,
  CONTROL_DISCONNECT = 2,
  CONTROL_SUB_MKT = 3,
  CONTROL_UNSUB_MKT = 4,
  CONTROL_PLACE_ORDER = 5,
  CONTROL_CANCEL_ORDER = 6,
  CONTROL_HISTORICAL = 7,
  CONTROL_ACCOUNT_DATA = 8,
  CONTROL_NEWS = 9,
  ControlType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  ControlType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t ControlType_internal_data_[];
inline constexpr ControlType ControlType_MIN =
    static_cast<ControlType>(0);
inline constexpr ControlType ControlType_MAX =
    static_cast<ControlType>(9);
inline bool ControlType_IsValid(int value) {
  return 0 <= value && value <= 9;
}
inline constexpr int ControlType_ARRAYSIZE = 9 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL ControlType_descriptor();
template <typename T>
const ::std::string& ControlType_Name(T value) {
  static_assert(::std::is_same<T, ControlType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to ControlType_Name().");
  return ControlType_Name(static_cast<ControlType>(value));
}
template <>
inline const ::std::string& ControlType_Name(ControlType value) {
  return ::google::protobuf::internal::NameOfDenseEnum<ControlType_descriptor, 0, 9>(
      static_cast<int>(value));
}
inline bool ControlType_Parse(
    ::absl::string_view name, ControlType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<ControlType>(ControlType_descriptor(), name,
                                           value);
}
enum StateType : int {
  STATE_UNSPECIFIED = 0,
  STATE_CONNECTED = 1,
  STATE_DISCONNECTED = 2,
  STATE_ERROR = 3,
  STATE_TICK_PRICE = 10,
  STATE_TICK_SIZE = 11,
  STATE_ORDER_STATUS = 12,
  STATE_ORDER_FILLED = 13,
  STATE_HIST_BAR = 20,
  STATE_HIST_END = 21,
  STATE_ACCOUNT_SUM = 30,
  STATE_PORTFOLIO = 31,
  STATE_NEWS = 32,
  StateType_INT_MIN_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::min(),
  StateType_INT_MAX_SENTINEL_DO_NOT_USE_ =
      ::std::numeric_limits<::int32_t>::max(),
};

extern const uint32_t StateType_internal_data_[];
inline constexpr StateType StateType_MIN =
    static_cast<StateType>(0);
inline constexpr StateType StateType_MAX =
    static_cast<StateType>(32);
inline bool StateType_IsValid(int value) {
  return 0 <= value && value <= 32 && ((7519353871u >> value) & 1) != 0;
}
inline constexpr int StateType_ARRAYSIZE = 32 + 1;
const ::google::protobuf::EnumDescriptor* PROTOBUF_NONNULL StateType_descriptor();
template <typename T>
const ::std::string& StateType_Name(T value) {
  static_assert(::std::is_same<T, StateType>::value ||
                    ::std::is_integral<T>::value,
                "Incorrect type passed to StateType_Name().");
  return ::google::protobuf::internal::NameOfEnum(StateType_descriptor(), value);
}
inline bool StateType_Parse(
    ::absl::string_view name, StateType* PROTOBUF_NONNULL value) {
  return ::google::protobuf::internal::ParseNamedEnum<StateType>(StateType_descriptor(), name,
                                           value);
}

// ===================================================================


// -------------------------------------------------------------------

class TickAttribPB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:financio.trading.TickAttribPB) */ {
 public:
  inline TickAttribPB() : TickAttribPB(nullptr) {}
  ~TickAttribPB() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(TickAttribPB* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(TickAttribPB));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR TickAttribPB(::google::protobuf::internal::ConstantInitialized);

  inline TickAttribPB(const TickAttribPB& from) : TickAttribPB(nullptr, from) {}
  inline TickAttribPB(TickAttribPB&& from) noexcept
      : TickAttribPB(nullptr, ::std::move(from)) {}
  inline TickAttribPB& operator=(const TickAttribPB& from) {
    CopyFrom(from);
    return *this;
  }
  inline TickAttribPB& operator=(TickAttribPB&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const TickAttribPB& default_instance() {
    return *reinterpret_cast<const TickAttribPB*>(
        &_TickAttribPB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(TickAttribPB& a, TickAttribPB& b) { a.Swap(&b); }
  inline void Swap(TickAttribPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(TickAttribPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  TickAttribPB* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<TickAttribPB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const TickAttribPB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const TickAttribPB& from) { TickAttribPB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(TickAttribPB* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.TickAttribPB"; }

 protected:
  explicit TickAttribPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  TickAttribPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const TickAttribPB& from);
  TickAttribPB(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, TickAttribPB&& from) noexcept
      : TickAttribPB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kCanAutoExecuteFieldNumber = 1,
    kPastLimitFieldNumber = 2,
    kPreOpenFieldNumber = 3,
    kBidPastLowFieldNumber = 4,
    kAskPastHighFieldNumber = 5,
    kDelayedFieldNumber = 6,
  };
  // bool can_auto_execute = 1;
  void clear_can_auto_execute() ;
  bool can_auto_execute() const;
  void set_can_auto_execute(bool value);

  private:
  bool _internal_can_auto_execute() const;
  void _internal_set_can_auto_execute(bool value);

  public:
  // bool past_limit = 2;
  void clear_past_limit() ;
  bool past_limit() const;
  void set_past_limit(bool value);

  private:
  bool _internal_past_limit() const;
  void _internal_set_past_limit(bool value);

  public:
  // bool pre_open = 3;
  void clear_pre_open() ;
  bool pre_open() const;
  void set_pre_open(bool value);

  private:
  bool _internal_pre_open() const;
  void _internal_set_pre_open(bool value);

  public:
  // bool bid_past_low = 4;
  void clear_bid_past_low() ;
  bool bid_past_low() const;
  void set_bid_past_low(bool value);

  private:
  bool _internal_bid_past_low() const;
  void _internal_set_bid_past_low(bool value);

  public:
  // bool ask_past_high = 5;
  void clear_ask_past_high() ;
  bool ask_past_high() const;
  void set_ask_past_high(bool value);

  private:
  bool _internal_ask_past_high() const;
  void _internal_set_ask_past_high(bool value);

  public:
  // bool delayed = 6;
  void clear_delayed() ;
  bool delayed() const;
  void set_delayed(bool value);

  private:
  bool _internal_delayed() const;
  void _internal_set_delayed(bool value);

  public:
  // @@protoc_insertion_point(class_scope:financio.trading.TickAttribPB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 6,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const TickAttribPB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool can_auto_execute_;
    bool past_limit_;
    bool pre_open_;
    bool bid_past_low_;
    bool ask_past_high_;
    bool delayed_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_trading_2fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull TickAttribPB_class_data_;
// -------------------------------------------------------------------

class ExecutionPB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:financio.trading.ExecutionPB) */ {
 public:
  inline ExecutionPB() : ExecutionPB(nullptr) {}
  ~ExecutionPB() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ExecutionPB* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ExecutionPB));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExecutionPB(::google::protobuf::internal::ConstantInitialized);

  inline ExecutionPB(const ExecutionPB& from) : ExecutionPB(nullptr, from) {}
  inline ExecutionPB(ExecutionPB&& from) noexcept
      : ExecutionPB(nullptr, ::std::move(from)) {}
  inline ExecutionPB& operator=(const ExecutionPB& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecutionPB& operator=(ExecutionPB&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecutionPB& default_instance() {
    return *reinterpret_cast<const ExecutionPB*>(
        &_ExecutionPB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ExecutionPB& a, ExecutionPB& b) { a.Swap(&b); }
  inline void Swap(ExecutionPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecutionPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecutionPB* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ExecutionPB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExecutionPB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExecutionPB& from) { ExecutionPB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ExecutionPB* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.ExecutionPB"; }

 protected:
  explicit ExecutionPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ExecutionPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ExecutionPB& from);
  ExecutionPB(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ExecutionPB&& from) noexcept
      : ExecutionPB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kExecIdFieldNumber = 1,
    kTimeFieldNumber = 2,
    kAcctNumberFieldNumber = 3,
    kExchangeFieldNumber = 4,
    kSideFieldNumber = 5,
    kOrderRefFieldNumber = 13,
    kModelCodeFieldNumber = 14,
    kSharesFieldNumber = 6,
    kPriceFieldNumber = 7,
    kPermIdFieldNumber = 8,
    kOrderIdFieldNumber = 10,
    kCumQtyFieldNumber = 11,
    kAvgPriceFieldNumber = 12,
    kClientIdFieldNumber = 9,
    kLastLiquidityFieldNumber = 15,
    kPendingPriceRevisionFieldNumber = 16,
  };
  // string exec_id = 1;
  void clear_exec_id() ;
  const ::std::string& exec_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_exec_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_exec_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_exec_id();
  void set_allocated_exec_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_exec_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_exec_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_exec_id();

  public:
  // string time = 2;
  void clear_time() ;
  const ::std::string& time() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_time(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_time();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_time();
  void set_allocated_time(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_time() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_time(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // string acct_number = 3;
  void clear_acct_number() ;
  const ::std::string& acct_number() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_acct_number(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_acct_number();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_acct_number();
  void set_allocated_acct_number(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_acct_number() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_acct_number(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_acct_number();

  public:
  // string exchange = 4;
  void clear_exchange() ;
  const ::std::string& exchange() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_exchange(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_exchange();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_exchange();
  void set_allocated_exchange(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_exchange() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_exchange(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_exchange();

  public:
  // string side = 5;
  void clear_side() ;
  const ::std::string& side() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_side(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_side();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_side();
  void set_allocated_side(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_side() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_side(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_side();

  public:
  // string order_ref = 13;
  void clear_order_ref() ;
  const ::std::string& order_ref() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_order_ref(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_order_ref();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_order_ref();
  void set_allocated_order_ref(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_order_ref() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_order_ref(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_order_ref();

  public:
  // string model_code = 14;
  void clear_model_code() ;
  const ::std::string& model_code() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_model_code(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_model_code();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_model_code();
  void set_allocated_model_code(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_model_code() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_model_code(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_model_code();

  public:
  // double shares = 6;
  void clear_shares() ;
  double shares() const;
  void set_shares(double value);

  private:
  double _internal_shares() const;
  void _internal_set_shares(double value);

  public:
  // double price = 7;
  void clear_price() ;
  double price() const;
  void set_price(double value);

  private:
  double _internal_price() const;
  void _internal_set_price(double value);

  public:
  // int64 perm_id = 8;
  void clear_perm_id() ;
  ::int64_t perm_id() const;
  void set_perm_id(::int64_t value);

  private:
  ::int64_t _internal_perm_id() const;
  void _internal_set_perm_id(::int64_t value);

  public:
  // int64 order_id = 10;
  void clear_order_id() ;
  ::int64_t order_id() const;
  void set_order_id(::int64_t value);

  private:
  ::int64_t _internal_order_id() const;
  void _internal_set_order_id(::int64_t value);

  public:
  // double cum_qty = 11;
  void clear_cum_qty() ;
  double cum_qty() const;
  void set_cum_qty(double value);

  private:
  double _internal_cum_qty() const;
  void _internal_set_cum_qty(double value);

  public:
  // double avg_price = 12;
  void clear_avg_price() ;
  double avg_price() const;
  void set_avg_price(double value);

  private:
  double _internal_avg_price() const;
  void _internal_set_avg_price(double value);

  public:
  // int32 client_id = 9;
  void clear_client_id() ;
  ::int32_t client_id() const;
  void set_client_id(::int32_t value);

  private:
  ::int32_t _internal_client_id() const;
  void _internal_set_client_id(::int32_t value);

  public:
  // int32 last_liquidity = 15;
  void clear_last_liquidity() ;
  ::int32_t last_liquidity() const;
  void set_last_liquidity(::int32_t value);

  private:
  ::int32_t _internal_last_liquidity() const;
  void _internal_set_last_liquidity(::int32_t value);

  public:
  // bool pending_price_revision = 16;
  void clear_pending_price_revision() ;
  bool pending_price_revision() const;
  void set_pending_price_revision(bool value);

  private:
  bool _internal_pending_price_revision() const;
  void _internal_set_pending_price_revision(bool value);

  public:
  // @@protoc_insertion_point(class_scope:financio.trading.ExecutionPB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 16,
                                   0, 106,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ExecutionPB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr exec_id_;
    ::google::protobuf::internal::ArenaStringPtr time_;
    ::google::protobuf::internal::ArenaStringPtr acct_number_;
    ::google::protobuf::internal::ArenaStringPtr exchange_;
    ::google::protobuf::internal::ArenaStringPtr side_;
    ::google::protobuf::internal::ArenaStringPtr order_ref_;
    ::google::protobuf::internal::ArenaStringPtr model_code_;
    double shares_;
    double price_;
    ::int64_t perm_id_;
    ::int64_t order_id_;
    double cum_qty_;
    double avg_price_;
    ::int32_t client_id_;
    ::int32_t last_liquidity_;
    bool pending_price_revision_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_trading_2fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ExecutionPB_class_data_;
// -------------------------------------------------------------------

class ExecutionFilterPB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:financio.trading.ExecutionFilterPB) */ {
 public:
  inline ExecutionFilterPB() : ExecutionFilterPB(nullptr) {}
  ~ExecutionFilterPB() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ExecutionFilterPB* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ExecutionFilterPB));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExecutionFilterPB(::google::protobuf::internal::ConstantInitialized);

  inline ExecutionFilterPB(const ExecutionFilterPB& from) : ExecutionFilterPB(nullptr, from) {}
  inline ExecutionFilterPB(ExecutionFilterPB&& from) noexcept
      : ExecutionFilterPB(nullptr, ::std::move(from)) {}
  inline ExecutionFilterPB& operator=(const ExecutionFilterPB& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecutionFilterPB& operator=(ExecutionFilterPB&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecutionFilterPB& default_instance() {
    return *reinterpret_cast<const ExecutionFilterPB*>(
        &_ExecutionFilterPB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ExecutionFilterPB& a, ExecutionFilterPB& b) { a.Swap(&b); }
  inline void Swap(ExecutionFilterPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecutionFilterPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecutionFilterPB* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ExecutionFilterPB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExecutionFilterPB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExecutionFilterPB& from) { ExecutionFilterPB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ExecutionFilterPB* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.ExecutionFilterPB"; }

 protected:
  explicit ExecutionFilterPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ExecutionFilterPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ExecutionFilterPB& from);
  ExecutionFilterPB(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ExecutionFilterPB&& from) noexcept
      : ExecutionFilterPB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAcctCodeFieldNumber = 2,
    kTimeFieldNumber = 3,
    kSymbolFieldNumber = 4,
    kSecTypeFieldNumber = 5,
    kExchangeFieldNumber = 6,
    kSideFieldNumber = 7,
    kClientIdFieldNumber = 1,
    kLastNDaysFieldNumber = 8,
  };
  // string acct_code = 2;
  void clear_acct_code() ;
  const ::std::string& acct_code() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_acct_code(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_acct_code();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_acct_code();
  void set_allocated_acct_code(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_acct_code() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_acct_code(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_acct_code();

  public:
  // string time = 3;
  void clear_time() ;
  const ::std::string& time() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_time(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_time();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_time();
  void set_allocated_time(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_time() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_time(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // string symbol = 4;
  void clear_symbol() ;
  const ::std::string& symbol() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_symbol(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_symbol();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_symbol();
  void set_allocated_symbol(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_symbol() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_symbol(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_symbol();

  public:
  // string sec_type = 5;
  void clear_sec_type() ;
  const ::std::string& sec_type() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_sec_type(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_sec_type();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_sec_type();
  void set_allocated_sec_type(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_sec_type() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_sec_type(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_sec_type();

  public:
  // string exchange = 6;
  void clear_exchange() ;
  const ::std::string& exchange() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_exchange(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_exchange();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_exchange();
  void set_allocated_exchange(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_exchange() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_exchange(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_exchange();

  public:
  // string side = 7;
  void clear_side() ;
  const ::std::string& side() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_side(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_side();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_side();
  void set_allocated_side(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_side() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_side(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_side();

  public:
  // int32 client_id = 1;
  void clear_client_id() ;
  ::int32_t client_id() const;
  void set_client_id(::int32_t value);

  private:
  ::int32_t _internal_client_id() const;
  void _internal_set_client_id(::int32_t value);

  public:
  // int32 last_n_days = 8;
  void clear_last_n_days() ;
  ::int32_t last_n_days() const;
  void set_last_n_days(::int32_t value);

  private:
  ::int32_t _internal_last_n_days() const;
  void _internal_set_last_n_days(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:financio.trading.ExecutionFilterPB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   0, 90,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ExecutionFilterPB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr acct_code_;
    ::google::protobuf::internal::ArenaStringPtr time_;
    ::google::protobuf::internal::ArenaStringPtr symbol_;
    ::google::protobuf::internal::ArenaStringPtr sec_type_;
    ::google::protobuf::internal::ArenaStringPtr exchange_;
    ::google::protobuf::internal::ArenaStringPtr side_;
    ::int32_t client_id_;
    ::int32_t last_n_days_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_trading_2fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ExecutionFilterPB_class_data_;
// -------------------------------------------------------------------

class DecimalPB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:financio.trading.DecimalPB) */ {
 public:
  inline DecimalPB() : DecimalPB(nullptr) {}
  ~DecimalPB() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DecimalPB* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DecimalPB));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DecimalPB(::google::protobuf::internal::ConstantInitialized);

  inline DecimalPB(const DecimalPB& from) : DecimalPB(nullptr, from) {}
  inline DecimalPB(DecimalPB&& from) noexcept
      : DecimalPB(nullptr, ::std::move(from)) {}
  inline DecimalPB& operator=(const DecimalPB& from) {
    CopyFrom(from);
    return *this;
  }
  inline DecimalPB& operator=(DecimalPB&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DecimalPB& default_instance() {
    return *reinterpret_cast<const DecimalPB*>(
        &_DecimalPB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(DecimalPB& a, DecimalPB& b) { a.Swap(&b); }
  inline void Swap(DecimalPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DecimalPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DecimalPB* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<DecimalPB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const DecimalPB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const DecimalPB& from) { DecimalPB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(DecimalPB* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.DecimalPB"; }

 protected:
  explicit DecimalPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DecimalPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DecimalPB& from);
  DecimalPB(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DecimalPB&& from) noexcept
      : DecimalPB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMantissaFieldNumber = 1,
    kScaleFieldNumber = 2,
  };
  // int64 mantissa = 1;
  void clear_mantissa() ;
  ::int64_t mantissa() const;
  void set_mantissa(::int64_t value);

  private:
  ::int64_t _internal_mantissa() const;
  void _internal_set_mantissa(::int64_t value);

  public:
  // int32 scale = 2;
  void clear_scale() ;
  ::int32_t scale() const;
  void set_scale(::int32_t value);

  private:
  ::int32_t _internal_scale() const;
  void _internal_set_scale(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:financio.trading.DecimalPB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const DecimalPB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::int64_t mantissa_;
    ::int32_t scale_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_trading_2fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DecimalPB_class_data_;
// -------------------------------------------------------------------

class BarPB final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:financio.trading.BarPB) */ {
 public:
  inline BarPB() : BarPB(nullptr) {}
  ~BarPB() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BarPB* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BarPB));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BarPB(::google::protobuf::internal::ConstantInitialized);

  inline BarPB(const BarPB& from) : BarPB(nullptr, from) {}
  inline BarPB(BarPB&& from) noexcept
      : BarPB(nullptr, ::std::move(from)) {}
  inline BarPB& operator=(const BarPB& from) {
    CopyFrom(from);
    return *this;
  }
  inline BarPB& operator=(BarPB&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BarPB& default_instance() {
    return *reinterpret_cast<const BarPB*>(
        &_BarPB_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(BarPB& a, BarPB& b) { a.Swap(&b); }
  inline void Swap(BarPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BarPB* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BarPB* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BarPB>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BarPB& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BarPB& from) { BarPB::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BarPB* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.BarPB"; }

 protected:
  explicit BarPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BarPB(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BarPB& from);
  BarPB(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BarPB&& from) noexcept
      : BarPB(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kTimeFieldNumber = 1,
    kOpenFieldNumber = 2,
    kHighFieldNumber = 3,
    kLowFieldNumber = 4,
    kCloseFieldNumber = 5,
    kWapFieldNumber = 6,
    kVolumeFieldNumber = 7,
    kCountFieldNumber = 8,
  };
  // string time = 1;
  void clear_time() ;
  const ::std::string& time() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_time(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_time();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_time();
  void set_allocated_time(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_time() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_time(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // double open = 2;
  void clear_open() ;
  double open() const;
  void set_open(double value);

  private:
  double _internal_open() const;
  void _internal_set_open(double value);

  public:
  // double high = 3;
  void clear_high() ;
  double high() const;
  void set_high(double value);

  private:
  double _internal_high() const;
  void _internal_set_high(double value);

  public:
  // double low = 4;
  void clear_low() ;
  double low() const;
  void set_low(double value);

  private:
  double _internal_low() const;
  void _internal_set_low(double value);

  public:
  // double close = 5;
  void clear_close() ;
  double close() const;
  void set_close(double value);

  private:
  double _internal_close() const;
  void _internal_set_close(double value);

  public:
  // double wap = 6;
  void clear_wap() ;
  double wap() const;
  void set_wap(double value);

  private:
  double _internal_wap() const;
  void _internal_set_wap(double value);

  public:
  // double volume = 7;
  void clear_volume() ;
  double volume() const;
  void set_volume(double value);

  private:
  double _internal_volume() const;
  void _internal_set_volume(double value);

  public:
  // int32 count = 8;
  void clear_count() ;
  ::int32_t count() const;
  void set_count(::int32_t value);

  private:
  ::int32_t _internal_count() const;
  void _internal_set_count(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:financio.trading.BarPB)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<3, 8,
                                   0, 43,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BarPB& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr time_;
    double open_;
    double high_;
    double low_;
    double close_;
    double wap_;
    double volume_;
    ::int32_t count_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_trading_2fcommon_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BarPB_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// DecimalPB

// int64 mantissa = 1;
inline void DecimalPB::clear_mantissa() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mantissa_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline ::int64_t DecimalPB::mantissa() const {
  // @@protoc_insertion_point(field_get:financio.trading.DecimalPB.mantissa)
  return _internal_mantissa();
}
inline void DecimalPB::set_mantissa(::int64_t value) {
  _internal_set_mantissa(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:financio.trading.DecimalPB.mantissa)
}
inline ::int64_t DecimalPB::_internal_mantissa() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mantissa_;
}
inline void DecimalPB::_internal_set_mantissa(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mantissa_ = value;
}

// int32 scale = 2;
inline void DecimalPB::clear_scale() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scale_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t DecimalPB::scale() const {
  // @@protoc_insertion_point(field_get:financio.trading.DecimalPB.scale)
  return _internal_scale();
}
inline void DecimalPB::set_scale(::int32_t value) {
  _internal_set_scale(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:financio.trading.DecimalPB.scale)
}
inline ::int32_t DecimalPB::_internal_scale() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.scale_;
}
inline void DecimalPB::_internal_set_scale(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.scale_ = value;
}

// -------------------------------------------------------------------

// TickAttribPB

// bool can_auto_execute = 1;
inline void TickAttribPB::clear_can_auto_execute() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.can_auto_execute_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool TickAttribPB::can_auto_execute() const {
  // @@protoc_insertion_point(field_get:financio.trading.TickAttribPB.can_auto_execute)
  return _internal_can_auto_execute();
}
inline void TickAttribPB::set_can_auto_execute(bool value) {
  _internal_set_can_auto_execute(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:financio.trading.TickAttribPB.can_auto_execute)
}
inline bool TickAttribPB::_internal_can_auto_execute() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.can_auto_execute_;
}
inline void TickAttribPB::_internal_set_can_auto_execute(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.can_auto_execute_ = value;
}

// bool past_limit = 2;
inline void TickAttribPB::clear_past_limit() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.past_limit_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool TickAttribPB::past_limit() const {
  // @@protoc_insertion_point(field_get:financio.trading.TickAttribPB.past_limit)
  return _internal_past_limit();
}
inline void TickAttribPB::set_past_limit(bool value) {
  _internal_set_past_limit(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:financio.trading.TickAttribPB.past_limit)
}
inline bool TickAttribPB::_internal_past_limit() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.past_limit_;
}
inline void TickAttribPB::_internal_set_past_limit(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.past_limit_ = value;
}

// bool pre_open = 3;
inline void TickAttribPB::clear_pre_open() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pre_open_ = false;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline bool TickAttribPB::pre_open() const {
  // @@protoc_insertion_point(field_get:financio.trading.TickAttribPB.pre_open)
  return _internal_pre_open();
}
inline void TickAttribPB::set_pre_open(bool value) {
  _internal_set_pre_open(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:financio.trading.TickAttribPB.pre_open)
}
inline bool TickAttribPB::_internal_pre_open() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pre_open_;
}
inline void TickAttribPB::_internal_set_pre_open(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pre_open_ = value;
}

// bool bid_past_low = 4;
inline void TickAttribPB::clear_bid_past_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bid_past_low_ = false;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline bool TickAttribPB::bid_past_low() const {
  // @@protoc_insertion_point(field_get:financio.trading.TickAttribPB.bid_past_low)
  return _internal_bid_past_low();
}
inline void TickAttribPB::set_bid_past_low(bool value) {
  _internal_set_bid_past_low(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:financio.trading.TickAttribPB.bid_past_low)
}
inline bool TickAttribPB::_internal_bid_past_low() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.bid_past_low_;
}
inline void TickAttribPB::_internal_set_bid_past_low(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.bid_past_low_ = value;
}

// bool ask_past_high = 5;
inline void TickAttribPB::clear_ask_past_high() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ask_past_high_ = false;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline bool TickAttribPB::ask_past_high() const {
  // @@protoc_insertion_point(field_get:financio.trading.TickAttribPB.ask_past_high)
  return _internal_ask_past_high();
}
inline void TickAttribPB::set_ask_past_high(bool value) {
  _internal_set_ask_past_high(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:financio.trading.TickAttribPB.ask_past_high)
}
inline bool TickAttribPB::_internal_ask_past_high() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ask_past_high_;
}
inline void TickAttribPB::_internal_set_ask_past_high(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ask_past_high_ = value;
}

// bool delayed = 6;
inline void TickAttribPB::clear_delayed() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = false;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline bool TickAttribPB::delayed() const {
  // @@protoc_insertion_point(field_get:financio.trading.TickAttribPB.delayed)
  return _internal_delayed();
}
inline void TickAttribPB::set_delayed(bool value) {
  _internal_set_delayed(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:financio.trading.TickAttribPB.delayed)
}
inline bool TickAttribPB::_internal_delayed() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.delayed_;
}
inline void TickAttribPB::_internal_set_delayed(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.delayed_ = value;
}

// -------------------------------------------------------------------

// ExecutionPB

// string exec_id = 1;
inline void ExecutionPB::clear_exec_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exec_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ExecutionPB::exec_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.exec_id)
  return _internal_exec_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionPB::set_exec_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.exec_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.exec_id)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::mutable_exec_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_exec_id();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionPB.exec_id)
  return _s;
}
inline const ::std::string& ExecutionPB::_internal_exec_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exec_id_.Get();
}
inline void ExecutionPB::_internal_set_exec_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.exec_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::_internal_mutable_exec_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.exec_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionPB::release_exec_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionPB.exec_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.exec_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exec_id_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionPB::set_allocated_exec_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.exec_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exec_id_.IsDefault()) {
    _impl_.exec_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionPB.exec_id)
}

// string time = 2;
inline void ExecutionPB::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ExecutionPB::time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.time)
  return _internal_time();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionPB::set_time(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.time)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionPB.time)
  return _s;
}
inline const ::std::string& ExecutionPB::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_.Get();
}
inline void ExecutionPB::_internal_set_time(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.time_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.time_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionPB::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionPB.time)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.time_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.time_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionPB::set_allocated_time(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.time_.IsDefault()) {
    _impl_.time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionPB.time)
}

// string acct_number = 3;
inline void ExecutionPB::clear_acct_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acct_number_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& ExecutionPB::acct_number() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.acct_number)
  return _internal_acct_number();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionPB::set_acct_number(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.acct_number_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.acct_number)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::mutable_acct_number()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_acct_number();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionPB.acct_number)
  return _s;
}
inline const ::std::string& ExecutionPB::_internal_acct_number() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.acct_number_.Get();
}
inline void ExecutionPB::_internal_set_acct_number(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.acct_number_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::_internal_mutable_acct_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.acct_number_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionPB::release_acct_number() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionPB.acct_number)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.acct_number_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.acct_number_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionPB::set_allocated_acct_number(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.acct_number_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.acct_number_.IsDefault()) {
    _impl_.acct_number_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionPB.acct_number)
}

// string exchange = 4;
inline void ExecutionPB::clear_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& ExecutionPB::exchange() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.exchange)
  return _internal_exchange();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionPB::set_exchange(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.exchange_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.exchange)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::mutable_exchange()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_exchange();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionPB.exchange)
  return _s;
}
inline const ::std::string& ExecutionPB::_internal_exchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_.Get();
}
inline void ExecutionPB::_internal_set_exchange(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.exchange_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::_internal_mutable_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.exchange_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionPB::release_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionPB.exchange)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.exchange_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exchange_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionPB::set_allocated_exchange(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.exchange_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exchange_.IsDefault()) {
    _impl_.exchange_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionPB.exchange)
}

// string side = 5;
inline void ExecutionPB::clear_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::std::string& ExecutionPB::side() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.side)
  return _internal_side();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionPB::set_side(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.side_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.side)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::mutable_side()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_side();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionPB.side)
  return _s;
}
inline const ::std::string& ExecutionPB::_internal_side() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.side_.Get();
}
inline void ExecutionPB::_internal_set_side(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.side_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::_internal_mutable_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  return _impl_.side_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionPB::release_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionPB.side)
  if ((_impl_._has_bits_[0] & 0x00000010U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010U;
  auto* released = _impl_.side_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.side_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionPB::set_allocated_side(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  _impl_.side_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.side_.IsDefault()) {
    _impl_.side_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionPB.side)
}

// double shares = 6;
inline void ExecutionPB::clear_shares() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shares_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline double ExecutionPB::shares() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.shares)
  return _internal_shares();
}
inline void ExecutionPB::set_shares(double value) {
  _internal_set_shares(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.shares)
}
inline double ExecutionPB::_internal_shares() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shares_;
}
inline void ExecutionPB::_internal_set_shares(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shares_ = value;
}

// double price = 7;
inline void ExecutionPB::clear_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline double ExecutionPB::price() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.price)
  return _internal_price();
}
inline void ExecutionPB::set_price(double value) {
  _internal_set_price(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.price)
}
inline double ExecutionPB::_internal_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.price_;
}
inline void ExecutionPB::_internal_set_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.price_ = value;
}

// int64 perm_id = 8;
inline void ExecutionPB::clear_perm_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perm_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000200U;
}
inline ::int64_t ExecutionPB::perm_id() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.perm_id)
  return _internal_perm_id();
}
inline void ExecutionPB::set_perm_id(::int64_t value) {
  _internal_set_perm_id(value);
  _impl_._has_bits_[0] |= 0x00000200U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.perm_id)
}
inline ::int64_t ExecutionPB::_internal_perm_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perm_id_;
}
inline void ExecutionPB::_internal_set_perm_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perm_id_ = value;
}

// int32 client_id = 9;
inline void ExecutionPB::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000U;
}
inline ::int32_t ExecutionPB::client_id() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.client_id)
  return _internal_client_id();
}
inline void ExecutionPB::set_client_id(::int32_t value) {
  _internal_set_client_id(value);
  _impl_._has_bits_[0] |= 0x00002000U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.client_id)
}
inline ::int32_t ExecutionPB::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_;
}
inline void ExecutionPB::_internal_set_client_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_ = value;
}

// int64 order_id = 10;
inline void ExecutionPB::clear_order_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000400U;
}
inline ::int64_t ExecutionPB::order_id() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.order_id)
  return _internal_order_id();
}
inline void ExecutionPB::set_order_id(::int64_t value) {
  _internal_set_order_id(value);
  _impl_._has_bits_[0] |= 0x00000400U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.order_id)
}
inline ::int64_t ExecutionPB::_internal_order_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_id_;
}
inline void ExecutionPB::_internal_set_order_id(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_id_ = value;
}

// double cum_qty = 11;
inline void ExecutionPB::clear_cum_qty() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cum_qty_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800U;
}
inline double ExecutionPB::cum_qty() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.cum_qty)
  return _internal_cum_qty();
}
inline void ExecutionPB::set_cum_qty(double value) {
  _internal_set_cum_qty(value);
  _impl_._has_bits_[0] |= 0x00000800U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.cum_qty)
}
inline double ExecutionPB::_internal_cum_qty() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.cum_qty_;
}
inline void ExecutionPB::_internal_set_cum_qty(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.cum_qty_ = value;
}

// double avg_price = 12;
inline void ExecutionPB::clear_avg_price() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avg_price_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000U;
}
inline double ExecutionPB::avg_price() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.avg_price)
  return _internal_avg_price();
}
inline void ExecutionPB::set_avg_price(double value) {
  _internal_set_avg_price(value);
  _impl_._has_bits_[0] |= 0x00001000U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.avg_price)
}
inline double ExecutionPB::_internal_avg_price() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avg_price_;
}
inline void ExecutionPB::_internal_set_avg_price(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avg_price_ = value;
}

// string order_ref = 13;
inline void ExecutionPB::clear_order_ref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.order_ref_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline const ::std::string& ExecutionPB::order_ref() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.order_ref)
  return _internal_order_ref();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionPB::set_order_ref(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  _impl_.order_ref_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.order_ref)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::mutable_order_ref()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_order_ref();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionPB.order_ref)
  return _s;
}
inline const ::std::string& ExecutionPB::_internal_order_ref() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.order_ref_.Get();
}
inline void ExecutionPB::_internal_set_order_ref(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  _impl_.order_ref_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::_internal_mutable_order_ref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  return _impl_.order_ref_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionPB::release_order_ref() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionPB.order_ref)
  if ((_impl_._has_bits_[0] & 0x00000020U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020U;
  auto* released = _impl_.order_ref_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.order_ref_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionPB::set_allocated_order_ref(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }
  _impl_.order_ref_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.order_ref_.IsDefault()) {
    _impl_.order_ref_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionPB.order_ref)
}

// string model_code = 14;
inline void ExecutionPB::clear_model_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.model_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline const ::std::string& ExecutionPB::model_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.model_code)
  return _internal_model_code();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionPB::set_model_code(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040U;
  _impl_.model_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.model_code)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::mutable_model_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_model_code();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionPB.model_code)
  return _s;
}
inline const ::std::string& ExecutionPB::_internal_model_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.model_code_.Get();
}
inline void ExecutionPB::_internal_set_model_code(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040U;
  _impl_.model_code_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionPB::_internal_mutable_model_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040U;
  return _impl_.model_code_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionPB::release_model_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionPB.model_code)
  if ((_impl_._has_bits_[0] & 0x00000040U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040U;
  auto* released = _impl_.model_code_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.model_code_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionPB::set_allocated_model_code(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040U;
  }
  _impl_.model_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.model_code_.IsDefault()) {
    _impl_.model_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionPB.model_code)
}

// int32 last_liquidity = 15;
inline void ExecutionPB::clear_last_liquidity() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_liquidity_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000U;
}
inline ::int32_t ExecutionPB::last_liquidity() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.last_liquidity)
  return _internal_last_liquidity();
}
inline void ExecutionPB::set_last_liquidity(::int32_t value) {
  _internal_set_last_liquidity(value);
  _impl_._has_bits_[0] |= 0x00004000U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.last_liquidity)
}
inline ::int32_t ExecutionPB::_internal_last_liquidity() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_liquidity_;
}
inline void ExecutionPB::_internal_set_last_liquidity(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_liquidity_ = value;
}

// bool pending_price_revision = 16;
inline void ExecutionPB::clear_pending_price_revision() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_price_revision_ = false;
  _impl_._has_bits_[0] &= ~0x00008000U;
}
inline bool ExecutionPB::pending_price_revision() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionPB.pending_price_revision)
  return _internal_pending_price_revision();
}
inline void ExecutionPB::set_pending_price_revision(bool value) {
  _internal_set_pending_price_revision(value);
  _impl_._has_bits_[0] |= 0x00008000U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionPB.pending_price_revision)
}
inline bool ExecutionPB::_internal_pending_price_revision() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.pending_price_revision_;
}
inline void ExecutionPB::_internal_set_pending_price_revision(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.pending_price_revision_ = value;
}

// -------------------------------------------------------------------

// BarPB

// string time = 1;
inline void BarPB::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& BarPB::time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.BarPB.time)
  return _internal_time();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BarPB::set_time(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.BarPB.time)
}
inline ::std::string* PROTOBUF_NONNULL BarPB::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:financio.trading.BarPB.time)
  return _s;
}
inline const ::std::string& BarPB::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_.Get();
}
inline void BarPB::_internal_set_time(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.time_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BarPB::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.time_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BarPB::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.BarPB.time)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.time_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.time_.Set("", GetArena());
  }
  return released;
}
inline void BarPB::set_allocated_time(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.time_.IsDefault()) {
    _impl_.time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.BarPB.time)
}

// double open = 2;
inline void BarPB::clear_open() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.open_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline double BarPB::open() const {
  // @@protoc_insertion_point(field_get:financio.trading.BarPB.open)
  return _internal_open();
}
inline void BarPB::set_open(double value) {
  _internal_set_open(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:financio.trading.BarPB.open)
}
inline double BarPB::_internal_open() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.open_;
}
inline void BarPB::_internal_set_open(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.open_ = value;
}

// double high = 3;
inline void BarPB::clear_high() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline double BarPB::high() const {
  // @@protoc_insertion_point(field_get:financio.trading.BarPB.high)
  return _internal_high();
}
inline void BarPB::set_high(double value) {
  _internal_set_high(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:financio.trading.BarPB.high)
}
inline double BarPB::_internal_high() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.high_;
}
inline void BarPB::_internal_set_high(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.high_ = value;
}

// double low = 4;
inline void BarPB::clear_low() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.low_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline double BarPB::low() const {
  // @@protoc_insertion_point(field_get:financio.trading.BarPB.low)
  return _internal_low();
}
inline void BarPB::set_low(double value) {
  _internal_set_low(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:financio.trading.BarPB.low)
}
inline double BarPB::_internal_low() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.low_;
}
inline void BarPB::_internal_set_low(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.low_ = value;
}

// double close = 5;
inline void BarPB::clear_close() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline double BarPB::close() const {
  // @@protoc_insertion_point(field_get:financio.trading.BarPB.close)
  return _internal_close();
}
inline void BarPB::set_close(double value) {
  _internal_set_close(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:financio.trading.BarPB.close)
}
inline double BarPB::_internal_close() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.close_;
}
inline void BarPB::_internal_set_close(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.close_ = value;
}

// double wap = 6;
inline void BarPB::clear_wap() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wap_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline double BarPB::wap() const {
  // @@protoc_insertion_point(field_get:financio.trading.BarPB.wap)
  return _internal_wap();
}
inline void BarPB::set_wap(double value) {
  _internal_set_wap(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:financio.trading.BarPB.wap)
}
inline double BarPB::_internal_wap() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.wap_;
}
inline void BarPB::_internal_set_wap(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.wap_ = value;
}

// double volume = 7;
inline void BarPB::clear_volume() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline double BarPB::volume() const {
  // @@protoc_insertion_point(field_get:financio.trading.BarPB.volume)
  return _internal_volume();
}
inline void BarPB::set_volume(double value) {
  _internal_set_volume(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:financio.trading.BarPB.volume)
}
inline double BarPB::_internal_volume() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.volume_;
}
inline void BarPB::_internal_set_volume(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.volume_ = value;
}

// int32 count = 8;
inline void BarPB::clear_count() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::int32_t BarPB::count() const {
  // @@protoc_insertion_point(field_get:financio.trading.BarPB.count)
  return _internal_count();
}
inline void BarPB::set_count(::int32_t value) {
  _internal_set_count(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:financio.trading.BarPB.count)
}
inline ::int32_t BarPB::_internal_count() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.count_;
}
inline void BarPB::_internal_set_count(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.count_ = value;
}

// -------------------------------------------------------------------

// ExecutionFilterPB

// int32 client_id = 1;
inline void ExecutionFilterPB::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::int32_t ExecutionFilterPB::client_id() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionFilterPB.client_id)
  return _internal_client_id();
}
inline void ExecutionFilterPB::set_client_id(::int32_t value) {
  _internal_set_client_id(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionFilterPB.client_id)
}
inline ::int32_t ExecutionFilterPB::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_;
}
inline void ExecutionFilterPB::_internal_set_client_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_ = value;
}

// string acct_code = 2;
inline void ExecutionFilterPB::clear_acct_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acct_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ExecutionFilterPB::acct_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionFilterPB.acct_code)
  return _internal_acct_code();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilterPB::set_acct_code(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.acct_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionFilterPB.acct_code)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::mutable_acct_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_acct_code();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionFilterPB.acct_code)
  return _s;
}
inline const ::std::string& ExecutionFilterPB::_internal_acct_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.acct_code_.Get();
}
inline void ExecutionFilterPB::_internal_set_acct_code(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.acct_code_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::_internal_mutable_acct_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.acct_code_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilterPB::release_acct_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionFilterPB.acct_code)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.acct_code_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.acct_code_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilterPB::set_allocated_acct_code(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.acct_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.acct_code_.IsDefault()) {
    _impl_.acct_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionFilterPB.acct_code)
}

// string time = 3;
inline void ExecutionFilterPB::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ExecutionFilterPB::time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionFilterPB.time)
  return _internal_time();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilterPB::set_time(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionFilterPB.time)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionFilterPB.time)
  return _s;
}
inline const ::std::string& ExecutionFilterPB::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_.Get();
}
inline void ExecutionFilterPB::_internal_set_time(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.time_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.time_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilterPB::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionFilterPB.time)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.time_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.time_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilterPB::set_allocated_time(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.time_.IsDefault()) {
    _impl_.time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionFilterPB.time)
}

// string symbol = 4;
inline void ExecutionFilterPB::clear_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& ExecutionFilterPB::symbol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionFilterPB.symbol)
  return _internal_symbol();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilterPB::set_symbol(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.symbol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionFilterPB.symbol)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::mutable_symbol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_symbol();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionFilterPB.symbol)
  return _s;
}
inline const ::std::string& ExecutionFilterPB::_internal_symbol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.symbol_.Get();
}
inline void ExecutionFilterPB::_internal_set_symbol(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.symbol_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::_internal_mutable_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.symbol_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilterPB::release_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionFilterPB.symbol)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.symbol_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.symbol_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilterPB::set_allocated_symbol(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.symbol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.symbol_.IsDefault()) {
    _impl_.symbol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionFilterPB.symbol)
}

// string sec_type = 5;
inline void ExecutionFilterPB::clear_sec_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sec_type_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& ExecutionFilterPB::sec_type() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionFilterPB.sec_type)
  return _internal_sec_type();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilterPB::set_sec_type(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.sec_type_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionFilterPB.sec_type)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::mutable_sec_type()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_sec_type();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionFilterPB.sec_type)
  return _s;
}
inline const ::std::string& ExecutionFilterPB::_internal_sec_type() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sec_type_.Get();
}
inline void ExecutionFilterPB::_internal_set_sec_type(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.sec_type_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::_internal_mutable_sec_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.sec_type_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilterPB::release_sec_type() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionFilterPB.sec_type)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.sec_type_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sec_type_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilterPB::set_allocated_sec_type(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.sec_type_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sec_type_.IsDefault()) {
    _impl_.sec_type_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionFilterPB.sec_type)
}

// string exchange = 6;
inline void ExecutionFilterPB::clear_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::std::string& ExecutionFilterPB::exchange() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionFilterPB.exchange)
  return _internal_exchange();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilterPB::set_exchange(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.exchange_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionFilterPB.exchange)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::mutable_exchange()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_exchange();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionFilterPB.exchange)
  return _s;
}
inline const ::std::string& ExecutionFilterPB::_internal_exchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_.Get();
}
inline void ExecutionFilterPB::_internal_set_exchange(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.exchange_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::_internal_mutable_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  return _impl_.exchange_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilterPB::release_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionFilterPB.exchange)
  if ((_impl_._has_bits_[0] & 0x00000010U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010U;
  auto* released = _impl_.exchange_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exchange_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilterPB::set_allocated_exchange(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  _impl_.exchange_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exchange_.IsDefault()) {
    _impl_.exchange_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionFilterPB.exchange)
}

// string side = 7;
inline void ExecutionFilterPB::clear_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline const ::std::string& ExecutionFilterPB::side() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionFilterPB.side)
  return _internal_side();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilterPB::set_side(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  _impl_.side_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionFilterPB.side)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::mutable_side()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_side();
  // @@protoc_insertion_point(field_mutable:financio.trading.ExecutionFilterPB.side)
  return _s;
}
inline const ::std::string& ExecutionFilterPB::_internal_side() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.side_.Get();
}
inline void ExecutionFilterPB::_internal_set_side(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  _impl_.side_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilterPB::_internal_mutable_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  return _impl_.side_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilterPB::release_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ExecutionFilterPB.side)
  if ((_impl_._has_bits_[0] & 0x00000020U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020U;
  auto* released = _impl_.side_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.side_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilterPB::set_allocated_side(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }
  _impl_.side_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.side_.IsDefault()) {
    _impl_.side_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ExecutionFilterPB.side)
}

// int32 last_n_days = 8;
inline void ExecutionFilterPB::clear_last_n_days() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_n_days_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::int32_t ExecutionFilterPB::last_n_days() const {
  // @@protoc_insertion_point(field_get:financio.trading.ExecutionFilterPB.last_n_days)
  return _internal_last_n_days();
}
inline void ExecutionFilterPB::set_last_n_days(::int32_t value) {
  _internal_set_last_n_days(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:financio.trading.ExecutionFilterPB.last_n_days)
}
inline ::int32_t ExecutionFilterPB::_internal_last_n_days() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.last_n_days_;
}
inline void ExecutionFilterPB::_internal_set_last_n_days(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.last_n_days_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace trading
}  // namespace financio


namespace google {
namespace protobuf {

template <>
struct is_proto_enum<::financio::trading::BackendStatus> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::financio::trading::BackendStatus>() {
  return ::financio::trading::BackendStatus_descriptor();
}
template <>
struct is_proto_enum<::financio::trading::ControlType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::financio::trading::ControlType>() {
  return ::financio::trading::ControlType_descriptor();
}
template <>
struct is_proto_enum<::financio::trading::StateType> : std::true_type {};
template <>
inline const EnumDescriptor* PROTOBUF_NONNULL GetEnumDescriptor<::financio::trading::StateType>() {
  return ::financio::trading::StateType_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // trading_2fcommon_2eproto_2epb_2eh

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: trading/lifecycle.proto
// Protobuf C++ Version: 6.32.1

#ifndef trading_2flifecycle_2eproto_2epb_2eh
#define trading_2flifecycle_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "google/protobuf/timestamp.pb.h"
#include "trading/common.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_trading_2flifecycle_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_trading_2flifecycle_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_trading_2flifecycle_2eproto;
}  // extern "C"
namespace financio {
namespace trading {
class BackendStatusUpdate;
struct BackendStatusUpdateDefaultTypeInternal;
extern BackendStatusUpdateDefaultTypeInternal _BackendStatusUpdate_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull BackendStatusUpdate_class_data_;
class ConnectBroker;
struct ConnectBrokerDefaultTypeInternal;
extern ConnectBrokerDefaultTypeInternal _ConnectBroker_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ConnectBroker_class_data_;
class DisconnectBroker;
struct DisconnectBrokerDefaultTypeInternal;
extern DisconnectBrokerDefaultTypeInternal _DisconnectBroker_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull DisconnectBroker_class_data_;
class FrontendCommand;
struct FrontendCommandDefaultTypeInternal;
extern FrontendCommandDefaultTypeInternal _FrontendCommand_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull FrontendCommand_class_data_;
class StartBackend;
struct StartBackendDefaultTypeInternal;
extern StartBackendDefaultTypeInternal _StartBackend_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StartBackend_class_data_;
class StopBackend;
struct StopBackendDefaultTypeInternal;
extern StopBackendDefaultTypeInternal _StopBackend_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull StopBackend_class_data_;
}  // namespace trading
}  // namespace financio
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace financio {
namespace trading {

// ===================================================================


// -------------------------------------------------------------------

class StopBackend final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:financio.trading.StopBackend) */ {
 public:
  inline StopBackend() : StopBackend(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StopBackend* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StopBackend));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StopBackend(::google::protobuf::internal::ConstantInitialized);

  inline StopBackend(const StopBackend& from) : StopBackend(nullptr, from) {}
  inline StopBackend(StopBackend&& from) noexcept
      : StopBackend(nullptr, ::std::move(from)) {}
  inline StopBackend& operator=(const StopBackend& from) {
    CopyFrom(from);
    return *this;
  }
  inline StopBackend& operator=(StopBackend&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StopBackend& default_instance() {
    return *reinterpret_cast<const StopBackend*>(
        &_StopBackend_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(StopBackend& a, StopBackend& b) { a.Swap(&b); }
  inline void Swap(StopBackend* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StopBackend* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StopBackend* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StopBackend>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StopBackend& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StopBackend& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.StopBackend"; }

 protected:
  explicit StopBackend(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StopBackend(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StopBackend& from);
  StopBackend(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StopBackend&& from) noexcept
      : StopBackend(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:financio.trading.StopBackend)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  friend struct ::TableStruct_trading_2flifecycle_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StopBackend_class_data_;
// -------------------------------------------------------------------

class StartBackend final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:financio.trading.StartBackend) */ {
 public:
  inline StartBackend() : StartBackend(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(StartBackend* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(StartBackend));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR StartBackend(::google::protobuf::internal::ConstantInitialized);

  inline StartBackend(const StartBackend& from) : StartBackend(nullptr, from) {}
  inline StartBackend(StartBackend&& from) noexcept
      : StartBackend(nullptr, ::std::move(from)) {}
  inline StartBackend& operator=(const StartBackend& from) {
    CopyFrom(from);
    return *this;
  }
  inline StartBackend& operator=(StartBackend&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const StartBackend& default_instance() {
    return *reinterpret_cast<const StartBackend*>(
        &_StartBackend_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(StartBackend& a, StartBackend& b) { a.Swap(&b); }
  inline void Swap(StartBackend* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(StartBackend* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  StartBackend* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<StartBackend>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const StartBackend& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const StartBackend& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.StartBackend"; }

 protected:
  explicit StartBackend(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  StartBackend(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const StartBackend& from);
  StartBackend(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, StartBackend&& from) noexcept
      : StartBackend(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:financio.trading.StartBackend)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  friend struct ::TableStruct_trading_2flifecycle_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull StartBackend_class_data_;
// -------------------------------------------------------------------

class DisconnectBroker final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:financio.trading.DisconnectBroker) */ {
 public:
  inline DisconnectBroker() : DisconnectBroker(nullptr) {}

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(DisconnectBroker* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(DisconnectBroker));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR DisconnectBroker(::google::protobuf::internal::ConstantInitialized);

  inline DisconnectBroker(const DisconnectBroker& from) : DisconnectBroker(nullptr, from) {}
  inline DisconnectBroker(DisconnectBroker&& from) noexcept
      : DisconnectBroker(nullptr, ::std::move(from)) {}
  inline DisconnectBroker& operator=(const DisconnectBroker& from) {
    CopyFrom(from);
    return *this;
  }
  inline DisconnectBroker& operator=(DisconnectBroker&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const DisconnectBroker& default_instance() {
    return *reinterpret_cast<const DisconnectBroker*>(
        &_DisconnectBroker_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(DisconnectBroker& a, DisconnectBroker& b) { a.Swap(&b); }
  inline void Swap(DisconnectBroker* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(DisconnectBroker* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  DisconnectBroker* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<DisconnectBroker>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const DisconnectBroker& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const DisconnectBroker& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.DisconnectBroker"; }

 protected:
  explicit DisconnectBroker(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  DisconnectBroker(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const DisconnectBroker& from);
  DisconnectBroker(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, DisconnectBroker&& from) noexcept
      : DisconnectBroker(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:financio.trading.DisconnectBroker)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 0,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  friend struct ::TableStruct_trading_2flifecycle_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull DisconnectBroker_class_data_;
// -------------------------------------------------------------------

class ConnectBroker final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:financio.trading.ConnectBroker) */ {
 public:
  inline ConnectBroker() : ConnectBroker(nullptr) {}
  ~ConnectBroker() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ConnectBroker* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ConnectBroker));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ConnectBroker(::google::protobuf::internal::ConstantInitialized);

  inline ConnectBroker(const ConnectBroker& from) : ConnectBroker(nullptr, from) {}
  inline ConnectBroker(ConnectBroker&& from) noexcept
      : ConnectBroker(nullptr, ::std::move(from)) {}
  inline ConnectBroker& operator=(const ConnectBroker& from) {
    CopyFrom(from);
    return *this;
  }
  inline ConnectBroker& operator=(ConnectBroker&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ConnectBroker& default_instance() {
    return *reinterpret_cast<const ConnectBroker*>(
        &_ConnectBroker_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(ConnectBroker& a, ConnectBroker& b) { a.Swap(&b); }
  inline void Swap(ConnectBroker* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ConnectBroker* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ConnectBroker* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ConnectBroker>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ConnectBroker& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ConnectBroker& from) { ConnectBroker::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ConnectBroker* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.ConnectBroker"; }

 protected:
  explicit ConnectBroker(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ConnectBroker(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ConnectBroker& from);
  ConnectBroker(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ConnectBroker&& from) noexcept
      : ConnectBroker(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kHostFieldNumber = 1,
    kPortFieldNumber = 2,
    kClientIdFieldNumber = 3,
  };
  // string host = 1;
  void clear_host() ;
  const ::std::string& host() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_host(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_host();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_host();
  void set_allocated_host(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_host() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_host(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_host();

  public:
  // int32 port = 2;
  void clear_port() ;
  ::int32_t port() const;
  void set_port(::int32_t value);

  private:
  ::int32_t _internal_port() const;
  void _internal_set_port(::int32_t value);

  public:
  // int32 client_id = 3;
  void clear_client_id() ;
  ::int32_t client_id() const;
  void set_client_id(::int32_t value);

  private:
  ::int32_t _internal_client_id() const;
  void _internal_set_client_id(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:financio.trading.ConnectBroker)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 43,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ConnectBroker& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr host_;
    ::int32_t port_;
    ::int32_t client_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_trading_2flifecycle_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ConnectBroker_class_data_;
// -------------------------------------------------------------------

class FrontendCommand final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:financio.trading.FrontendCommand) */ {
 public:
  inline FrontendCommand() : FrontendCommand(nullptr) {}
  ~FrontendCommand() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(FrontendCommand* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(FrontendCommand));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR FrontendCommand(::google::protobuf::internal::ConstantInitialized);

  inline FrontendCommand(const FrontendCommand& from) : FrontendCommand(nullptr, from) {}
  inline FrontendCommand(FrontendCommand&& from) noexcept
      : FrontendCommand(nullptr, ::std::move(from)) {}
  inline FrontendCommand& operator=(const FrontendCommand& from) {
    CopyFrom(from);
    return *this;
  }
  inline FrontendCommand& operator=(FrontendCommand&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const FrontendCommand& default_instance() {
    return *reinterpret_cast<const FrontendCommand*>(
        &_FrontendCommand_default_instance_);
  }
  enum CmdCase {
    kStartBackend = 1,
    kStopBackend = 2,
    kConnectBroker = 3,
    kDisconnectBroker = 4,
    CMD_NOT_SET = 0,
  };
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(FrontendCommand& a, FrontendCommand& b) { a.Swap(&b); }
  inline void Swap(FrontendCommand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(FrontendCommand* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  FrontendCommand* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<FrontendCommand>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const FrontendCommand& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const FrontendCommand& from) { FrontendCommand::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(FrontendCommand* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.FrontendCommand"; }

 protected:
  explicit FrontendCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  FrontendCommand(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const FrontendCommand& from);
  FrontendCommand(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, FrontendCommand&& from) noexcept
      : FrontendCommand(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStartBackendFieldNumber = 1,
    kStopBackendFieldNumber = 2,
    kConnectBrokerFieldNumber = 3,
    kDisconnectBrokerFieldNumber = 4,
  };
  // .financio.trading.StartBackend start_backend = 1;
  bool has_start_backend() const;
  private:
  bool _internal_has_start_backend() const;

  public:
  void clear_start_backend() ;
  const ::financio::trading::StartBackend& start_backend() const;
  [[nodiscard]] ::financio::trading::StartBackend* PROTOBUF_NULLABLE release_start_backend();
  ::financio::trading::StartBackend* PROTOBUF_NONNULL mutable_start_backend();
  void set_allocated_start_backend(::financio::trading::StartBackend* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_start_backend(::financio::trading::StartBackend* PROTOBUF_NULLABLE value);
  ::financio::trading::StartBackend* PROTOBUF_NULLABLE unsafe_arena_release_start_backend();

  private:
  const ::financio::trading::StartBackend& _internal_start_backend() const;
  ::financio::trading::StartBackend* PROTOBUF_NONNULL _internal_mutable_start_backend();

  public:
  // .financio.trading.StopBackend stop_backend = 2;
  bool has_stop_backend() const;
  private:
  bool _internal_has_stop_backend() const;

  public:
  void clear_stop_backend() ;
  const ::financio::trading::StopBackend& stop_backend() const;
  [[nodiscard]] ::financio::trading::StopBackend* PROTOBUF_NULLABLE release_stop_backend();
  ::financio::trading::StopBackend* PROTOBUF_NONNULL mutable_stop_backend();
  void set_allocated_stop_backend(::financio::trading::StopBackend* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_stop_backend(::financio::trading::StopBackend* PROTOBUF_NULLABLE value);
  ::financio::trading::StopBackend* PROTOBUF_NULLABLE unsafe_arena_release_stop_backend();

  private:
  const ::financio::trading::StopBackend& _internal_stop_backend() const;
  ::financio::trading::StopBackend* PROTOBUF_NONNULL _internal_mutable_stop_backend();

  public:
  // .financio.trading.ConnectBroker connect_broker = 3;
  bool has_connect_broker() const;
  private:
  bool _internal_has_connect_broker() const;

  public:
  void clear_connect_broker() ;
  const ::financio::trading::ConnectBroker& connect_broker() const;
  [[nodiscard]] ::financio::trading::ConnectBroker* PROTOBUF_NULLABLE release_connect_broker();
  ::financio::trading::ConnectBroker* PROTOBUF_NONNULL mutable_connect_broker();
  void set_allocated_connect_broker(::financio::trading::ConnectBroker* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_connect_broker(::financio::trading::ConnectBroker* PROTOBUF_NULLABLE value);
  ::financio::trading::ConnectBroker* PROTOBUF_NULLABLE unsafe_arena_release_connect_broker();

  private:
  const ::financio::trading::ConnectBroker& _internal_connect_broker() const;
  ::financio::trading::ConnectBroker* PROTOBUF_NONNULL _internal_mutable_connect_broker();

  public:
  // .financio.trading.DisconnectBroker disconnect_broker = 4;
  bool has_disconnect_broker() const;
  private:
  bool _internal_has_disconnect_broker() const;

  public:
  void clear_disconnect_broker() ;
  const ::financio::trading::DisconnectBroker& disconnect_broker() const;
  [[nodiscard]] ::financio::trading::DisconnectBroker* PROTOBUF_NULLABLE release_disconnect_broker();
  ::financio::trading::DisconnectBroker* PROTOBUF_NONNULL mutable_disconnect_broker();
  void set_allocated_disconnect_broker(::financio::trading::DisconnectBroker* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_disconnect_broker(::financio::trading::DisconnectBroker* PROTOBUF_NULLABLE value);
  ::financio::trading::DisconnectBroker* PROTOBUF_NULLABLE unsafe_arena_release_disconnect_broker();

  private:
  const ::financio::trading::DisconnectBroker& _internal_disconnect_broker() const;
  ::financio::trading::DisconnectBroker* PROTOBUF_NONNULL _internal_mutable_disconnect_broker();

  public:
  void clear_cmd();
  CmdCase cmd_case() const;
  // @@protoc_insertion_point(class_scope:financio.trading.FrontendCommand)
 private:
  class _Internal;
  void set_has_start_backend();
  void set_has_stop_backend();
  void set_has_connect_broker();
  void set_has_disconnect_broker();
  inline bool has_cmd() const;
  inline void clear_has_cmd();
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 4,
                                   4, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const FrontendCommand& from_msg);
    union CmdUnion {
      constexpr CmdUnion() : _constinit_{} {}
      ::google::protobuf::internal::ConstantInitialized _constinit_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE start_backend_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE stop_backend_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE connect_broker_;
      ::google::protobuf::Message* PROTOBUF_NULLABLE disconnect_broker_;
    } cmd_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::uint32_t _oneof_case_[1];
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_trading_2flifecycle_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull FrontendCommand_class_data_;
// -------------------------------------------------------------------

class BackendStatusUpdate final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:financio.trading.BackendStatusUpdate) */ {
 public:
  inline BackendStatusUpdate() : BackendStatusUpdate(nullptr) {}
  ~BackendStatusUpdate() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(BackendStatusUpdate* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(BackendStatusUpdate));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR BackendStatusUpdate(::google::protobuf::internal::ConstantInitialized);

  inline BackendStatusUpdate(const BackendStatusUpdate& from) : BackendStatusUpdate(nullptr, from) {}
  inline BackendStatusUpdate(BackendStatusUpdate&& from) noexcept
      : BackendStatusUpdate(nullptr, ::std::move(from)) {}
  inline BackendStatusUpdate& operator=(const BackendStatusUpdate& from) {
    CopyFrom(from);
    return *this;
  }
  inline BackendStatusUpdate& operator=(BackendStatusUpdate&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const BackendStatusUpdate& default_instance() {
    return *reinterpret_cast<const BackendStatusUpdate*>(
        &_BackendStatusUpdate_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(BackendStatusUpdate& a, BackendStatusUpdate& b) { a.Swap(&b); }
  inline void Swap(BackendStatusUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(BackendStatusUpdate* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  BackendStatusUpdate* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<BackendStatusUpdate>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const BackendStatusUpdate& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const BackendStatusUpdate& from) { BackendStatusUpdate::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(BackendStatusUpdate* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "financio.trading.BackendStatusUpdate"; }

 protected:
  explicit BackendStatusUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  BackendStatusUpdate(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const BackendStatusUpdate& from);
  BackendStatusUpdate(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, BackendStatusUpdate&& from) noexcept
      : BackendStatusUpdate(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 2,
    kTsFieldNumber = 3,
    kStatusFieldNumber = 1,
  };
  // string message = 2;
  void clear_message() ;
  const ::std::string& message() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_message();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_message();
  void set_allocated_message(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_message() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_message(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_message();

  public:
  // .google.protobuf.Timestamp ts = 3;
  bool has_ts() const;
  void clear_ts() ;
  const ::google::protobuf::Timestamp& ts() const;
  [[nodiscard]] ::google::protobuf::Timestamp* PROTOBUF_NULLABLE release_ts();
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL mutable_ts();
  void set_allocated_ts(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  void unsafe_arena_set_allocated_ts(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value);
  ::google::protobuf::Timestamp* PROTOBUF_NULLABLE unsafe_arena_release_ts();

  private:
  const ::google::protobuf::Timestamp& _internal_ts() const;
  ::google::protobuf::Timestamp* PROTOBUF_NONNULL _internal_mutable_ts();

  public:
  // .financio.trading.BackendStatus status = 1;
  void clear_status() ;
  ::financio::trading::BackendStatus status() const;
  void set_status(::financio::trading::BackendStatus value);

  private:
  ::financio::trading::BackendStatus _internal_status() const;
  void _internal_set_status(::financio::trading::BackendStatus value);

  public:
  // @@protoc_insertion_point(class_scope:financio.trading.BackendStatusUpdate)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   1, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const BackendStatusUpdate& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr message_;
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE ts_;
    int status_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_trading_2flifecycle_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull BackendStatusUpdate_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// StartBackend

// -------------------------------------------------------------------

// StopBackend

// -------------------------------------------------------------------

// ConnectBroker

// string host = 1;
inline void ConnectBroker::clear_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.host_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ConnectBroker::host() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.ConnectBroker.host)
  return _internal_host();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ConnectBroker::set_host(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.host_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.ConnectBroker.host)
}
inline ::std::string* PROTOBUF_NONNULL ConnectBroker::mutable_host()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_host();
  // @@protoc_insertion_point(field_mutable:financio.trading.ConnectBroker.host)
  return _s;
}
inline const ::std::string& ConnectBroker::_internal_host() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.host_.Get();
}
inline void ConnectBroker::_internal_set_host(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.host_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ConnectBroker::_internal_mutable_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.host_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ConnectBroker::release_host() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.ConnectBroker.host)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.host_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.host_.Set("", GetArena());
  }
  return released;
}
inline void ConnectBroker::set_allocated_host(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.host_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.host_.IsDefault()) {
    _impl_.host_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ConnectBroker.host)
}

// int32 port = 2;
inline void ConnectBroker::clear_port() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = 0;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int32_t ConnectBroker::port() const {
  // @@protoc_insertion_point(field_get:financio.trading.ConnectBroker.port)
  return _internal_port();
}
inline void ConnectBroker::set_port(::int32_t value) {
  _internal_set_port(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:financio.trading.ConnectBroker.port)
}
inline ::int32_t ConnectBroker::_internal_port() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.port_;
}
inline void ConnectBroker::_internal_set_port(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.port_ = value;
}

// int32 client_id = 3;
inline void ConnectBroker::clear_client_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int32_t ConnectBroker::client_id() const {
  // @@protoc_insertion_point(field_get:financio.trading.ConnectBroker.client_id)
  return _internal_client_id();
}
inline void ConnectBroker::set_client_id(::int32_t value) {
  _internal_set_client_id(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:financio.trading.ConnectBroker.client_id)
}
inline ::int32_t ConnectBroker::_internal_client_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.client_id_;
}
inline void ConnectBroker::_internal_set_client_id(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.client_id_ = value;
}

// -------------------------------------------------------------------

// DisconnectBroker

// -------------------------------------------------------------------

// FrontendCommand

// .financio.trading.StartBackend start_backend = 1;
inline bool FrontendCommand::has_start_backend() const {
  return cmd_case() == kStartBackend;
}
inline bool FrontendCommand::_internal_has_start_backend() const {
  return cmd_case() == kStartBackend;
}
inline void FrontendCommand::set_has_start_backend() {
  _impl_._oneof_case_[0] = kStartBackend;
}
inline void FrontendCommand::clear_start_backend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStartBackend) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.start_backend_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.start_backend_);
    }
    clear_has_cmd();
  }
}
inline ::financio::trading::StartBackend* PROTOBUF_NULLABLE FrontendCommand::release_start_backend() {
  // @@protoc_insertion_point(field_release:financio.trading.FrontendCommand.start_backend)
  if (cmd_case() == kStartBackend) {
    clear_has_cmd();
    auto* temp = reinterpret_cast<::financio::trading::StartBackend*>(_impl_.cmd_.start_backend_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.start_backend_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::financio::trading::StartBackend& FrontendCommand::_internal_start_backend() const {
  return cmd_case() == kStartBackend ? *reinterpret_cast<::financio::trading::StartBackend*>(_impl_.cmd_.start_backend_) : reinterpret_cast<::financio::trading::StartBackend&>(::financio::trading::_StartBackend_default_instance_);
}
inline const ::financio::trading::StartBackend& FrontendCommand::start_backend() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.FrontendCommand.start_backend)
  return _internal_start_backend();
}
inline ::financio::trading::StartBackend* PROTOBUF_NULLABLE FrontendCommand::unsafe_arena_release_start_backend() {
  // @@protoc_insertion_point(field_unsafe_arena_release:financio.trading.FrontendCommand.start_backend)
  if (cmd_case() == kStartBackend) {
    clear_has_cmd();
    auto* temp = reinterpret_cast<::financio::trading::StartBackend*>(_impl_.cmd_.start_backend_);
    _impl_.cmd_.start_backend_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FrontendCommand::unsafe_arena_set_allocated_start_backend(
    ::financio::trading::StartBackend* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_start_backend();
    _impl_.cmd_.start_backend_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:financio.trading.FrontendCommand.start_backend)
}
inline ::financio::trading::StartBackend* PROTOBUF_NONNULL FrontendCommand::_internal_mutable_start_backend() {
  if (cmd_case() != kStartBackend) {
    clear_cmd();
    set_has_start_backend();
    _impl_.cmd_.start_backend_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::financio::trading::StartBackend>(GetArena()));
  }
  return reinterpret_cast<::financio::trading::StartBackend*>(_impl_.cmd_.start_backend_);
}
inline ::financio::trading::StartBackend* PROTOBUF_NONNULL FrontendCommand::mutable_start_backend()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::financio::trading::StartBackend* _msg = _internal_mutable_start_backend();
  // @@protoc_insertion_point(field_mutable:financio.trading.FrontendCommand.start_backend)
  return _msg;
}

// .financio.trading.StopBackend stop_backend = 2;
inline bool FrontendCommand::has_stop_backend() const {
  return cmd_case() == kStopBackend;
}
inline bool FrontendCommand::_internal_has_stop_backend() const {
  return cmd_case() == kStopBackend;
}
inline void FrontendCommand::set_has_stop_backend() {
  _impl_._oneof_case_[0] = kStopBackend;
}
inline void FrontendCommand::clear_stop_backend() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kStopBackend) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.stop_backend_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.stop_backend_);
    }
    clear_has_cmd();
  }
}
inline ::financio::trading::StopBackend* PROTOBUF_NULLABLE FrontendCommand::release_stop_backend() {
  // @@protoc_insertion_point(field_release:financio.trading.FrontendCommand.stop_backend)
  if (cmd_case() == kStopBackend) {
    clear_has_cmd();
    auto* temp = reinterpret_cast<::financio::trading::StopBackend*>(_impl_.cmd_.stop_backend_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.stop_backend_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::financio::trading::StopBackend& FrontendCommand::_internal_stop_backend() const {
  return cmd_case() == kStopBackend ? *reinterpret_cast<::financio::trading::StopBackend*>(_impl_.cmd_.stop_backend_) : reinterpret_cast<::financio::trading::StopBackend&>(::financio::trading::_StopBackend_default_instance_);
}
inline const ::financio::trading::StopBackend& FrontendCommand::stop_backend() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.FrontendCommand.stop_backend)
  return _internal_stop_backend();
}
inline ::financio::trading::StopBackend* PROTOBUF_NULLABLE FrontendCommand::unsafe_arena_release_stop_backend() {
  // @@protoc_insertion_point(field_unsafe_arena_release:financio.trading.FrontendCommand.stop_backend)
  if (cmd_case() == kStopBackend) {
    clear_has_cmd();
    auto* temp = reinterpret_cast<::financio::trading::StopBackend*>(_impl_.cmd_.stop_backend_);
    _impl_.cmd_.stop_backend_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FrontendCommand::unsafe_arena_set_allocated_stop_backend(
    ::financio::trading::StopBackend* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_stop_backend();
    _impl_.cmd_.stop_backend_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:financio.trading.FrontendCommand.stop_backend)
}
inline ::financio::trading::StopBackend* PROTOBUF_NONNULL FrontendCommand::_internal_mutable_stop_backend() {
  if (cmd_case() != kStopBackend) {
    clear_cmd();
    set_has_stop_backend();
    _impl_.cmd_.stop_backend_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::financio::trading::StopBackend>(GetArena()));
  }
  return reinterpret_cast<::financio::trading::StopBackend*>(_impl_.cmd_.stop_backend_);
}
inline ::financio::trading::StopBackend* PROTOBUF_NONNULL FrontendCommand::mutable_stop_backend()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::financio::trading::StopBackend* _msg = _internal_mutable_stop_backend();
  // @@protoc_insertion_point(field_mutable:financio.trading.FrontendCommand.stop_backend)
  return _msg;
}

// .financio.trading.ConnectBroker connect_broker = 3;
inline bool FrontendCommand::has_connect_broker() const {
  return cmd_case() == kConnectBroker;
}
inline bool FrontendCommand::_internal_has_connect_broker() const {
  return cmd_case() == kConnectBroker;
}
inline void FrontendCommand::set_has_connect_broker() {
  _impl_._oneof_case_[0] = kConnectBroker;
}
inline void FrontendCommand::clear_connect_broker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kConnectBroker) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.connect_broker_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.connect_broker_);
    }
    clear_has_cmd();
  }
}
inline ::financio::trading::ConnectBroker* PROTOBUF_NULLABLE FrontendCommand::release_connect_broker() {
  // @@protoc_insertion_point(field_release:financio.trading.FrontendCommand.connect_broker)
  if (cmd_case() == kConnectBroker) {
    clear_has_cmd();
    auto* temp = reinterpret_cast<::financio::trading::ConnectBroker*>(_impl_.cmd_.connect_broker_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.connect_broker_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::financio::trading::ConnectBroker& FrontendCommand::_internal_connect_broker() const {
  return cmd_case() == kConnectBroker ? *reinterpret_cast<::financio::trading::ConnectBroker*>(_impl_.cmd_.connect_broker_) : reinterpret_cast<::financio::trading::ConnectBroker&>(::financio::trading::_ConnectBroker_default_instance_);
}
inline const ::financio::trading::ConnectBroker& FrontendCommand::connect_broker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.FrontendCommand.connect_broker)
  return _internal_connect_broker();
}
inline ::financio::trading::ConnectBroker* PROTOBUF_NULLABLE FrontendCommand::unsafe_arena_release_connect_broker() {
  // @@protoc_insertion_point(field_unsafe_arena_release:financio.trading.FrontendCommand.connect_broker)
  if (cmd_case() == kConnectBroker) {
    clear_has_cmd();
    auto* temp = reinterpret_cast<::financio::trading::ConnectBroker*>(_impl_.cmd_.connect_broker_);
    _impl_.cmd_.connect_broker_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FrontendCommand::unsafe_arena_set_allocated_connect_broker(
    ::financio::trading::ConnectBroker* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_connect_broker();
    _impl_.cmd_.connect_broker_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:financio.trading.FrontendCommand.connect_broker)
}
inline ::financio::trading::ConnectBroker* PROTOBUF_NONNULL FrontendCommand::_internal_mutable_connect_broker() {
  if (cmd_case() != kConnectBroker) {
    clear_cmd();
    set_has_connect_broker();
    _impl_.cmd_.connect_broker_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::financio::trading::ConnectBroker>(GetArena()));
  }
  return reinterpret_cast<::financio::trading::ConnectBroker*>(_impl_.cmd_.connect_broker_);
}
inline ::financio::trading::ConnectBroker* PROTOBUF_NONNULL FrontendCommand::mutable_connect_broker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::financio::trading::ConnectBroker* _msg = _internal_mutable_connect_broker();
  // @@protoc_insertion_point(field_mutable:financio.trading.FrontendCommand.connect_broker)
  return _msg;
}

// .financio.trading.DisconnectBroker disconnect_broker = 4;
inline bool FrontendCommand::has_disconnect_broker() const {
  return cmd_case() == kDisconnectBroker;
}
inline bool FrontendCommand::_internal_has_disconnect_broker() const {
  return cmd_case() == kDisconnectBroker;
}
inline void FrontendCommand::set_has_disconnect_broker() {
  _impl_._oneof_case_[0] = kDisconnectBroker;
}
inline void FrontendCommand::clear_disconnect_broker() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (cmd_case() == kDisconnectBroker) {
    if (GetArena() == nullptr) {
      delete _impl_.cmd_.disconnect_broker_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.cmd_.disconnect_broker_);
    }
    clear_has_cmd();
  }
}
inline ::financio::trading::DisconnectBroker* PROTOBUF_NULLABLE FrontendCommand::release_disconnect_broker() {
  // @@protoc_insertion_point(field_release:financio.trading.FrontendCommand.disconnect_broker)
  if (cmd_case() == kDisconnectBroker) {
    clear_has_cmd();
    auto* temp = reinterpret_cast<::financio::trading::DisconnectBroker*>(_impl_.cmd_.disconnect_broker_);
    if (GetArena() != nullptr) {
      temp = ::google::protobuf::internal::DuplicateIfNonNull(temp);
    }
    _impl_.cmd_.disconnect_broker_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline const ::financio::trading::DisconnectBroker& FrontendCommand::_internal_disconnect_broker() const {
  return cmd_case() == kDisconnectBroker ? *reinterpret_cast<::financio::trading::DisconnectBroker*>(_impl_.cmd_.disconnect_broker_) : reinterpret_cast<::financio::trading::DisconnectBroker&>(::financio::trading::_DisconnectBroker_default_instance_);
}
inline const ::financio::trading::DisconnectBroker& FrontendCommand::disconnect_broker() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.FrontendCommand.disconnect_broker)
  return _internal_disconnect_broker();
}
inline ::financio::trading::DisconnectBroker* PROTOBUF_NULLABLE FrontendCommand::unsafe_arena_release_disconnect_broker() {
  // @@protoc_insertion_point(field_unsafe_arena_release:financio.trading.FrontendCommand.disconnect_broker)
  if (cmd_case() == kDisconnectBroker) {
    clear_has_cmd();
    auto* temp = reinterpret_cast<::financio::trading::DisconnectBroker*>(_impl_.cmd_.disconnect_broker_);
    _impl_.cmd_.disconnect_broker_ = nullptr;
    return temp;
  } else {
    return nullptr;
  }
}
inline void FrontendCommand::unsafe_arena_set_allocated_disconnect_broker(
    ::financio::trading::DisconnectBroker* PROTOBUF_NULLABLE value) {
  // We rely on the oneof clear method to free the earlier contents
  // of this oneof. We can directly use the pointer we're given to
  // set the new value.
  clear_cmd();
  if (value) {
    set_has_disconnect_broker();
    _impl_.cmd_.disconnect_broker_ = reinterpret_cast<::google::protobuf::Message*>(value);
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:financio.trading.FrontendCommand.disconnect_broker)
}
inline ::financio::trading::DisconnectBroker* PROTOBUF_NONNULL FrontendCommand::_internal_mutable_disconnect_broker() {
  if (cmd_case() != kDisconnectBroker) {
    clear_cmd();
    set_has_disconnect_broker();
    _impl_.cmd_.disconnect_broker_ = reinterpret_cast<::google::protobuf::Message*>(
        ::google::protobuf::Message::DefaultConstruct<::financio::trading::DisconnectBroker>(GetArena()));
  }
  return reinterpret_cast<::financio::trading::DisconnectBroker*>(_impl_.cmd_.disconnect_broker_);
}
inline ::financio::trading::DisconnectBroker* PROTOBUF_NONNULL FrontendCommand::mutable_disconnect_broker()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::financio::trading::DisconnectBroker* _msg = _internal_mutable_disconnect_broker();
  // @@protoc_insertion_point(field_mutable:financio.trading.FrontendCommand.disconnect_broker)
  return _msg;
}

inline bool FrontendCommand::has_cmd() const {
  return cmd_case() != CMD_NOT_SET;
}
inline void FrontendCommand::clear_has_cmd() {
  _impl_._oneof_case_[0] = CMD_NOT_SET;
}
inline FrontendCommand::CmdCase FrontendCommand::cmd_case() const {
  return FrontendCommand::CmdCase(_impl_._oneof_case_[0]);
}
// -------------------------------------------------------------------

// BackendStatusUpdate

// .financio.trading.BackendStatus status = 1;
inline void BackendStatusUpdate::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = 0;
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::financio::trading::BackendStatus BackendStatusUpdate::status() const {
  // @@protoc_insertion_point(field_get:financio.trading.BackendStatusUpdate.status)
  return _internal_status();
}
inline void BackendStatusUpdate::set_status(::financio::trading::BackendStatus value) {
  _internal_set_status(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:financio.trading.BackendStatusUpdate.status)
}
inline ::financio::trading::BackendStatus BackendStatusUpdate::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return static_cast<::financio::trading::BackendStatus>(_impl_.status_);
}
inline void BackendStatusUpdate::_internal_set_status(::financio::trading::BackendStatus value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_ = value;
}

// string message = 2;
inline void BackendStatusUpdate::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& BackendStatusUpdate::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.BackendStatusUpdate.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void BackendStatusUpdate::set_message(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:financio.trading.BackendStatusUpdate.message)
}
inline ::std::string* PROTOBUF_NONNULL BackendStatusUpdate::mutable_message()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:financio.trading.BackendStatusUpdate.message)
  return _s;
}
inline const ::std::string& BackendStatusUpdate::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void BackendStatusUpdate::_internal_set_message(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.message_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL BackendStatusUpdate::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.message_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE BackendStatusUpdate::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.BackendStatusUpdate.message)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.message_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.message_.Set("", GetArena());
  }
  return released;
}
inline void BackendStatusUpdate::set_allocated_message(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.message_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.message_.IsDefault()) {
    _impl_.message_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.BackendStatusUpdate.message)
}

// .google.protobuf.Timestamp ts = 3;
inline bool BackendStatusUpdate::has_ts() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  PROTOBUF_ASSUME(!value || _impl_.ts_ != nullptr);
  return value;
}
inline const ::google::protobuf::Timestamp& BackendStatusUpdate::_internal_ts() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  const ::google::protobuf::Timestamp* p = _impl_.ts_;
  return p != nullptr ? *p : reinterpret_cast<const ::google::protobuf::Timestamp&>(::google::protobuf::_Timestamp_default_instance_);
}
inline const ::google::protobuf::Timestamp& BackendStatusUpdate::ts() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:financio.trading.BackendStatusUpdate.ts)
  return _internal_ts();
}
inline void BackendStatusUpdate::unsafe_arena_set_allocated_ts(
    ::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (GetArena() == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ts_);
  }
  _impl_.ts_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  // @@protoc_insertion_point(field_unsafe_arena_set_allocated:financio.trading.BackendStatusUpdate.ts)
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE BackendStatusUpdate::release_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::google::protobuf::Timestamp* released = _impl_.ts_;
  _impl_.ts_ = nullptr;
  if (::google::protobuf::internal::DebugHardenForceCopyInRelease()) {
    auto* old = reinterpret_cast<::google::protobuf::MessageLite*>(released);
    released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    if (GetArena() == nullptr) {
      delete old;
    }
  } else {
    if (GetArena() != nullptr) {
      released = ::google::protobuf::internal::DuplicateIfNonNull(released);
    }
  }
  return released;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NULLABLE BackendStatusUpdate::unsafe_arena_release_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:financio.trading.BackendStatusUpdate.ts)

  _impl_._has_bits_[0] &= ~0x00000002U;
  ::google::protobuf::Timestamp* temp = _impl_.ts_;
  _impl_.ts_ = nullptr;
  return temp;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL BackendStatusUpdate::_internal_mutable_ts() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.ts_ == nullptr) {
    auto* p = ::google::protobuf::Message::DefaultConstruct<::google::protobuf::Timestamp>(GetArena());
    _impl_.ts_ = reinterpret_cast<::google::protobuf::Timestamp*>(p);
  }
  return _impl_.ts_;
}
inline ::google::protobuf::Timestamp* PROTOBUF_NONNULL BackendStatusUpdate::mutable_ts()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  _impl_._has_bits_[0] |= 0x00000002U;
  ::google::protobuf::Timestamp* _msg = _internal_mutable_ts();
  // @@protoc_insertion_point(field_mutable:financio.trading.BackendStatusUpdate.ts)
  return _msg;
}
inline void BackendStatusUpdate::set_allocated_ts(::google::protobuf::Timestamp* PROTOBUF_NULLABLE value) {
  ::google::protobuf::Arena* message_arena = GetArena();
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (message_arena == nullptr) {
    delete reinterpret_cast<::google::protobuf::MessageLite*>(_impl_.ts_);
  }

  if (value != nullptr) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(value)->GetArena();
    if (message_arena != submessage_arena) {
      value = ::google::protobuf::internal::GetOwnedMessage(message_arena, value, submessage_arena);
    }
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }

  _impl_.ts_ = reinterpret_cast<::google::protobuf::Timestamp*>(value);
  // @@protoc_insertion_point(field_set_allocated:financio.trading.BackendStatusUpdate.ts)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace trading
}  // namespace financio


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // trading_2flifecycle_2eproto_2epb_2eh

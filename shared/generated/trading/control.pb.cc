// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: trading/control.proto
// Protobuf C++ Version: 6.32.1

#include "trading/control.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace financio {
namespace trading {

inline constexpr UnsubscribeMarketData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sec_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR UnsubscribeMarketData::UnsubscribeMarketData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(UnsubscribeMarketData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct UnsubscribeMarketDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UnsubscribeMarketDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~UnsubscribeMarketDataDefaultTypeInternal() {}
  union {
    UnsubscribeMarketData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UnsubscribeMarketDataDefaultTypeInternal _UnsubscribeMarketData_default_instance_;

inline constexpr SubscribeMarketData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sec_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR SubscribeMarketData::SubscribeMarketData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SubscribeMarketData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SubscribeMarketDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SubscribeMarketDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SubscribeMarketDataDefaultTypeInternal() {}
  union {
    SubscribeMarketData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SubscribeMarketDataDefaultTypeInternal _SubscribeMarketData_default_instance_;

inline constexpr PlaceOrder::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        order_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        quantity_{0},
        limit_px_{0},
        stop_px_{0} {}

template <typename>
PROTOBUF_CONSTEXPR PlaceOrder::PlaceOrder(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(PlaceOrder_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct PlaceOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR PlaceOrderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~PlaceOrderDefaultTypeInternal() {}
  union {
    PlaceOrder _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PlaceOrderDefaultTypeInternal _PlaceOrder_default_instance_;

inline constexpr HistoricalData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        currency_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sec_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        duration_str_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        bar_size_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        what_to_show_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        use_rth_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistoricalData::HistoricalData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HistoricalData_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoricalDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoricalDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoricalDataDefaultTypeInternal() {}
  union {
    HistoricalData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoricalDataDefaultTypeInternal _HistoricalData_default_instance_;

inline constexpr CancelOrder::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        order_id_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CancelOrder::CancelOrder(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(CancelOrder_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct CancelOrderDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CancelOrderDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CancelOrderDefaultTypeInternal() {}
  union {
    CancelOrder _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CancelOrderDefaultTypeInternal _CancelOrder_default_instance_;

inline constexpr ControlMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        type_{static_cast< ::financio::trading::ControlType >(0)},
        id_{0},
        payload_{},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR ControlMessage::ControlMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ControlMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ControlMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ControlMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ControlMessageDefaultTypeInternal() {}
  union {
    ControlMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ControlMessageDefaultTypeInternal _ControlMessage_default_instance_;
}  // namespace trading
}  // namespace financio
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_trading_2fcontrol_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_trading_2fcontrol_2eproto = nullptr;
const ::uint32_t
    TableStruct_trading_2fcontrol_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::SubscribeMarketData, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::SubscribeMarketData, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::SubscribeMarketData, _impl_.exchange_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::SubscribeMarketData, _impl_.currency_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::SubscribeMarketData, _impl_.sec_type_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::UnsubscribeMarketData, _impl_._has_bits_),
        7, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::UnsubscribeMarketData, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::UnsubscribeMarketData, _impl_.exchange_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::UnsubscribeMarketData, _impl_.currency_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::UnsubscribeMarketData, _impl_.sec_type_),
        0,
        1,
        2,
        3,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::PlaceOrder, _impl_._has_bits_),
        8, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::PlaceOrder, _impl_.quantity_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::PlaceOrder, _impl_.limit_px_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::PlaceOrder, _impl_.stop_px_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::PlaceOrder, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::PlaceOrder, _impl_.order_type_),
        2,
        3,
        4,
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::CancelOrder, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::CancelOrder, _impl_.order_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalData, _impl_._has_bits_),
        11, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalData, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalData, _impl_.exchange_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalData, _impl_.currency_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalData, _impl_.sec_type_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalData, _impl_.duration_str_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalData, _impl_.bar_size_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalData, _impl_.what_to_show_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::HistoricalData, _impl_.use_rth_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        0x085, // bitmap
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_._oneof_case_[0]),
        13, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_.payload_),
        PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_.payload_),
        0,
        1,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::financio::trading::SubscribeMarketData)},
        {11, sizeof(::financio::trading::UnsubscribeMarketData)},
        {22, sizeof(::financio::trading::PlaceOrder)},
        {35, sizeof(::financio::trading::CancelOrder)},
        {40, sizeof(::financio::trading::HistoricalData)},
        {59, sizeof(::financio::trading::ControlMessage)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::financio::trading::_SubscribeMarketData_default_instance_._instance,
    &::financio::trading::_UnsubscribeMarketData_default_instance_._instance,
    &::financio::trading::_PlaceOrder_default_instance_._instance,
    &::financio::trading::_CancelOrder_default_instance_._instance,
    &::financio::trading::_HistoricalData_default_instance_._instance,
    &::financio::trading::_ControlMessage_default_instance_._instance,
};
const char descriptor_table_protodef_trading_2fcontrol_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025trading/control.proto\022\020financio.tradin"
    "g\032\024trading/common.proto\032\027trading/lifecyc"
    "le.proto\"[\n\023SubscribeMarketData\022\016\n\006symbo"
    "l\030\001 \001(\t\022\020\n\010exchange\030\002 \001(\t\022\020\n\010currency\030\003 "
    "\001(\t\022\020\n\010sec_type\030\004 \001(\t\"]\n\025UnsubscribeMark"
    "etData\022\016\n\006symbol\030\001 \001(\t\022\020\n\010exchange\030\002 \001(\t"
    "\022\020\n\010currency\030\003 \001(\t\022\020\n\010sec_type\030\004 \001(\t\"e\n\n"
    "PlaceOrder\022\020\n\010quantity\030\001 \001(\001\022\020\n\010limit_px"
    "\030\002 \001(\001\022\017\n\007stop_px\030\003 \001(\001\022\016\n\006action\030\004 \001(\t\022"
    "\022\n\norder_type\030\005 \001(\t\"\037\n\013CancelOrder\022\020\n\010or"
    "der_id\030\001 \001(\005\"\245\001\n\016HistoricalData\022\016\n\006symbo"
    "l\030\001 \001(\t\022\020\n\010exchange\030\002 \001(\t\022\020\n\010currency\030\003 "
    "\001(\t\022\020\n\010sec_type\030\004 \001(\t\022\024\n\014duration_str\030\005 "
    "\001(\t\022\020\n\010bar_size\030\006 \001(\t\022\024\n\014what_to_show\030\007 "
    "\001(\t\022\017\n\007use_rth\030\010 \001(\005\"\267\003\n\016ControlMessage\022"
    "+\n\004type\030\001 \001(\0162\035.financio.trading.Control"
    "Type\022\n\n\002id\030\002 \001(\005\0222\n\007connect\030\n \001(\0132\037.fina"
    "ncio.trading.ConnectBrokerH\000\022=\n\014sub_mkt_"
    "data\030\013 \001(\0132%.financio.trading.SubscribeM"
    "arketDataH\000\022A\n\016unsub_mkt_data\030\014 \001(\0132\'.fi"
    "nancio.trading.UnsubscribeMarketDataH\000\0223"
    "\n\013place_order\030\r \001(\0132\034.financio.trading.P"
    "laceOrderH\000\0225\n\014cancel_order\030\016 \001(\0132\035.fina"
    "ncio.trading.CancelOrderH\000\022\?\n\023req_histor"
    "ical_data\030\017 \001(\0132 .financio.trading.Histo"
    "ricalDataH\000B\t\n\007payloadb\006proto3"
};
static const ::_pbi::DescriptorTable* PROTOBUF_NONNULL const
    descriptor_table_trading_2fcontrol_2eproto_deps[2] = {
        &::descriptor_table_trading_2fcommon_2eproto,
        &::descriptor_table_trading_2flifecycle_2eproto,
};
static ::absl::once_flag descriptor_table_trading_2fcontrol_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_trading_2fcontrol_2eproto = {
    false,
    false,
    1030,
    descriptor_table_protodef_trading_2fcontrol_2eproto,
    "trading/control.proto",
    &descriptor_table_trading_2fcontrol_2eproto_once,
    descriptor_table_trading_2fcontrol_2eproto_deps,
    2,
    6,
    schemas,
    file_default_instances,
    TableStruct_trading_2fcontrol_2eproto::offsets,
    file_level_enum_descriptors_trading_2fcontrol_2eproto,
    file_level_service_descriptors_trading_2fcontrol_2eproto,
};
namespace financio {
namespace trading {
// ===================================================================

class SubscribeMarketData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SubscribeMarketData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_._has_bits_);
};

SubscribeMarketData::SubscribeMarketData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeMarketData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.SubscribeMarketData)
}
PROTOBUF_NDEBUG_INLINE SubscribeMarketData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::SubscribeMarketData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        symbol_(arena, from.symbol_),
        exchange_(arena, from.exchange_),
        currency_(arena, from.currency_),
        sec_type_(arena, from.sec_type_) {}

SubscribeMarketData::SubscribeMarketData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SubscribeMarketData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SubscribeMarketData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SubscribeMarketData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:financio.trading.SubscribeMarketData)
}
PROTOBUF_NDEBUG_INLINE SubscribeMarketData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        symbol_(arena),
        exchange_(arena),
        currency_(arena),
        sec_type_(arena) {}

inline void SubscribeMarketData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
SubscribeMarketData::~SubscribeMarketData() {
  // @@protoc_insertion_point(destructor:financio.trading.SubscribeMarketData)
  SharedDtor(*this);
}
inline void SubscribeMarketData::SharedDtor(MessageLite& self) {
  SubscribeMarketData& this_ = static_cast<SubscribeMarketData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.exchange_.Destroy();
  this_._impl_.currency_.Destroy();
  this_._impl_.sec_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SubscribeMarketData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SubscribeMarketData(arena);
}
constexpr auto SubscribeMarketData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SubscribeMarketData),
                                            alignof(SubscribeMarketData));
}
constexpr auto SubscribeMarketData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SubscribeMarketData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SubscribeMarketData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SubscribeMarketData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SubscribeMarketData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SubscribeMarketData>(), &SubscribeMarketData::ByteSizeLong,
              &SubscribeMarketData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_._cached_size_),
          false,
      },
      &SubscribeMarketData::kDescriptorMethods,
      &descriptor_table_trading_2fcontrol_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SubscribeMarketData_class_data_ =
        SubscribeMarketData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SubscribeMarketData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SubscribeMarketData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SubscribeMarketData_class_data_.tc_table);
  return SubscribeMarketData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 75, 2>
SubscribeMarketData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SubscribeMarketData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::SubscribeMarketData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string sec_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_.sec_type_)}},
    // string symbol = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_.symbol_)}},
    // string exchange = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_.exchange_)}},
    // string currency = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_.currency_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1;
    {PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_.symbol_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string exchange = 2;
    {PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_.exchange_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currency = 3;
    {PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_.currency_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sec_type = 4;
    {PROTOBUF_FIELD_OFFSET(SubscribeMarketData, _impl_.sec_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\6\10\10\10\0\0\0"
    "financio.trading.SubscribeMarketData"
    "symbol"
    "exchange"
    "currency"
    "sec_type"
  }},
};
PROTOBUF_NOINLINE void SubscribeMarketData::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.SubscribeMarketData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.symbol_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.exchange_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.currency_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.sec_type_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SubscribeMarketData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SubscribeMarketData& this_ = static_cast<const SubscribeMarketData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SubscribeMarketData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SubscribeMarketData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.SubscribeMarketData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_symbol().empty()) {
      const ::std::string& _s = this_._internal_symbol();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.SubscribeMarketData.symbol");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string exchange = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_exchange().empty()) {
      const ::std::string& _s = this_._internal_exchange();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.SubscribeMarketData.exchange");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string currency = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_currency().empty()) {
      const ::std::string& _s = this_._internal_currency();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.SubscribeMarketData.currency");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string sec_type = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_sec_type().empty()) {
      const ::std::string& _s = this_._internal_sec_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.SubscribeMarketData.sec_type");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.SubscribeMarketData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SubscribeMarketData::ByteSizeLong(const MessageLite& base) {
  const SubscribeMarketData& this_ = static_cast<const SubscribeMarketData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SubscribeMarketData::ByteSizeLong() const {
  const SubscribeMarketData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.SubscribeMarketData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string symbol = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_symbol().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_symbol());
      }
    }
    // string exchange = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_exchange().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange());
      }
    }
    // string currency = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_currency().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_currency());
      }
    }
    // string sec_type = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_sec_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sec_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SubscribeMarketData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SubscribeMarketData*>(&to_msg);
  auto& from = static_cast<const SubscribeMarketData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.SubscribeMarketData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_symbol().empty()) {
        _this->_internal_set_symbol(from._internal_symbol());
      } else {
        if (_this->_impl_.symbol_.IsDefault()) {
          _this->_internal_set_symbol("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_exchange().empty()) {
        _this->_internal_set_exchange(from._internal_exchange());
      } else {
        if (_this->_impl_.exchange_.IsDefault()) {
          _this->_internal_set_exchange("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_currency().empty()) {
        _this->_internal_set_currency(from._internal_currency());
      } else {
        if (_this->_impl_.currency_.IsDefault()) {
          _this->_internal_set_currency("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_sec_type().empty()) {
        _this->_internal_set_sec_type(from._internal_sec_type());
      } else {
        if (_this->_impl_.sec_type_.IsDefault()) {
          _this->_internal_set_sec_type("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SubscribeMarketData::CopyFrom(const SubscribeMarketData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.SubscribeMarketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SubscribeMarketData::InternalSwap(SubscribeMarketData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sec_type_, &other->_impl_.sec_type_, arena);
}

::google::protobuf::Metadata SubscribeMarketData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class UnsubscribeMarketData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<UnsubscribeMarketData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_._has_bits_);
};

UnsubscribeMarketData::UnsubscribeMarketData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnsubscribeMarketData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.UnsubscribeMarketData)
}
PROTOBUF_NDEBUG_INLINE UnsubscribeMarketData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::UnsubscribeMarketData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        symbol_(arena, from.symbol_),
        exchange_(arena, from.exchange_),
        currency_(arena, from.currency_),
        sec_type_(arena, from.sec_type_) {}

UnsubscribeMarketData::UnsubscribeMarketData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const UnsubscribeMarketData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, UnsubscribeMarketData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  UnsubscribeMarketData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:financio.trading.UnsubscribeMarketData)
}
PROTOBUF_NDEBUG_INLINE UnsubscribeMarketData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        symbol_(arena),
        exchange_(arena),
        currency_(arena),
        sec_type_(arena) {}

inline void UnsubscribeMarketData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
UnsubscribeMarketData::~UnsubscribeMarketData() {
  // @@protoc_insertion_point(destructor:financio.trading.UnsubscribeMarketData)
  SharedDtor(*this);
}
inline void UnsubscribeMarketData::SharedDtor(MessageLite& self) {
  UnsubscribeMarketData& this_ = static_cast<UnsubscribeMarketData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.exchange_.Destroy();
  this_._impl_.currency_.Destroy();
  this_._impl_.sec_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL UnsubscribeMarketData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) UnsubscribeMarketData(arena);
}
constexpr auto UnsubscribeMarketData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(UnsubscribeMarketData),
                                            alignof(UnsubscribeMarketData));
}
constexpr auto UnsubscribeMarketData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_UnsubscribeMarketData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &UnsubscribeMarketData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<UnsubscribeMarketData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &UnsubscribeMarketData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<UnsubscribeMarketData>(), &UnsubscribeMarketData::ByteSizeLong,
              &UnsubscribeMarketData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_._cached_size_),
          false,
      },
      &UnsubscribeMarketData::kDescriptorMethods,
      &descriptor_table_trading_2fcontrol_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull UnsubscribeMarketData_class_data_ =
        UnsubscribeMarketData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
UnsubscribeMarketData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&UnsubscribeMarketData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(UnsubscribeMarketData_class_data_.tc_table);
  return UnsubscribeMarketData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 77, 2>
UnsubscribeMarketData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    UnsubscribeMarketData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::UnsubscribeMarketData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string sec_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_.sec_type_)}},
    // string symbol = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_.symbol_)}},
    // string exchange = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_.exchange_)}},
    // string currency = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_.currency_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1;
    {PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_.symbol_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string exchange = 2;
    {PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_.exchange_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currency = 3;
    {PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_.currency_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sec_type = 4;
    {PROTOBUF_FIELD_OFFSET(UnsubscribeMarketData, _impl_.sec_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\46\6\10\10\10\0\0\0"
    "financio.trading.UnsubscribeMarketData"
    "symbol"
    "exchange"
    "currency"
    "sec_type"
  }},
};
PROTOBUF_NOINLINE void UnsubscribeMarketData::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.UnsubscribeMarketData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.symbol_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.exchange_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.currency_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.sec_type_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL UnsubscribeMarketData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const UnsubscribeMarketData& this_ = static_cast<const UnsubscribeMarketData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL UnsubscribeMarketData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const UnsubscribeMarketData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.UnsubscribeMarketData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_symbol().empty()) {
      const ::std::string& _s = this_._internal_symbol();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.UnsubscribeMarketData.symbol");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string exchange = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_exchange().empty()) {
      const ::std::string& _s = this_._internal_exchange();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.UnsubscribeMarketData.exchange");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string currency = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_currency().empty()) {
      const ::std::string& _s = this_._internal_currency();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.UnsubscribeMarketData.currency");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string sec_type = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_sec_type().empty()) {
      const ::std::string& _s = this_._internal_sec_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.UnsubscribeMarketData.sec_type");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.UnsubscribeMarketData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t UnsubscribeMarketData::ByteSizeLong(const MessageLite& base) {
  const UnsubscribeMarketData& this_ = static_cast<const UnsubscribeMarketData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t UnsubscribeMarketData::ByteSizeLong() const {
  const UnsubscribeMarketData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.UnsubscribeMarketData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    // string symbol = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_symbol().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_symbol());
      }
    }
    // string exchange = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_exchange().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange());
      }
    }
    // string currency = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_currency().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_currency());
      }
    }
    // string sec_type = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_sec_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sec_type());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void UnsubscribeMarketData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<UnsubscribeMarketData*>(&to_msg);
  auto& from = static_cast<const UnsubscribeMarketData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.UnsubscribeMarketData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_symbol().empty()) {
        _this->_internal_set_symbol(from._internal_symbol());
      } else {
        if (_this->_impl_.symbol_.IsDefault()) {
          _this->_internal_set_symbol("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_exchange().empty()) {
        _this->_internal_set_exchange(from._internal_exchange());
      } else {
        if (_this->_impl_.exchange_.IsDefault()) {
          _this->_internal_set_exchange("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_currency().empty()) {
        _this->_internal_set_currency(from._internal_currency());
      } else {
        if (_this->_impl_.currency_.IsDefault()) {
          _this->_internal_set_currency("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_sec_type().empty()) {
        _this->_internal_set_sec_type(from._internal_sec_type());
      } else {
        if (_this->_impl_.sec_type_.IsDefault()) {
          _this->_internal_set_sec_type("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void UnsubscribeMarketData::CopyFrom(const UnsubscribeMarketData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.UnsubscribeMarketData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void UnsubscribeMarketData::InternalSwap(UnsubscribeMarketData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sec_type_, &other->_impl_.sec_type_, arena);
}

::google::protobuf::Metadata UnsubscribeMarketData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class PlaceOrder::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<PlaceOrder>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_._has_bits_);
};

PlaceOrder::PlaceOrder(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlaceOrder_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.PlaceOrder)
}
PROTOBUF_NDEBUG_INLINE PlaceOrder::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::PlaceOrder& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        action_(arena, from.action_),
        order_type_(arena, from.order_type_) {}

PlaceOrder::PlaceOrder(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const PlaceOrder& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, PlaceOrder_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  PlaceOrder* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, quantity_),
           offsetof(Impl_, stop_px_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::stop_px_));

  // @@protoc_insertion_point(copy_constructor:financio.trading.PlaceOrder)
}
PROTOBUF_NDEBUG_INLINE PlaceOrder::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        action_(arena),
        order_type_(arena) {}

inline void PlaceOrder::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, quantity_),
           0,
           offsetof(Impl_, stop_px_) -
               offsetof(Impl_, quantity_) +
               sizeof(Impl_::stop_px_));
}
PlaceOrder::~PlaceOrder() {
  // @@protoc_insertion_point(destructor:financio.trading.PlaceOrder)
  SharedDtor(*this);
}
inline void PlaceOrder::SharedDtor(MessageLite& self) {
  PlaceOrder& this_ = static_cast<PlaceOrder&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.action_.Destroy();
  this_._impl_.order_type_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL PlaceOrder::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) PlaceOrder(arena);
}
constexpr auto PlaceOrder::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(PlaceOrder),
                                            alignof(PlaceOrder));
}
constexpr auto PlaceOrder::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_PlaceOrder_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &PlaceOrder::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<PlaceOrder>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &PlaceOrder::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<PlaceOrder>(), &PlaceOrder::ByteSizeLong,
              &PlaceOrder::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_._cached_size_),
          false,
      },
      &PlaceOrder::kDescriptorMethods,
      &descriptor_table_trading_2fcontrol_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull PlaceOrder_class_data_ =
        PlaceOrder::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
PlaceOrder::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&PlaceOrder_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(PlaceOrder_class_data_.tc_table);
  return PlaceOrder_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 52, 2>
PlaceOrder::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_._has_bits_),
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    PlaceOrder_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::PlaceOrder>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // double quantity = 1;
    {::_pbi::TcParser::FastF64S1,
     {9, 2, 0, PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.quantity_)}},
    // double limit_px = 2;
    {::_pbi::TcParser::FastF64S1,
     {17, 3, 0, PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.limit_px_)}},
    // double stop_px = 3;
    {::_pbi::TcParser::FastF64S1,
     {25, 4, 0, PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.stop_px_)}},
    // string action = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 0, 0, PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.action_)}},
    // string order_type = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 1, 0, PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.order_type_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // double quantity = 1;
    {PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.quantity_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double limit_px = 2;
    {PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.limit_px_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // double stop_px = 3;
    {PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.stop_px_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // string action = 4;
    {PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.action_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string order_type = 5;
    {PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.order_type_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\33\0\0\0\6\12\0\0"
    "financio.trading.PlaceOrder"
    "action"
    "order_type"
  }},
};
PROTOBUF_NOINLINE void PlaceOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.PlaceOrder)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.action_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.order_type_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x0000001cU) != 0) {
    ::memset(&_impl_.quantity_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.stop_px_) -
        reinterpret_cast<char*>(&_impl_.quantity_)) + sizeof(_impl_.stop_px_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL PlaceOrder::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const PlaceOrder& this_ = static_cast<const PlaceOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL PlaceOrder::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const PlaceOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.PlaceOrder)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // double quantity = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          1, this_._internal_quantity(), target);
    }
  }

  // double limit_px = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_limit_px()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          2, this_._internal_limit_px(), target);
    }
  }

  // double stop_px = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (::absl::bit_cast<::uint64_t>(this_._internal_stop_px()) != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteDoubleToArray(
          3, this_._internal_stop_px(), target);
    }
  }

  // string action = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_action().empty()) {
      const ::std::string& _s = this_._internal_action();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.PlaceOrder.action");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string order_type = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_order_type().empty()) {
      const ::std::string& _s = this_._internal_order_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.PlaceOrder.order_type");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.PlaceOrder)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t PlaceOrder::ByteSizeLong(const MessageLite& base) {
  const PlaceOrder& this_ = static_cast<const PlaceOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t PlaceOrder::ByteSizeLong() const {
  const PlaceOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.PlaceOrder)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    // string action = 4;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_action().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_action());
      }
    }
    // string order_type = 5;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_order_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_order_type());
      }
    }
    // double quantity = 1;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_quantity()) != 0) {
        total_size += 9;
      }
    }
    // double limit_px = 2;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_limit_px()) != 0) {
        total_size += 9;
      }
    }
    // double stop_px = 3;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(this_._internal_stop_px()) != 0) {
        total_size += 9;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void PlaceOrder::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<PlaceOrder*>(&to_msg);
  auto& from = static_cast<const PlaceOrder&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.PlaceOrder)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_action().empty()) {
        _this->_internal_set_action(from._internal_action());
      } else {
        if (_this->_impl_.action_.IsDefault()) {
          _this->_internal_set_action("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_order_type().empty()) {
        _this->_internal_set_order_type(from._internal_order_type());
      } else {
        if (_this->_impl_.order_type_.IsDefault()) {
          _this->_internal_set_order_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_quantity()) != 0) {
        _this->_impl_.quantity_ = from._impl_.quantity_;
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_limit_px()) != 0) {
        _this->_impl_.limit_px_ = from._impl_.limit_px_;
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (::absl::bit_cast<::uint64_t>(from._internal_stop_px()) != 0) {
        _this->_impl_.stop_px_ = from._impl_.stop_px_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void PlaceOrder::CopyFrom(const PlaceOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.PlaceOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void PlaceOrder::InternalSwap(PlaceOrder* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.order_type_, &other->_impl_.order_type_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.stop_px_)
      + sizeof(PlaceOrder::_impl_.stop_px_)
      - PROTOBUF_FIELD_OFFSET(PlaceOrder, _impl_.quantity_)>(
          reinterpret_cast<char*>(&_impl_.quantity_),
          reinterpret_cast<char*>(&other->_impl_.quantity_));
}

::google::protobuf::Metadata PlaceOrder::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class CancelOrder::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<CancelOrder>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_._has_bits_);
};

CancelOrder::CancelOrder(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CancelOrder_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.CancelOrder)
}
CancelOrder::CancelOrder(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const CancelOrder& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, CancelOrder_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE CancelOrder::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void CancelOrder::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.order_id_ = {};
}
CancelOrder::~CancelOrder() {
  // @@protoc_insertion_point(destructor:financio.trading.CancelOrder)
  SharedDtor(*this);
}
inline void CancelOrder::SharedDtor(MessageLite& self) {
  CancelOrder& this_ = static_cast<CancelOrder&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL CancelOrder::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) CancelOrder(arena);
}
constexpr auto CancelOrder::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(CancelOrder),
                                            alignof(CancelOrder));
}
constexpr auto CancelOrder::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_CancelOrder_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &CancelOrder::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<CancelOrder>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &CancelOrder::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<CancelOrder>(), &CancelOrder::ByteSizeLong,
              &CancelOrder::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_._cached_size_),
          false,
      },
      &CancelOrder::kDescriptorMethods,
      &descriptor_table_trading_2fcontrol_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull CancelOrder_class_data_ =
        CancelOrder::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
CancelOrder::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&CancelOrder_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(CancelOrder_class_data_.tc_table);
  return CancelOrder_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
CancelOrder::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    CancelOrder_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::CancelOrder>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 order_id = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(CancelOrder, _impl_.order_id_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.order_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 order_id = 1;
    {PROTOBUF_FIELD_OFFSET(CancelOrder, _impl_.order_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void CancelOrder::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.CancelOrder)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.order_id_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL CancelOrder::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const CancelOrder& this_ = static_cast<const CancelOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL CancelOrder::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const CancelOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.CancelOrder)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int32 order_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_order_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
              stream, this_._internal_order_id(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.CancelOrder)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t CancelOrder::ByteSizeLong(const MessageLite& base) {
  const CancelOrder& this_ = static_cast<const CancelOrder&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t CancelOrder::ByteSizeLong() const {
  const CancelOrder& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.CancelOrder)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // int32 order_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_order_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_order_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void CancelOrder::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<CancelOrder*>(&to_msg);
  auto& from = static_cast<const CancelOrder&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.CancelOrder)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_order_id() != 0) {
      _this->_impl_.order_id_ = from._impl_.order_id_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CancelOrder::CopyFrom(const CancelOrder& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.CancelOrder)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void CancelOrder::InternalSwap(CancelOrder* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.order_id_, other->_impl_.order_id_);
}

::google::protobuf::Metadata CancelOrder::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoricalData::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HistoricalData>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_._has_bits_);
};

HistoricalData::HistoricalData(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoricalData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.HistoricalData)
}
PROTOBUF_NDEBUG_INLINE HistoricalData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::HistoricalData& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        symbol_(arena, from.symbol_),
        exchange_(arena, from.exchange_),
        currency_(arena, from.currency_),
        sec_type_(arena, from.sec_type_),
        duration_str_(arena, from.duration_str_),
        bar_size_(arena, from.bar_size_),
        what_to_show_(arena, from.what_to_show_) {}

HistoricalData::HistoricalData(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HistoricalData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoricalData_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoricalData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.use_rth_ = from._impl_.use_rth_;

  // @@protoc_insertion_point(copy_constructor:financio.trading.HistoricalData)
}
PROTOBUF_NDEBUG_INLINE HistoricalData::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        symbol_(arena),
        exchange_(arena),
        currency_(arena),
        sec_type_(arena),
        duration_str_(arena),
        bar_size_(arena),
        what_to_show_(arena) {}

inline void HistoricalData::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.use_rth_ = {};
}
HistoricalData::~HistoricalData() {
  // @@protoc_insertion_point(destructor:financio.trading.HistoricalData)
  SharedDtor(*this);
}
inline void HistoricalData::SharedDtor(MessageLite& self) {
  HistoricalData& this_ = static_cast<HistoricalData&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.symbol_.Destroy();
  this_._impl_.exchange_.Destroy();
  this_._impl_.currency_.Destroy();
  this_._impl_.sec_type_.Destroy();
  this_._impl_.duration_str_.Destroy();
  this_._impl_.bar_size_.Destroy();
  this_._impl_.what_to_show_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HistoricalData::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HistoricalData(arena);
}
constexpr auto HistoricalData::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HistoricalData),
                                            alignof(HistoricalData));
}
constexpr auto HistoricalData::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HistoricalData_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HistoricalData::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HistoricalData>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HistoricalData::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HistoricalData>(), &HistoricalData::ByteSizeLong,
              &HistoricalData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_._cached_size_),
          false,
      },
      &HistoricalData::kDescriptorMethods,
      &descriptor_table_trading_2fcontrol_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HistoricalData_class_data_ =
        HistoricalData::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HistoricalData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HistoricalData_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HistoricalData_class_data_.tc_table);
  return HistoricalData_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 8, 0, 110, 2>
HistoricalData::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_._has_bits_),
    0, // no _extensions_
    8, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967040,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HistoricalData_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::HistoricalData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 use_rth = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HistoricalData, _impl_.use_rth_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.use_rth_)}},
    // string symbol = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.symbol_)}},
    // string exchange = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.exchange_)}},
    // string currency = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.currency_)}},
    // string sec_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.sec_type_)}},
    // string duration_str = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.duration_str_)}},
    // string bar_size = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 5, 0, PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.bar_size_)}},
    // string what_to_show = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 6, 0, PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.what_to_show_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string symbol = 1;
    {PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.symbol_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string exchange = 2;
    {PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.exchange_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string currency = 3;
    {PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.currency_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sec_type = 4;
    {PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.sec_type_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string duration_str = 5;
    {PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.duration_str_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string bar_size = 6;
    {PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.bar_size_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string what_to_show = 7;
    {PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.what_to_show_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 use_rth = 8;
    {PROTOBUF_FIELD_OFFSET(HistoricalData, _impl_.use_rth_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\37\6\10\10\10\14\10\14\0\0\0\0\0\0\0\0"
    "financio.trading.HistoricalData"
    "symbol"
    "exchange"
    "currency"
    "sec_type"
    "duration_str"
    "bar_size"
    "what_to_show"
  }},
};
PROTOBUF_NOINLINE void HistoricalData::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.HistoricalData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000007fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.symbol_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.exchange_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.currency_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.sec_type_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.duration_str_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _impl_.bar_size_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      _impl_.what_to_show_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.use_rth_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HistoricalData::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HistoricalData& this_ = static_cast<const HistoricalData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HistoricalData::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HistoricalData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.HistoricalData)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string symbol = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_symbol().empty()) {
      const ::std::string& _s = this_._internal_symbol();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HistoricalData.symbol");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string exchange = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_exchange().empty()) {
      const ::std::string& _s = this_._internal_exchange();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HistoricalData.exchange");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string currency = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_currency().empty()) {
      const ::std::string& _s = this_._internal_currency();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HistoricalData.currency");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // string sec_type = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_sec_type().empty()) {
      const ::std::string& _s = this_._internal_sec_type();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HistoricalData.sec_type");
      target = stream->WriteStringMaybeAliased(4, _s, target);
    }
  }

  // string duration_str = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_duration_str().empty()) {
      const ::std::string& _s = this_._internal_duration_str();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HistoricalData.duration_str");
      target = stream->WriteStringMaybeAliased(5, _s, target);
    }
  }

  // string bar_size = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (!this_._internal_bar_size().empty()) {
      const ::std::string& _s = this_._internal_bar_size();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HistoricalData.bar_size");
      target = stream->WriteStringMaybeAliased(6, _s, target);
    }
  }

  // string what_to_show = 7;
  if ((this_._impl_._has_bits_[0] & 0x00000040U) != 0) {
    if (!this_._internal_what_to_show().empty()) {
      const ::std::string& _s = this_._internal_what_to_show();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "financio.trading.HistoricalData.what_to_show");
      target = stream->WriteStringMaybeAliased(7, _s, target);
    }
  }

  // int32 use_rth = 8;
  if ((this_._impl_._has_bits_[0] & 0x00000080U) != 0) {
    if (this_._internal_use_rth() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
              stream, this_._internal_use_rth(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.HistoricalData)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HistoricalData::ByteSizeLong(const MessageLite& base) {
  const HistoricalData& this_ = static_cast<const HistoricalData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HistoricalData::ByteSizeLong() const {
  const HistoricalData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.HistoricalData)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // string symbol = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_symbol().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_symbol());
      }
    }
    // string exchange = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_exchange().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_exchange());
      }
    }
    // string currency = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_currency().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_currency());
      }
    }
    // string sec_type = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_sec_type().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sec_type());
      }
    }
    // string duration_str = 5;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_duration_str().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_duration_str());
      }
    }
    // string bar_size = 6;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!this_._internal_bar_size().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_bar_size());
      }
    }
    // string what_to_show = 7;
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (!this_._internal_what_to_show().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_what_to_show());
      }
    }
    // int32 use_rth = 8;
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (this_._internal_use_rth() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_use_rth());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HistoricalData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoricalData*>(&to_msg);
  auto& from = static_cast<const HistoricalData&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.HistoricalData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_symbol().empty()) {
        _this->_internal_set_symbol(from._internal_symbol());
      } else {
        if (_this->_impl_.symbol_.IsDefault()) {
          _this->_internal_set_symbol("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_exchange().empty()) {
        _this->_internal_set_exchange(from._internal_exchange());
      } else {
        if (_this->_impl_.exchange_.IsDefault()) {
          _this->_internal_set_exchange("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_currency().empty()) {
        _this->_internal_set_currency(from._internal_currency());
      } else {
        if (_this->_impl_.currency_.IsDefault()) {
          _this->_internal_set_currency("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_sec_type().empty()) {
        _this->_internal_set_sec_type(from._internal_sec_type());
      } else {
        if (_this->_impl_.sec_type_.IsDefault()) {
          _this->_internal_set_sec_type("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_duration_str().empty()) {
        _this->_internal_set_duration_str(from._internal_duration_str());
      } else {
        if (_this->_impl_.duration_str_.IsDefault()) {
          _this->_internal_set_duration_str("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (!from._internal_bar_size().empty()) {
        _this->_internal_set_bar_size(from._internal_bar_size());
      } else {
        if (_this->_impl_.bar_size_.IsDefault()) {
          _this->_internal_set_bar_size("");
        }
      }
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      if (!from._internal_what_to_show().empty()) {
        _this->_internal_set_what_to_show(from._internal_what_to_show());
      } else {
        if (_this->_impl_.what_to_show_.IsDefault()) {
          _this->_internal_set_what_to_show("");
        }
      }
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      if (from._internal_use_rth() != 0) {
        _this->_impl_.use_rth_ = from._impl_.use_rth_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoricalData::CopyFrom(const HistoricalData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.HistoricalData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoricalData::InternalSwap(HistoricalData* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.currency_, &other->_impl_.currency_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sec_type_, &other->_impl_.sec_type_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.duration_str_, &other->_impl_.duration_str_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.bar_size_, &other->_impl_.bar_size_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.what_to_show_, &other->_impl_.what_to_show_, arena);
  swap(_impl_.use_rth_, other->_impl_.use_rth_);
}

::google::protobuf::Metadata HistoricalData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ControlMessage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ControlMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_._has_bits_);
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::financio::trading::ControlMessage, _impl_._oneof_case_);
};

void ControlMessage::set_allocated_connect(::financio::trading::ConnectBroker* PROTOBUF_NULLABLE connect) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (connect) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::Message*>(connect)->GetArena();
    if (message_arena != submessage_arena) {
      connect = ::google::protobuf::internal::GetOwnedMessage(message_arena, connect, submessage_arena);
    }
    set_has_connect();
    _impl_.payload_.connect_ = connect;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ControlMessage.connect)
}
void ControlMessage::clear_connect() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kConnect) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.connect_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.connect_);
    }
    clear_has_payload();
  }
}
void ControlMessage::set_allocated_sub_mkt_data(::financio::trading::SubscribeMarketData* PROTOBUF_NULLABLE sub_mkt_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (sub_mkt_data) {
    ::google::protobuf::Arena* submessage_arena = sub_mkt_data->GetArena();
    if (message_arena != submessage_arena) {
      sub_mkt_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, sub_mkt_data, submessage_arena);
    }
    set_has_sub_mkt_data();
    _impl_.payload_.sub_mkt_data_ = sub_mkt_data;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ControlMessage.sub_mkt_data)
}
void ControlMessage::set_allocated_unsub_mkt_data(::financio::trading::UnsubscribeMarketData* PROTOBUF_NULLABLE unsub_mkt_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (unsub_mkt_data) {
    ::google::protobuf::Arena* submessage_arena = unsub_mkt_data->GetArena();
    if (message_arena != submessage_arena) {
      unsub_mkt_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, unsub_mkt_data, submessage_arena);
    }
    set_has_unsub_mkt_data();
    _impl_.payload_.unsub_mkt_data_ = unsub_mkt_data;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ControlMessage.unsub_mkt_data)
}
void ControlMessage::set_allocated_place_order(::financio::trading::PlaceOrder* PROTOBUF_NULLABLE place_order) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (place_order) {
    ::google::protobuf::Arena* submessage_arena = place_order->GetArena();
    if (message_arena != submessage_arena) {
      place_order = ::google::protobuf::internal::GetOwnedMessage(message_arena, place_order, submessage_arena);
    }
    set_has_place_order();
    _impl_.payload_.place_order_ = place_order;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ControlMessage.place_order)
}
void ControlMessage::set_allocated_cancel_order(::financio::trading::CancelOrder* PROTOBUF_NULLABLE cancel_order) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (cancel_order) {
    ::google::protobuf::Arena* submessage_arena = cancel_order->GetArena();
    if (message_arena != submessage_arena) {
      cancel_order = ::google::protobuf::internal::GetOwnedMessage(message_arena, cancel_order, submessage_arena);
    }
    set_has_cancel_order();
    _impl_.payload_.cancel_order_ = cancel_order;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ControlMessage.cancel_order)
}
void ControlMessage::set_allocated_req_historical_data(::financio::trading::HistoricalData* PROTOBUF_NULLABLE req_historical_data) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (req_historical_data) {
    ::google::protobuf::Arena* submessage_arena = req_historical_data->GetArena();
    if (message_arena != submessage_arena) {
      req_historical_data = ::google::protobuf::internal::GetOwnedMessage(message_arena, req_historical_data, submessage_arena);
    }
    set_has_req_historical_data();
    _impl_.payload_.req_historical_data_ = req_historical_data;
  }
  // @@protoc_insertion_point(field_set_allocated:financio.trading.ControlMessage.req_historical_data)
}
ControlMessage::ControlMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ControlMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:financio.trading.ControlMessage)
}
PROTOBUF_NDEBUG_INLINE ControlMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::financio::trading::ControlMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        payload_{},
        _oneof_case_{from._oneof_case_[0]} {}

ControlMessage::ControlMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ControlMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ControlMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ControlMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, id_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::id_));
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kConnect:
        _impl_.payload_.connect_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.connect_);
        break;
      case kSubMktData:
        _impl_.payload_.sub_mkt_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.sub_mkt_data_);
        break;
      case kUnsubMktData:
        _impl_.payload_.unsub_mkt_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.unsub_mkt_data_);
        break;
      case kPlaceOrder:
        _impl_.payload_.place_order_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.place_order_);
        break;
      case kCancelOrder:
        _impl_.payload_.cancel_order_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.cancel_order_);
        break;
      case kReqHistoricalData:
        _impl_.payload_.req_historical_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.req_historical_data_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:financio.trading.ControlMessage)
}
PROTOBUF_NDEBUG_INLINE ControlMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        payload_{},
        _oneof_case_{} {}

inline void ControlMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, id_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::id_));
}
ControlMessage::~ControlMessage() {
  // @@protoc_insertion_point(destructor:financio.trading.ControlMessage)
  SharedDtor(*this);
}
inline void ControlMessage::SharedDtor(MessageLite& self) {
  ControlMessage& this_ = static_cast<ControlMessage&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void ControlMessage::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:financio.trading.ControlMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kConnect: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.connect_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.connect_);
      }
      break;
    }
    case kSubMktData: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.sub_mkt_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.sub_mkt_data_);
      }
      break;
    }
    case kUnsubMktData: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.unsub_mkt_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.unsub_mkt_data_);
      }
      break;
    }
    case kPlaceOrder: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.place_order_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.place_order_);
      }
      break;
    }
    case kCancelOrder: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.cancel_order_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.cancel_order_);
      }
      break;
    }
    case kReqHistoricalData: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.req_historical_data_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.req_historical_data_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* PROTOBUF_NONNULL ControlMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ControlMessage(arena);
}
constexpr auto ControlMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(ControlMessage),
                                            alignof(ControlMessage));
}
constexpr auto ControlMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ControlMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ControlMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ControlMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ControlMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ControlMessage>(), &ControlMessage::ByteSizeLong,
              &ControlMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_._cached_size_),
          false,
      },
      &ControlMessage::kDescriptorMethods,
      &descriptor_table_trading_2fcontrol_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ControlMessage_class_data_ =
        ControlMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ControlMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ControlMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ControlMessage_class_data_.tc_table);
  return ControlMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 8, 6, 0, 2>
ControlMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_._has_bits_),
    0, // no _extensions_
    15, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294935036,  // skipmap
    offsetof(decltype(_table_), field_entries),
    8,  // num_field_entries
    6,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    ControlMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::financio::trading::ControlMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 id = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlMessage, _impl_.id_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.id_)}},
    // .financio.trading.ControlType type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ControlMessage, _impl_.type_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.type_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .financio.trading.ControlType type = 1;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.type_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kOpenEnum)},
    // int32 id = 2;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // .financio.trading.ConnectBroker connect = 10;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.payload_.connect_), _Internal::kOneofCaseOffset + 0, 0, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.SubscribeMarketData sub_mkt_data = 11;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.payload_.sub_mkt_data_), _Internal::kOneofCaseOffset + 0, 1, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.UnsubscribeMarketData unsub_mkt_data = 12;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.payload_.unsub_mkt_data_), _Internal::kOneofCaseOffset + 0, 2, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.PlaceOrder place_order = 13;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.payload_.place_order_), _Internal::kOneofCaseOffset + 0, 3, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.CancelOrder cancel_order = 14;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.payload_.cancel_order_), _Internal::kOneofCaseOffset + 0, 4, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .financio.trading.HistoricalData req_historical_data = 15;
    {PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.payload_.req_historical_data_), _Internal::kOneofCaseOffset + 0, 5, (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::financio::trading::ConnectBroker>()},
      {::_pbi::TcParser::GetTable<::financio::trading::SubscribeMarketData>()},
      {::_pbi::TcParser::GetTable<::financio::trading::UnsubscribeMarketData>()},
      {::_pbi::TcParser::GetTable<::financio::trading::PlaceOrder>()},
      {::_pbi::TcParser::GetTable<::financio::trading::CancelOrder>()},
      {::_pbi::TcParser::GetTable<::financio::trading::HistoricalData>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void ControlMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:financio.trading.ControlMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.id_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.id_));
  }
  clear_payload();
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ControlMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ControlMessage& this_ = static_cast<const ControlMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ControlMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ControlMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:financio.trading.ControlMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // .financio.trading.ControlType type = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_type() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteEnumToArray(
          1, this_._internal_type(), target);
    }
  }

  // int32 id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_id() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_id(), target);
    }
  }

  switch (this_.payload_case()) {
    case kConnect: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          10, *this_._impl_.payload_.connect_, this_._impl_.payload_.connect_->GetCachedSize(), target,
          stream);
      break;
    }
    case kSubMktData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          11, *this_._impl_.payload_.sub_mkt_data_, this_._impl_.payload_.sub_mkt_data_->GetCachedSize(), target,
          stream);
      break;
    }
    case kUnsubMktData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          12, *this_._impl_.payload_.unsub_mkt_data_, this_._impl_.payload_.unsub_mkt_data_->GetCachedSize(), target,
          stream);
      break;
    }
    case kPlaceOrder: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          13, *this_._impl_.payload_.place_order_, this_._impl_.payload_.place_order_->GetCachedSize(), target,
          stream);
      break;
    }
    case kCancelOrder: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          14, *this_._impl_.payload_.cancel_order_, this_._impl_.payload_.cancel_order_->GetCachedSize(), target,
          stream);
      break;
    }
    case kReqHistoricalData: {
      target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
          15, *this_._impl_.payload_.req_historical_data_, this_._impl_.payload_.req_historical_data_->GetCachedSize(), target,
          stream);
      break;
    }
    default:
      break;
  }
  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:financio.trading.ControlMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ControlMessage::ByteSizeLong(const MessageLite& base) {
  const ControlMessage& this_ = static_cast<const ControlMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ControlMessage::ByteSizeLong() const {
  const ControlMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:financio.trading.ControlMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // .financio.trading.ControlType type = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_type() != 0) {
        total_size += 1 +
                      ::_pbi::WireFormatLite::EnumSize(this_._internal_type());
      }
    }
    // int32 id = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_id() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_id());
      }
    }
  }
  switch (this_.payload_case()) {
    // .financio.trading.ConnectBroker connect = 10;
    case kConnect: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.connect_);
      break;
    }
    // .financio.trading.SubscribeMarketData sub_mkt_data = 11;
    case kSubMktData: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.sub_mkt_data_);
      break;
    }
    // .financio.trading.UnsubscribeMarketData unsub_mkt_data = 12;
    case kUnsubMktData: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.unsub_mkt_data_);
      break;
    }
    // .financio.trading.PlaceOrder place_order = 13;
    case kPlaceOrder: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.place_order_);
      break;
    }
    // .financio.trading.CancelOrder cancel_order = 14;
    case kCancelOrder: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.cancel_order_);
      break;
    }
    // .financio.trading.HistoricalData req_historical_data = 15;
    case kReqHistoricalData: {
      total_size += 1 +
                    ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.req_historical_data_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ControlMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ControlMessage*>(&to_msg);
  auto& from = static_cast<const ControlMessage&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:financio.trading.ControlMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (from._internal_type() != 0) {
        _this->_impl_.type_ = from._impl_.type_;
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_id() != 0) {
        _this->_impl_.id_ = from._impl_.id_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kConnect: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.connect_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.connect_);
        } else {
          _this->_impl_.payload_.connect_->MergeFrom(*from._impl_.payload_.connect_);
        }
        break;
      }
      case kSubMktData: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.sub_mkt_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.sub_mkt_data_);
        } else {
          _this->_impl_.payload_.sub_mkt_data_->MergeFrom(*from._impl_.payload_.sub_mkt_data_);
        }
        break;
      }
      case kUnsubMktData: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.unsub_mkt_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.unsub_mkt_data_);
        } else {
          _this->_impl_.payload_.unsub_mkt_data_->MergeFrom(*from._impl_.payload_.unsub_mkt_data_);
        }
        break;
      }
      case kPlaceOrder: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.place_order_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.place_order_);
        } else {
          _this->_impl_.payload_.place_order_->MergeFrom(*from._impl_.payload_.place_order_);
        }
        break;
      }
      case kCancelOrder: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.cancel_order_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.cancel_order_);
        } else {
          _this->_impl_.payload_.cancel_order_->MergeFrom(*from._impl_.payload_.cancel_order_);
        }
        break;
      }
      case kReqHistoricalData: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.req_historical_data_ = ::google::protobuf::Message::CopyConstruct(arena, *from._impl_.payload_.req_historical_data_);
        } else {
          _this->_impl_.payload_.req_historical_data_->MergeFrom(*from._impl_.payload_.req_historical_data_);
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ControlMessage::CopyFrom(const ControlMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:financio.trading.ControlMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ControlMessage::InternalSwap(ControlMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.id_)
      + sizeof(ControlMessage::_impl_.id_)
      - PROTOBUF_FIELD_OFFSET(ControlMessage, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata ControlMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace trading
}  // namespace financio
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_trading_2fcontrol_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

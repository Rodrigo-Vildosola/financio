// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ComboLeg.proto
// Protobuf C++ Version: 5.29.3

#include "ComboLeg.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf {

inline constexpr ComboLeg::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        action_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        designatedlocation_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        conid_{0},
        ratio_{0},
        openclose_{0},
        shortsalesslot_{0},
        perlegprice_{0},
        exemptcode_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ComboLeg::ComboLeg(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ComboLegDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ComboLegDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ComboLegDefaultTypeInternal() {}
  union {
    ComboLeg _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ComboLegDefaultTypeInternal _ComboLeg_default_instance_;
}  // namespace protobuf
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ComboLeg_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ComboLeg_2eproto = nullptr;
const ::uint32_t
    TableStruct_ComboLeg_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_.conid_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_.ratio_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_.action_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_.exchange_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_.openclose_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_.shortsalesslot_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_.designatedlocation_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_.exemptcode_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ComboLeg, _impl_.perlegprice_),
        3,
        4,
        0,
        1,
        5,
        6,
        2,
        8,
        7,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 17, -1, sizeof(::protobuf::ComboLeg)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf::_ComboLeg_default_instance_._instance,
};
const char descriptor_table_protodef_ComboLeg_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\016ComboLeg.proto\022\010protobuf\"\352\002\n\010ComboLeg\022"
    "\022\n\005conId\030\001 \001(\005H\000\210\001\001\022\022\n\005ratio\030\002 \001(\005H\001\210\001\001\022"
    "\023\n\006action\030\003 \001(\tH\002\210\001\001\022\025\n\010exchange\030\004 \001(\tH\003"
    "\210\001\001\022\026\n\topenClose\030\005 \001(\005H\004\210\001\001\022\033\n\016shortSale"
    "sSlot\030\006 \001(\005H\005\210\001\001\022\037\n\022designatedLocation\030\007"
    " \001(\tH\006\210\001\001\022\027\n\nexemptCode\030\010 \001(\005H\007\210\001\001\022\030\n\013pe"
    "rLegPrice\030\t \001(\001H\010\210\001\001B\010\n\006_conIdB\010\n\006_ratio"
    "B\t\n\007_actionB\013\n\t_exchangeB\014\n\n_openCloseB\021"
    "\n\017_shortSalesSlotB\025\n\023_designatedLocation"
    "B\r\n\013_exemptCodeB\016\n\014_perLegPriceB8\n\026com.i"
    "b.client.protobufB\rComboLegProto\252\002\016IBApi"
    ".protobufb\006proto3"
};
static ::absl::once_flag descriptor_table_ComboLeg_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ComboLeg_2eproto = {
    false,
    false,
    457,
    descriptor_table_protodef_ComboLeg_2eproto,
    "ComboLeg.proto",
    &descriptor_table_ComboLeg_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_ComboLeg_2eproto::offsets,
    file_level_enum_descriptors_ComboLeg_2eproto,
    file_level_service_descriptors_ComboLeg_2eproto,
};
namespace protobuf {
// ===================================================================

class ComboLeg::_Internal {
 public:
  using HasBits =
      decltype(std::declval<ComboLeg>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_._has_bits_);
};

ComboLeg::ComboLeg(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.ComboLeg)
}
inline PROTOBUF_NDEBUG_INLINE ComboLeg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf::ComboLeg& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        action_(arena, from.action_),
        exchange_(arena, from.exchange_),
        designatedlocation_(arena, from.designatedlocation_) {}

ComboLeg::ComboLeg(
    ::google::protobuf::Arena* arena,
    const ComboLeg& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ComboLeg* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, conid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, conid_),
           offsetof(Impl_, exemptcode_) -
               offsetof(Impl_, conid_) +
               sizeof(Impl_::exemptcode_));

  // @@protoc_insertion_point(copy_constructor:protobuf.ComboLeg)
}
inline PROTOBUF_NDEBUG_INLINE ComboLeg::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        action_(arena),
        exchange_(arena),
        designatedlocation_(arena) {}

inline void ComboLeg::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, conid_),
           0,
           offsetof(Impl_, exemptcode_) -
               offsetof(Impl_, conid_) +
               sizeof(Impl_::exemptcode_));
}
ComboLeg::~ComboLeg() {
  // @@protoc_insertion_point(destructor:protobuf.ComboLeg)
  SharedDtor(*this);
}
inline void ComboLeg::SharedDtor(MessageLite& self) {
  ComboLeg& this_ = static_cast<ComboLeg&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.action_.Destroy();
  this_._impl_.exchange_.Destroy();
  this_._impl_.designatedlocation_.Destroy();
  this_._impl_.~Impl_();
}

inline void* ComboLeg::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) ComboLeg(arena);
}
constexpr auto ComboLeg::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ComboLeg),
                                            alignof(ComboLeg));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull ComboLeg::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_ComboLeg_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &ComboLeg::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<ComboLeg>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &ComboLeg::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<ComboLeg>(), &ComboLeg::ByteSizeLong,
            &ComboLeg::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_._cached_size_),
        false,
    },
    &ComboLeg::kDescriptorMethods,
    &descriptor_table_ComboLeg_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* ComboLeg::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 66, 2> ComboLeg::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf::ComboLeg>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 conId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ComboLeg, _impl_.conid_), 3>(),
     {8, 3, 0, PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.conid_)}},
    // optional int32 ratio = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ComboLeg, _impl_.ratio_), 4>(),
     {16, 4, 0, PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.ratio_)}},
    // optional string action = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 0, 0, PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.action_)}},
    // optional string exchange = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 1, 0, PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.exchange_)}},
    // optional int32 openClose = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ComboLeg, _impl_.openclose_), 5>(),
     {40, 5, 0, PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.openclose_)}},
    // optional int32 shortSalesSlot = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ComboLeg, _impl_.shortsalesslot_), 6>(),
     {48, 6, 0, PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.shortsalesslot_)}},
    // optional string designatedLocation = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.designatedlocation_)}},
    // optional int32 exemptCode = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ComboLeg, _impl_.exemptcode_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.exemptcode_)}},
    // optional double perLegPrice = 9;
    {::_pbi::TcParser::FastF64S1,
     {73, 7, 0, PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.perlegprice_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 conId = 1;
    {PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.conid_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 ratio = 2;
    {PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.ratio_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string action = 3;
    {PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.action_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string exchange = 4;
    {PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.exchange_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 openClose = 5;
    {PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.openclose_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional int32 shortSalesSlot = 6;
    {PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.shortsalesslot_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string designatedLocation = 7;
    {PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.designatedlocation_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 exemptCode = 8;
    {PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.exemptcode_), _Internal::kHasBitsOffset + 8, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional double perLegPrice = 9;
    {PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.perlegprice_), _Internal::kHasBitsOffset + 7, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
  }},
  // no aux_entries
  {{
    "\21\0\0\6\10\0\0\22\0\0\0\0\0\0\0\0"
    "protobuf.ComboLeg"
    "action"
    "exchange"
    "designatedLocation"
  }},
};

PROTOBUF_NOINLINE void ComboLeg::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ComboLeg)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.action_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.exchange_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.designatedlocation_.ClearNonDefaultToEmpty();
    }
  }
  if (cached_has_bits & 0x000000f8u) {
    ::memset(&_impl_.conid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.perlegprice_) -
        reinterpret_cast<char*>(&_impl_.conid_)) + sizeof(_impl_.perlegprice_));
  }
  _impl_.exemptcode_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* ComboLeg::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const ComboLeg& this_ = static_cast<const ComboLeg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* ComboLeg::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const ComboLeg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf.ComboLeg)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional int32 conId = 1;
          if (cached_has_bits & 0x00000008u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_conid(), target);
          }

          // optional int32 ratio = 2;
          if (cached_has_bits & 0x00000010u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_ratio(), target);
          }

          // optional string action = 3;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_action();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ComboLeg.action");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // optional string exchange = 4;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_exchange();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ComboLeg.exchange");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // optional int32 openClose = 5;
          if (cached_has_bits & 0x00000020u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_openclose(), target);
          }

          // optional int32 shortSalesSlot = 6;
          if (cached_has_bits & 0x00000040u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<6>(
                    stream, this_._internal_shortsalesslot(), target);
          }

          // optional string designatedLocation = 7;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_designatedlocation();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ComboLeg.designatedLocation");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          // optional int32 exemptCode = 8;
          if (cached_has_bits & 0x00000100u) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<8>(
                    stream, this_._internal_exemptcode(), target);
          }

          // optional double perLegPrice = 9;
          if (cached_has_bits & 0x00000080u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteDoubleToArray(
                9, this_._internal_perlegprice(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf.ComboLeg)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t ComboLeg::ByteSizeLong(const MessageLite& base) {
          const ComboLeg& this_ = static_cast<const ComboLeg&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t ComboLeg::ByteSizeLong() const {
          const ComboLeg& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf.ComboLeg)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x000000ffu) {
            // optional string action = 3;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_action());
            }
            // optional string exchange = 4;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_exchange());
            }
            // optional string designatedLocation = 7;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_designatedlocation());
            }
            // optional int32 conId = 1;
            if (cached_has_bits & 0x00000008u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_conid());
            }
            // optional int32 ratio = 2;
            if (cached_has_bits & 0x00000010u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_ratio());
            }
            // optional int32 openClose = 5;
            if (cached_has_bits & 0x00000020u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_openclose());
            }
            // optional int32 shortSalesSlot = 6;
            if (cached_has_bits & 0x00000040u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_shortsalesslot());
            }
            // optional double perLegPrice = 9;
            if (cached_has_bits & 0x00000080u) {
              total_size += 9;
            }
          }
           {
            // optional int32 exemptCode = 8;
            if (cached_has_bits & 0x00000100u) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_exemptcode());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void ComboLeg::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ComboLeg*>(&to_msg);
  auto& from = static_cast<const ComboLeg&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ComboLeg)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_action(from._internal_action());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_exchange(from._internal_exchange());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_designatedlocation(from._internal_designatedlocation());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_impl_.conid_ = from._impl_.conid_;
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_impl_.ratio_ = from._impl_.ratio_;
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_impl_.openclose_ = from._impl_.openclose_;
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.shortsalesslot_ = from._impl_.shortsalesslot_;
    }
    if (cached_has_bits & 0x00000080u) {
      _this->_impl_.perlegprice_ = from._impl_.perlegprice_;
    }
  }
  if (cached_has_bits & 0x00000100u) {
    _this->_impl_.exemptcode_ = from._impl_.exemptcode_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ComboLeg::CopyFrom(const ComboLeg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ComboLeg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ComboLeg::InternalSwap(ComboLeg* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.action_, &other->_impl_.action_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.designatedlocation_, &other->_impl_.designatedlocation_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.exemptcode_)
      + sizeof(ComboLeg::_impl_.exemptcode_)
      - PROTOBUF_FIELD_OFFSET(ComboLeg, _impl_.conid_)>(
          reinterpret_cast<char*>(&_impl_.conid_),
          reinterpret_cast<char*>(&other->_impl_.conid_));
}

::google::protobuf::Metadata ComboLeg::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ComboLeg_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: OrderStatus.proto
// Protobuf C++ Version: 5.29.3

#ifndef OrderStatus_2eproto_2epb_2eh
#define OrderStatus_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_OrderStatus_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_OrderStatus_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_OrderStatus_2eproto;
namespace protobuf {
class OrderStatus;
struct OrderStatusDefaultTypeInternal;
extern OrderStatusDefaultTypeInternal _OrderStatus_default_instance_;
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf {

// ===================================================================


// -------------------------------------------------------------------

class OrderStatus final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.OrderStatus) */ {
 public:
  inline OrderStatus() : OrderStatus(nullptr) {}
  ~OrderStatus() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderStatus* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderStatus));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderStatus(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderStatus(const OrderStatus& from) : OrderStatus(nullptr, from) {}
  inline OrderStatus(OrderStatus&& from) noexcept
      : OrderStatus(nullptr, std::move(from)) {}
  inline OrderStatus& operator=(const OrderStatus& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderStatus& operator=(OrderStatus&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderStatus& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderStatus* internal_default_instance() {
    return reinterpret_cast<const OrderStatus*>(
        &_OrderStatus_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OrderStatus& a, OrderStatus& b) { a.Swap(&b); }
  inline void Swap(OrderStatus* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderStatus* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderStatus* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderStatus>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderStatus& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderStatus& from) { OrderStatus::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderStatus* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.OrderStatus"; }

 protected:
  explicit OrderStatus(::google::protobuf::Arena* arena);
  OrderStatus(::google::protobuf::Arena* arena, const OrderStatus& from);
  OrderStatus(::google::protobuf::Arena* arena, OrderStatus&& from) noexcept
      : OrderStatus(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kStatusFieldNumber = 2,
    kFilledFieldNumber = 3,
    kRemainingFieldNumber = 4,
    kWhyHeldFieldNumber = 10,
    kOrderIdFieldNumber = 1,
    kParentIdFieldNumber = 7,
    kAvgFillPriceFieldNumber = 5,
    kPermIdFieldNumber = 6,
    kLastFillPriceFieldNumber = 8,
    kMktCapPriceFieldNumber = 11,
    kClientIdFieldNumber = 9,
  };
  // optional string status = 2;
  bool has_status() const;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // optional string filled = 3;
  bool has_filled() const;
  void clear_filled() ;
  const std::string& filled() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_filled(Arg_&& arg, Args_... args);
  std::string* mutable_filled();
  PROTOBUF_NODISCARD std::string* release_filled();
  void set_allocated_filled(std::string* value);

  private:
  const std::string& _internal_filled() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_filled(
      const std::string& value);
  std::string* _internal_mutable_filled();

  public:
  // optional string remaining = 4;
  bool has_remaining() const;
  void clear_remaining() ;
  const std::string& remaining() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_remaining(Arg_&& arg, Args_... args);
  std::string* mutable_remaining();
  PROTOBUF_NODISCARD std::string* release_remaining();
  void set_allocated_remaining(std::string* value);

  private:
  const std::string& _internal_remaining() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_remaining(
      const std::string& value);
  std::string* _internal_mutable_remaining();

  public:
  // optional string whyHeld = 10;
  bool has_whyheld() const;
  void clear_whyheld() ;
  const std::string& whyheld() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_whyheld(Arg_&& arg, Args_... args);
  std::string* mutable_whyheld();
  PROTOBUF_NODISCARD std::string* release_whyheld();
  void set_allocated_whyheld(std::string* value);

  private:
  const std::string& _internal_whyheld() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_whyheld(
      const std::string& value);
  std::string* _internal_mutable_whyheld();

  public:
  // optional int32 orderId = 1;
  bool has_orderid() const;
  void clear_orderid() ;
  ::int32_t orderid() const;
  void set_orderid(::int32_t value);

  private:
  ::int32_t _internal_orderid() const;
  void _internal_set_orderid(::int32_t value);

  public:
  // optional int32 parentId = 7;
  bool has_parentid() const;
  void clear_parentid() ;
  ::int32_t parentid() const;
  void set_parentid(::int32_t value);

  private:
  ::int32_t _internal_parentid() const;
  void _internal_set_parentid(::int32_t value);

  public:
  // optional double avgFillPrice = 5;
  bool has_avgfillprice() const;
  void clear_avgfillprice() ;
  double avgfillprice() const;
  void set_avgfillprice(double value);

  private:
  double _internal_avgfillprice() const;
  void _internal_set_avgfillprice(double value);

  public:
  // optional int64 permId = 6;
  bool has_permid() const;
  void clear_permid() ;
  ::int64_t permid() const;
  void set_permid(::int64_t value);

  private:
  ::int64_t _internal_permid() const;
  void _internal_set_permid(::int64_t value);

  public:
  // optional double lastFillPrice = 8;
  bool has_lastfillprice() const;
  void clear_lastfillprice() ;
  double lastfillprice() const;
  void set_lastfillprice(double value);

  private:
  double _internal_lastfillprice() const;
  void _internal_set_lastfillprice(double value);

  public:
  // optional double mktCapPrice = 11;
  bool has_mktcapprice() const;
  void clear_mktcapprice() ;
  double mktcapprice() const;
  void set_mktcapprice(double value);

  private:
  double _internal_mktcapprice() const;
  void _internal_set_mktcapprice(double value);

  public:
  // optional int32 clientId = 9;
  bool has_clientid() const;
  void clear_clientid() ;
  ::int32_t clientid() const;
  void set_clientid(::int32_t value);

  private:
  ::int32_t _internal_clientid() const;
  void _internal_set_clientid(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.OrderStatus)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      4, 11, 0,
      65, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderStatus& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr filled_;
    ::google::protobuf::internal::ArenaStringPtr remaining_;
    ::google::protobuf::internal::ArenaStringPtr whyheld_;
    ::int32_t orderid_;
    ::int32_t parentid_;
    double avgfillprice_;
    ::int64_t permid_;
    double lastfillprice_;
    double mktcapprice_;
    ::int32_t clientid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_OrderStatus_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OrderStatus

// optional int32 orderId = 1;
inline bool OrderStatus::has_orderid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void OrderStatus::clear_orderid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orderid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline ::int32_t OrderStatus::orderid() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.orderId)
  return _internal_orderid();
}
inline void OrderStatus::set_orderid(::int32_t value) {
  _internal_set_orderid(value);
  _impl_._has_bits_[0] |= 0x00000010u;
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.orderId)
}
inline ::int32_t OrderStatus::_internal_orderid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.orderid_;
}
inline void OrderStatus::_internal_set_orderid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.orderid_ = value;
}

// optional string status = 2;
inline bool OrderStatus::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderStatus::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderStatus::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStatus::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.status)
}
inline std::string* OrderStatus::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderStatus.status)
  return _s;
}
inline const std::string& OrderStatus::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void OrderStatus::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.status_.Set(value, GetArena());
}
inline std::string* OrderStatus::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* OrderStatus::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderStatus.status)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.status_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.status_.Set("", GetArena());
  }
  return released;
}
inline void OrderStatus::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderStatus.status)
}

// optional string filled = 3;
inline bool OrderStatus::has_filled() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderStatus::clear_filled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.filled_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrderStatus::filled() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.filled)
  return _internal_filled();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStatus::set_filled(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.filled_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.filled)
}
inline std::string* OrderStatus::mutable_filled() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_filled();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderStatus.filled)
  return _s;
}
inline const std::string& OrderStatus::_internal_filled() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.filled_.Get();
}
inline void OrderStatus::_internal_set_filled(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.filled_.Set(value, GetArena());
}
inline std::string* OrderStatus::_internal_mutable_filled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.filled_.Mutable( GetArena());
}
inline std::string* OrderStatus::release_filled() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderStatus.filled)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.filled_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.filled_.Set("", GetArena());
  }
  return released;
}
inline void OrderStatus::set_allocated_filled(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.filled_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.filled_.IsDefault()) {
    _impl_.filled_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderStatus.filled)
}

// optional string remaining = 4;
inline bool OrderStatus::has_remaining() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OrderStatus::clear_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.remaining_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& OrderStatus::remaining() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.remaining)
  return _internal_remaining();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStatus::set_remaining(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.remaining_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.remaining)
}
inline std::string* OrderStatus::mutable_remaining() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_remaining();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderStatus.remaining)
  return _s;
}
inline const std::string& OrderStatus::_internal_remaining() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.remaining_.Get();
}
inline void OrderStatus::_internal_set_remaining(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.remaining_.Set(value, GetArena());
}
inline std::string* OrderStatus::_internal_mutable_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.remaining_.Mutable( GetArena());
}
inline std::string* OrderStatus::release_remaining() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderStatus.remaining)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.remaining_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.remaining_.Set("", GetArena());
  }
  return released;
}
inline void OrderStatus::set_allocated_remaining(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.remaining_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.remaining_.IsDefault()) {
    _impl_.remaining_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderStatus.remaining)
}

// optional double avgFillPrice = 5;
inline bool OrderStatus::has_avgfillprice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void OrderStatus::clear_avgfillprice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avgfillprice_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline double OrderStatus::avgfillprice() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.avgFillPrice)
  return _internal_avgfillprice();
}
inline void OrderStatus::set_avgfillprice(double value) {
  _internal_set_avgfillprice(value);
  _impl_._has_bits_[0] |= 0x00000040u;
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.avgFillPrice)
}
inline double OrderStatus::_internal_avgfillprice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.avgfillprice_;
}
inline void OrderStatus::_internal_set_avgfillprice(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.avgfillprice_ = value;
}

// optional int64 permId = 6;
inline bool OrderStatus::has_permid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void OrderStatus::clear_permid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.permid_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline ::int64_t OrderStatus::permid() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.permId)
  return _internal_permid();
}
inline void OrderStatus::set_permid(::int64_t value) {
  _internal_set_permid(value);
  _impl_._has_bits_[0] |= 0x00000080u;
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.permId)
}
inline ::int64_t OrderStatus::_internal_permid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.permid_;
}
inline void OrderStatus::_internal_set_permid(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.permid_ = value;
}

// optional int32 parentId = 7;
inline bool OrderStatus::has_parentid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void OrderStatus::clear_parentid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parentid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline ::int32_t OrderStatus::parentid() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.parentId)
  return _internal_parentid();
}
inline void OrderStatus::set_parentid(::int32_t value) {
  _internal_set_parentid(value);
  _impl_._has_bits_[0] |= 0x00000020u;
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.parentId)
}
inline ::int32_t OrderStatus::_internal_parentid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.parentid_;
}
inline void OrderStatus::_internal_set_parentid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.parentid_ = value;
}

// optional double lastFillPrice = 8;
inline bool OrderStatus::has_lastfillprice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void OrderStatus::clear_lastfillprice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastfillprice_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline double OrderStatus::lastfillprice() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.lastFillPrice)
  return _internal_lastfillprice();
}
inline void OrderStatus::set_lastfillprice(double value) {
  _internal_set_lastfillprice(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.lastFillPrice)
}
inline double OrderStatus::_internal_lastfillprice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastfillprice_;
}
inline void OrderStatus::_internal_set_lastfillprice(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastfillprice_ = value;
}

// optional int32 clientId = 9;
inline bool OrderStatus::has_clientid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void OrderStatus::clear_clientid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline ::int32_t OrderStatus::clientid() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.clientId)
  return _internal_clientid();
}
inline void OrderStatus::set_clientid(::int32_t value) {
  _internal_set_clientid(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.clientId)
}
inline ::int32_t OrderStatus::_internal_clientid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clientid_;
}
inline void OrderStatus::_internal_set_clientid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientid_ = value;
}

// optional string whyHeld = 10;
inline bool OrderStatus::has_whyheld() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void OrderStatus::clear_whyheld() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.whyheld_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& OrderStatus::whyheld() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.whyHeld)
  return _internal_whyheld();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderStatus::set_whyheld(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.whyheld_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.whyHeld)
}
inline std::string* OrderStatus::mutable_whyheld() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_whyheld();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderStatus.whyHeld)
  return _s;
}
inline const std::string& OrderStatus::_internal_whyheld() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.whyheld_.Get();
}
inline void OrderStatus::_internal_set_whyheld(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.whyheld_.Set(value, GetArena());
}
inline std::string* OrderStatus::_internal_mutable_whyheld() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.whyheld_.Mutable( GetArena());
}
inline std::string* OrderStatus::release_whyheld() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderStatus.whyHeld)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.whyheld_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.whyheld_.Set("", GetArena());
  }
  return released;
}
inline void OrderStatus::set_allocated_whyheld(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.whyheld_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.whyheld_.IsDefault()) {
    _impl_.whyheld_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderStatus.whyHeld)
}

// optional double mktCapPrice = 11;
inline bool OrderStatus::has_mktcapprice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void OrderStatus::clear_mktcapprice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mktcapprice_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline double OrderStatus::mktcapprice() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderStatus.mktCapPrice)
  return _internal_mktcapprice();
}
inline void OrderStatus::set_mktcapprice(double value) {
  _internal_set_mktcapprice(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:protobuf.OrderStatus.mktCapPrice)
}
inline double OrderStatus::_internal_mktcapprice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mktcapprice_;
}
inline void OrderStatus::_internal_set_mktcapprice(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mktcapprice_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // OrderStatus_2eproto_2epb_2eh

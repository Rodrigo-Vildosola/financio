// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: OrderState.proto
// Protobuf C++ Version: 5.29.3

#ifndef OrderState_2eproto_2epb_2eh
#define OrderState_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5029003
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
#include "OrderAllocation.pb.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_OrderState_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_OrderState_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_OrderState_2eproto;
namespace protobuf {
class OrderState;
struct OrderStateDefaultTypeInternal;
extern OrderStateDefaultTypeInternal _OrderState_default_instance_;
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf {

// ===================================================================


// -------------------------------------------------------------------

class OrderState final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.OrderState) */ {
 public:
  inline OrderState() : OrderState(nullptr) {}
  ~OrderState() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(OrderState* msg, std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(OrderState));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR OrderState(
      ::google::protobuf::internal::ConstantInitialized);

  inline OrderState(const OrderState& from) : OrderState(nullptr, from) {}
  inline OrderState(OrderState&& from) noexcept
      : OrderState(nullptr, std::move(from)) {}
  inline OrderState& operator=(const OrderState& from) {
    CopyFrom(from);
    return *this;
  }
  inline OrderState& operator=(OrderState&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const OrderState& default_instance() {
    return *internal_default_instance();
  }
  static inline const OrderState* internal_default_instance() {
    return reinterpret_cast<const OrderState*>(
        &_OrderState_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(OrderState& a, OrderState& b) { a.Swap(&b); }
  inline void Swap(OrderState* other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(OrderState* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  OrderState* New(::google::protobuf::Arena* arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<OrderState>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const OrderState& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const OrderState& from) { OrderState::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* _InternalSerialize(
      const MessageLite& msg, ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(OrderState* other);
 private:
  template <typename T>
  friend ::absl::string_view(
      ::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.OrderState"; }

 protected:
  explicit OrderState(::google::protobuf::Arena* arena);
  OrderState(::google::protobuf::Arena* arena, const OrderState& from);
  OrderState(::google::protobuf::Arena* arena, OrderState&& from) noexcept
      : OrderState(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* GetClassData() const PROTOBUF_FINAL;
  static void* PlacementNew_(const void*, void* mem,
                             ::google::protobuf::Arena* arena);
  static constexpr auto InternalNewImpl_();
  static const ::google::protobuf::internal::ClassDataFull _class_data_;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kOrderAllocationsFieldNumber = 27,
    kStatusFieldNumber = 1,
    kCommissionAndFeesCurrencyFieldNumber = 14,
    kMarginCurrencyFieldNumber = 15,
    kSuggestedSizeFieldNumber = 25,
    kRejectReasonFieldNumber = 26,
    kWarningTextFieldNumber = 28,
    kCompletedTimeFieldNumber = 29,
    kCompletedStatusFieldNumber = 30,
    kInitMarginBeforeFieldNumber = 2,
    kMaintMarginBeforeFieldNumber = 3,
    kEquityWithLoanBeforeFieldNumber = 4,
    kInitMarginChangeFieldNumber = 5,
    kMaintMarginChangeFieldNumber = 6,
    kEquityWithLoanChangeFieldNumber = 7,
    kInitMarginAfterFieldNumber = 8,
    kMaintMarginAfterFieldNumber = 9,
    kEquityWithLoanAfterFieldNumber = 10,
    kCommissionAndFeesFieldNumber = 11,
    kMinCommissionAndFeesFieldNumber = 12,
    kMaxCommissionAndFeesFieldNumber = 13,
    kInitMarginBeforeOutsideRTHFieldNumber = 16,
    kMaintMarginBeforeOutsideRTHFieldNumber = 17,
    kEquityWithLoanBeforeOutsideRTHFieldNumber = 18,
    kInitMarginChangeOutsideRTHFieldNumber = 19,
    kMaintMarginChangeOutsideRTHFieldNumber = 20,
    kEquityWithLoanChangeOutsideRTHFieldNumber = 21,
    kInitMarginAfterOutsideRTHFieldNumber = 22,
    kMaintMarginAfterOutsideRTHFieldNumber = 23,
    kEquityWithLoanAfterOutsideRTHFieldNumber = 24,
  };
  // repeated .protobuf.OrderAllocation orderAllocations = 27;
  int orderallocations_size() const;
  private:
  int _internal_orderallocations_size() const;

  public:
  void clear_orderallocations() ;
  ::protobuf::OrderAllocation* mutable_orderallocations(int index);
  ::google::protobuf::RepeatedPtrField<::protobuf::OrderAllocation>* mutable_orderallocations();

  private:
  const ::google::protobuf::RepeatedPtrField<::protobuf::OrderAllocation>& _internal_orderallocations() const;
  ::google::protobuf::RepeatedPtrField<::protobuf::OrderAllocation>* _internal_mutable_orderallocations();
  public:
  const ::protobuf::OrderAllocation& orderallocations(int index) const;
  ::protobuf::OrderAllocation* add_orderallocations();
  const ::google::protobuf::RepeatedPtrField<::protobuf::OrderAllocation>& orderallocations() const;
  // optional string status = 1;
  bool has_status() const;
  void clear_status() ;
  const std::string& status() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_status(Arg_&& arg, Args_... args);
  std::string* mutable_status();
  PROTOBUF_NODISCARD std::string* release_status();
  void set_allocated_status(std::string* value);

  private:
  const std::string& _internal_status() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_status(
      const std::string& value);
  std::string* _internal_mutable_status();

  public:
  // optional string commissionAndFeesCurrency = 14;
  bool has_commissionandfeescurrency() const;
  void clear_commissionandfeescurrency() ;
  const std::string& commissionandfeescurrency() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_commissionandfeescurrency(Arg_&& arg, Args_... args);
  std::string* mutable_commissionandfeescurrency();
  PROTOBUF_NODISCARD std::string* release_commissionandfeescurrency();
  void set_allocated_commissionandfeescurrency(std::string* value);

  private:
  const std::string& _internal_commissionandfeescurrency() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_commissionandfeescurrency(
      const std::string& value);
  std::string* _internal_mutable_commissionandfeescurrency();

  public:
  // optional string marginCurrency = 15;
  bool has_margincurrency() const;
  void clear_margincurrency() ;
  const std::string& margincurrency() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_margincurrency(Arg_&& arg, Args_... args);
  std::string* mutable_margincurrency();
  PROTOBUF_NODISCARD std::string* release_margincurrency();
  void set_allocated_margincurrency(std::string* value);

  private:
  const std::string& _internal_margincurrency() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_margincurrency(
      const std::string& value);
  std::string* _internal_mutable_margincurrency();

  public:
  // optional string suggestedSize = 25;
  bool has_suggestedsize() const;
  void clear_suggestedsize() ;
  const std::string& suggestedsize() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_suggestedsize(Arg_&& arg, Args_... args);
  std::string* mutable_suggestedsize();
  PROTOBUF_NODISCARD std::string* release_suggestedsize();
  void set_allocated_suggestedsize(std::string* value);

  private:
  const std::string& _internal_suggestedsize() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_suggestedsize(
      const std::string& value);
  std::string* _internal_mutable_suggestedsize();

  public:
  // optional string rejectReason = 26;
  bool has_rejectreason() const;
  void clear_rejectreason() ;
  const std::string& rejectreason() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_rejectreason(Arg_&& arg, Args_... args);
  std::string* mutable_rejectreason();
  PROTOBUF_NODISCARD std::string* release_rejectreason();
  void set_allocated_rejectreason(std::string* value);

  private:
  const std::string& _internal_rejectreason() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_rejectreason(
      const std::string& value);
  std::string* _internal_mutable_rejectreason();

  public:
  // optional string warningText = 28;
  bool has_warningtext() const;
  void clear_warningtext() ;
  const std::string& warningtext() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_warningtext(Arg_&& arg, Args_... args);
  std::string* mutable_warningtext();
  PROTOBUF_NODISCARD std::string* release_warningtext();
  void set_allocated_warningtext(std::string* value);

  private:
  const std::string& _internal_warningtext() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_warningtext(
      const std::string& value);
  std::string* _internal_mutable_warningtext();

  public:
  // optional string completedTime = 29;
  bool has_completedtime() const;
  void clear_completedtime() ;
  const std::string& completedtime() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_completedtime(Arg_&& arg, Args_... args);
  std::string* mutable_completedtime();
  PROTOBUF_NODISCARD std::string* release_completedtime();
  void set_allocated_completedtime(std::string* value);

  private:
  const std::string& _internal_completedtime() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_completedtime(
      const std::string& value);
  std::string* _internal_mutable_completedtime();

  public:
  // optional string completedStatus = 30;
  bool has_completedstatus() const;
  void clear_completedstatus() ;
  const std::string& completedstatus() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_completedstatus(Arg_&& arg, Args_... args);
  std::string* mutable_completedstatus();
  PROTOBUF_NODISCARD std::string* release_completedstatus();
  void set_allocated_completedstatus(std::string* value);

  private:
  const std::string& _internal_completedstatus() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_completedstatus(
      const std::string& value);
  std::string* _internal_mutable_completedstatus();

  public:
  // optional double initMarginBefore = 2;
  bool has_initmarginbefore() const;
  void clear_initmarginbefore() ;
  double initmarginbefore() const;
  void set_initmarginbefore(double value);

  private:
  double _internal_initmarginbefore() const;
  void _internal_set_initmarginbefore(double value);

  public:
  // optional double maintMarginBefore = 3;
  bool has_maintmarginbefore() const;
  void clear_maintmarginbefore() ;
  double maintmarginbefore() const;
  void set_maintmarginbefore(double value);

  private:
  double _internal_maintmarginbefore() const;
  void _internal_set_maintmarginbefore(double value);

  public:
  // optional double equityWithLoanBefore = 4;
  bool has_equitywithloanbefore() const;
  void clear_equitywithloanbefore() ;
  double equitywithloanbefore() const;
  void set_equitywithloanbefore(double value);

  private:
  double _internal_equitywithloanbefore() const;
  void _internal_set_equitywithloanbefore(double value);

  public:
  // optional double initMarginChange = 5;
  bool has_initmarginchange() const;
  void clear_initmarginchange() ;
  double initmarginchange() const;
  void set_initmarginchange(double value);

  private:
  double _internal_initmarginchange() const;
  void _internal_set_initmarginchange(double value);

  public:
  // optional double maintMarginChange = 6;
  bool has_maintmarginchange() const;
  void clear_maintmarginchange() ;
  double maintmarginchange() const;
  void set_maintmarginchange(double value);

  private:
  double _internal_maintmarginchange() const;
  void _internal_set_maintmarginchange(double value);

  public:
  // optional double equityWithLoanChange = 7;
  bool has_equitywithloanchange() const;
  void clear_equitywithloanchange() ;
  double equitywithloanchange() const;
  void set_equitywithloanchange(double value);

  private:
  double _internal_equitywithloanchange() const;
  void _internal_set_equitywithloanchange(double value);

  public:
  // optional double initMarginAfter = 8;
  bool has_initmarginafter() const;
  void clear_initmarginafter() ;
  double initmarginafter() const;
  void set_initmarginafter(double value);

  private:
  double _internal_initmarginafter() const;
  void _internal_set_initmarginafter(double value);

  public:
  // optional double maintMarginAfter = 9;
  bool has_maintmarginafter() const;
  void clear_maintmarginafter() ;
  double maintmarginafter() const;
  void set_maintmarginafter(double value);

  private:
  double _internal_maintmarginafter() const;
  void _internal_set_maintmarginafter(double value);

  public:
  // optional double equityWithLoanAfter = 10;
  bool has_equitywithloanafter() const;
  void clear_equitywithloanafter() ;
  double equitywithloanafter() const;
  void set_equitywithloanafter(double value);

  private:
  double _internal_equitywithloanafter() const;
  void _internal_set_equitywithloanafter(double value);

  public:
  // optional double commissionAndFees = 11;
  bool has_commissionandfees() const;
  void clear_commissionandfees() ;
  double commissionandfees() const;
  void set_commissionandfees(double value);

  private:
  double _internal_commissionandfees() const;
  void _internal_set_commissionandfees(double value);

  public:
  // optional double minCommissionAndFees = 12;
  bool has_mincommissionandfees() const;
  void clear_mincommissionandfees() ;
  double mincommissionandfees() const;
  void set_mincommissionandfees(double value);

  private:
  double _internal_mincommissionandfees() const;
  void _internal_set_mincommissionandfees(double value);

  public:
  // optional double maxCommissionAndFees = 13;
  bool has_maxcommissionandfees() const;
  void clear_maxcommissionandfees() ;
  double maxcommissionandfees() const;
  void set_maxcommissionandfees(double value);

  private:
  double _internal_maxcommissionandfees() const;
  void _internal_set_maxcommissionandfees(double value);

  public:
  // optional double initMarginBeforeOutsideRTH = 16;
  bool has_initmarginbeforeoutsiderth() const;
  void clear_initmarginbeforeoutsiderth() ;
  double initmarginbeforeoutsiderth() const;
  void set_initmarginbeforeoutsiderth(double value);

  private:
  double _internal_initmarginbeforeoutsiderth() const;
  void _internal_set_initmarginbeforeoutsiderth(double value);

  public:
  // optional double maintMarginBeforeOutsideRTH = 17;
  bool has_maintmarginbeforeoutsiderth() const;
  void clear_maintmarginbeforeoutsiderth() ;
  double maintmarginbeforeoutsiderth() const;
  void set_maintmarginbeforeoutsiderth(double value);

  private:
  double _internal_maintmarginbeforeoutsiderth() const;
  void _internal_set_maintmarginbeforeoutsiderth(double value);

  public:
  // optional double equityWithLoanBeforeOutsideRTH = 18;
  bool has_equitywithloanbeforeoutsiderth() const;
  void clear_equitywithloanbeforeoutsiderth() ;
  double equitywithloanbeforeoutsiderth() const;
  void set_equitywithloanbeforeoutsiderth(double value);

  private:
  double _internal_equitywithloanbeforeoutsiderth() const;
  void _internal_set_equitywithloanbeforeoutsiderth(double value);

  public:
  // optional double initMarginChangeOutsideRTH = 19;
  bool has_initmarginchangeoutsiderth() const;
  void clear_initmarginchangeoutsiderth() ;
  double initmarginchangeoutsiderth() const;
  void set_initmarginchangeoutsiderth(double value);

  private:
  double _internal_initmarginchangeoutsiderth() const;
  void _internal_set_initmarginchangeoutsiderth(double value);

  public:
  // optional double maintMarginChangeOutsideRTH = 20;
  bool has_maintmarginchangeoutsiderth() const;
  void clear_maintmarginchangeoutsiderth() ;
  double maintmarginchangeoutsiderth() const;
  void set_maintmarginchangeoutsiderth(double value);

  private:
  double _internal_maintmarginchangeoutsiderth() const;
  void _internal_set_maintmarginchangeoutsiderth(double value);

  public:
  // optional double equityWithLoanChangeOutsideRTH = 21;
  bool has_equitywithloanchangeoutsiderth() const;
  void clear_equitywithloanchangeoutsiderth() ;
  double equitywithloanchangeoutsiderth() const;
  void set_equitywithloanchangeoutsiderth(double value);

  private:
  double _internal_equitywithloanchangeoutsiderth() const;
  void _internal_set_equitywithloanchangeoutsiderth(double value);

  public:
  // optional double initMarginAfterOutsideRTH = 22;
  bool has_initmarginafteroutsiderth() const;
  void clear_initmarginafteroutsiderth() ;
  double initmarginafteroutsiderth() const;
  void set_initmarginafteroutsiderth(double value);

  private:
  double _internal_initmarginafteroutsiderth() const;
  void _internal_set_initmarginafteroutsiderth(double value);

  public:
  // optional double maintMarginAfterOutsideRTH = 23;
  bool has_maintmarginafteroutsiderth() const;
  void clear_maintmarginafteroutsiderth() ;
  double maintmarginafteroutsiderth() const;
  void set_maintmarginafteroutsiderth(double value);

  private:
  double _internal_maintmarginafteroutsiderth() const;
  void _internal_set_maintmarginafteroutsiderth(double value);

  public:
  // optional double equityWithLoanAfterOutsideRTH = 24;
  bool has_equitywithloanafteroutsiderth() const;
  void clear_equitywithloanafteroutsiderth() ;
  double equitywithloanafteroutsiderth() const;
  void set_equitywithloanafteroutsiderth(double value);

  private:
  double _internal_equitywithloanafteroutsiderth() const;
  void _internal_set_equitywithloanafteroutsiderth(double value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.OrderState)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      5, 30, 1,
      161, 2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const OrderState& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField< ::protobuf::OrderAllocation > orderallocations_;
    ::google::protobuf::internal::ArenaStringPtr status_;
    ::google::protobuf::internal::ArenaStringPtr commissionandfeescurrency_;
    ::google::protobuf::internal::ArenaStringPtr margincurrency_;
    ::google::protobuf::internal::ArenaStringPtr suggestedsize_;
    ::google::protobuf::internal::ArenaStringPtr rejectreason_;
    ::google::protobuf::internal::ArenaStringPtr warningtext_;
    ::google::protobuf::internal::ArenaStringPtr completedtime_;
    ::google::protobuf::internal::ArenaStringPtr completedstatus_;
    double initmarginbefore_;
    double maintmarginbefore_;
    double equitywithloanbefore_;
    double initmarginchange_;
    double maintmarginchange_;
    double equitywithloanchange_;
    double initmarginafter_;
    double maintmarginafter_;
    double equitywithloanafter_;
    double commissionandfees_;
    double mincommissionandfees_;
    double maxcommissionandfees_;
    double initmarginbeforeoutsiderth_;
    double maintmarginbeforeoutsiderth_;
    double equitywithloanbeforeoutsiderth_;
    double initmarginchangeoutsiderth_;
    double maintmarginchangeoutsiderth_;
    double equitywithloanchangeoutsiderth_;
    double initmarginafteroutsiderth_;
    double maintmarginafteroutsiderth_;
    double equitywithloanafteroutsiderth_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_OrderState_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// OrderState

// optional string status = 1;
inline bool OrderState::has_status() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline void OrderState::clear_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.status_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& OrderState::status() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.status)
  return _internal_status();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_status(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.status_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderState.status)
}
inline std::string* OrderState::mutable_status() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_status();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.status)
  return _s;
}
inline const std::string& OrderState::_internal_status() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.status_.Get();
}
inline void OrderState::_internal_set_status(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.status_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.status_.Mutable( GetArena());
}
inline std::string* OrderState::release_status() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderState.status)
  if ((_impl_._has_bits_[0] & 0x00000001u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* released = _impl_.status_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.status_.Set("", GetArena());
  }
  return released;
}
inline void OrderState::set_allocated_status(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.status_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.status_.IsDefault()) {
    _impl_.status_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.status)
}

// optional double initMarginBefore = 2;
inline bool OrderState::has_initmarginbefore() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline void OrderState::clear_initmarginbefore() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginbefore_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline double OrderState::initmarginbefore() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginBefore)
  return _internal_initmarginbefore();
}
inline void OrderState::set_initmarginbefore(double value) {
  _internal_set_initmarginbefore(value);
  _impl_._has_bits_[0] |= 0x00000100u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginBefore)
}
inline double OrderState::_internal_initmarginbefore() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initmarginbefore_;
}
inline void OrderState::_internal_set_initmarginbefore(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginbefore_ = value;
}

// optional double maintMarginBefore = 3;
inline bool OrderState::has_maintmarginbefore() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline void OrderState::clear_maintmarginbefore() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginbefore_ = 0;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline double OrderState::maintmarginbefore() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginBefore)
  return _internal_maintmarginbefore();
}
inline void OrderState::set_maintmarginbefore(double value) {
  _internal_set_maintmarginbefore(value);
  _impl_._has_bits_[0] |= 0x00000200u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginBefore)
}
inline double OrderState::_internal_maintmarginbefore() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maintmarginbefore_;
}
inline void OrderState::_internal_set_maintmarginbefore(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginbefore_ = value;
}

// optional double equityWithLoanBefore = 4;
inline bool OrderState::has_equitywithloanbefore() const {
  bool value = (_impl_._has_bits_[0] & 0x00000400u) != 0;
  return value;
}
inline void OrderState::clear_equitywithloanbefore() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanbefore_ = 0;
  _impl_._has_bits_[0] &= ~0x00000400u;
}
inline double OrderState::equitywithloanbefore() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanBefore)
  return _internal_equitywithloanbefore();
}
inline void OrderState::set_equitywithloanbefore(double value) {
  _internal_set_equitywithloanbefore(value);
  _impl_._has_bits_[0] |= 0x00000400u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanBefore)
}
inline double OrderState::_internal_equitywithloanbefore() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equitywithloanbefore_;
}
inline void OrderState::_internal_set_equitywithloanbefore(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanbefore_ = value;
}

// optional double initMarginChange = 5;
inline bool OrderState::has_initmarginchange() const {
  bool value = (_impl_._has_bits_[0] & 0x00000800u) != 0;
  return value;
}
inline void OrderState::clear_initmarginchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginchange_ = 0;
  _impl_._has_bits_[0] &= ~0x00000800u;
}
inline double OrderState::initmarginchange() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginChange)
  return _internal_initmarginchange();
}
inline void OrderState::set_initmarginchange(double value) {
  _internal_set_initmarginchange(value);
  _impl_._has_bits_[0] |= 0x00000800u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginChange)
}
inline double OrderState::_internal_initmarginchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initmarginchange_;
}
inline void OrderState::_internal_set_initmarginchange(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginchange_ = value;
}

// optional double maintMarginChange = 6;
inline bool OrderState::has_maintmarginchange() const {
  bool value = (_impl_._has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline void OrderState::clear_maintmarginchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginchange_ = 0;
  _impl_._has_bits_[0] &= ~0x00001000u;
}
inline double OrderState::maintmarginchange() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginChange)
  return _internal_maintmarginchange();
}
inline void OrderState::set_maintmarginchange(double value) {
  _internal_set_maintmarginchange(value);
  _impl_._has_bits_[0] |= 0x00001000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginChange)
}
inline double OrderState::_internal_maintmarginchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maintmarginchange_;
}
inline void OrderState::_internal_set_maintmarginchange(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginchange_ = value;
}

// optional double equityWithLoanChange = 7;
inline bool OrderState::has_equitywithloanchange() const {
  bool value = (_impl_._has_bits_[0] & 0x00002000u) != 0;
  return value;
}
inline void OrderState::clear_equitywithloanchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanchange_ = 0;
  _impl_._has_bits_[0] &= ~0x00002000u;
}
inline double OrderState::equitywithloanchange() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanChange)
  return _internal_equitywithloanchange();
}
inline void OrderState::set_equitywithloanchange(double value) {
  _internal_set_equitywithloanchange(value);
  _impl_._has_bits_[0] |= 0x00002000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanChange)
}
inline double OrderState::_internal_equitywithloanchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equitywithloanchange_;
}
inline void OrderState::_internal_set_equitywithloanchange(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanchange_ = value;
}

// optional double initMarginAfter = 8;
inline bool OrderState::has_initmarginafter() const {
  bool value = (_impl_._has_bits_[0] & 0x00004000u) != 0;
  return value;
}
inline void OrderState::clear_initmarginafter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginafter_ = 0;
  _impl_._has_bits_[0] &= ~0x00004000u;
}
inline double OrderState::initmarginafter() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginAfter)
  return _internal_initmarginafter();
}
inline void OrderState::set_initmarginafter(double value) {
  _internal_set_initmarginafter(value);
  _impl_._has_bits_[0] |= 0x00004000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginAfter)
}
inline double OrderState::_internal_initmarginafter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initmarginafter_;
}
inline void OrderState::_internal_set_initmarginafter(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginafter_ = value;
}

// optional double maintMarginAfter = 9;
inline bool OrderState::has_maintmarginafter() const {
  bool value = (_impl_._has_bits_[0] & 0x00008000u) != 0;
  return value;
}
inline void OrderState::clear_maintmarginafter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginafter_ = 0;
  _impl_._has_bits_[0] &= ~0x00008000u;
}
inline double OrderState::maintmarginafter() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginAfter)
  return _internal_maintmarginafter();
}
inline void OrderState::set_maintmarginafter(double value) {
  _internal_set_maintmarginafter(value);
  _impl_._has_bits_[0] |= 0x00008000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginAfter)
}
inline double OrderState::_internal_maintmarginafter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maintmarginafter_;
}
inline void OrderState::_internal_set_maintmarginafter(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginafter_ = value;
}

// optional double equityWithLoanAfter = 10;
inline bool OrderState::has_equitywithloanafter() const {
  bool value = (_impl_._has_bits_[0] & 0x00010000u) != 0;
  return value;
}
inline void OrderState::clear_equitywithloanafter() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanafter_ = 0;
  _impl_._has_bits_[0] &= ~0x00010000u;
}
inline double OrderState::equitywithloanafter() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanAfter)
  return _internal_equitywithloanafter();
}
inline void OrderState::set_equitywithloanafter(double value) {
  _internal_set_equitywithloanafter(value);
  _impl_._has_bits_[0] |= 0x00010000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanAfter)
}
inline double OrderState::_internal_equitywithloanafter() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equitywithloanafter_;
}
inline void OrderState::_internal_set_equitywithloanafter(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanafter_ = value;
}

// optional double commissionAndFees = 11;
inline bool OrderState::has_commissionandfees() const {
  bool value = (_impl_._has_bits_[0] & 0x00020000u) != 0;
  return value;
}
inline void OrderState::clear_commissionandfees() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commissionandfees_ = 0;
  _impl_._has_bits_[0] &= ~0x00020000u;
}
inline double OrderState::commissionandfees() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.commissionAndFees)
  return _internal_commissionandfees();
}
inline void OrderState::set_commissionandfees(double value) {
  _internal_set_commissionandfees(value);
  _impl_._has_bits_[0] |= 0x00020000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.commissionAndFees)
}
inline double OrderState::_internal_commissionandfees() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commissionandfees_;
}
inline void OrderState::_internal_set_commissionandfees(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commissionandfees_ = value;
}

// optional double minCommissionAndFees = 12;
inline bool OrderState::has_mincommissionandfees() const {
  bool value = (_impl_._has_bits_[0] & 0x00040000u) != 0;
  return value;
}
inline void OrderState::clear_mincommissionandfees() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mincommissionandfees_ = 0;
  _impl_._has_bits_[0] &= ~0x00040000u;
}
inline double OrderState::mincommissionandfees() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.minCommissionAndFees)
  return _internal_mincommissionandfees();
}
inline void OrderState::set_mincommissionandfees(double value) {
  _internal_set_mincommissionandfees(value);
  _impl_._has_bits_[0] |= 0x00040000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.minCommissionAndFees)
}
inline double OrderState::_internal_mincommissionandfees() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mincommissionandfees_;
}
inline void OrderState::_internal_set_mincommissionandfees(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mincommissionandfees_ = value;
}

// optional double maxCommissionAndFees = 13;
inline bool OrderState::has_maxcommissionandfees() const {
  bool value = (_impl_._has_bits_[0] & 0x00080000u) != 0;
  return value;
}
inline void OrderState::clear_maxcommissionandfees() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxcommissionandfees_ = 0;
  _impl_._has_bits_[0] &= ~0x00080000u;
}
inline double OrderState::maxcommissionandfees() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maxCommissionAndFees)
  return _internal_maxcommissionandfees();
}
inline void OrderState::set_maxcommissionandfees(double value) {
  _internal_set_maxcommissionandfees(value);
  _impl_._has_bits_[0] |= 0x00080000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maxCommissionAndFees)
}
inline double OrderState::_internal_maxcommissionandfees() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maxcommissionandfees_;
}
inline void OrderState::_internal_set_maxcommissionandfees(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maxcommissionandfees_ = value;
}

// optional string commissionAndFeesCurrency = 14;
inline bool OrderState::has_commissionandfeescurrency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline void OrderState::clear_commissionandfeescurrency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.commissionandfeescurrency_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline const std::string& OrderState::commissionandfeescurrency() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.commissionAndFeesCurrency)
  return _internal_commissionandfeescurrency();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_commissionandfeescurrency(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.commissionandfeescurrency_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderState.commissionAndFeesCurrency)
}
inline std::string* OrderState::mutable_commissionandfeescurrency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_commissionandfeescurrency();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.commissionAndFeesCurrency)
  return _s;
}
inline const std::string& OrderState::_internal_commissionandfeescurrency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.commissionandfeescurrency_.Get();
}
inline void OrderState::_internal_set_commissionandfeescurrency(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.commissionandfeescurrency_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_commissionandfeescurrency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002u;
  return _impl_.commissionandfeescurrency_.Mutable( GetArena());
}
inline std::string* OrderState::release_commissionandfeescurrency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderState.commissionAndFeesCurrency)
  if ((_impl_._has_bits_[0] & 0x00000002u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002u;
  auto* released = _impl_.commissionandfeescurrency_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.commissionandfeescurrency_.Set("", GetArena());
  }
  return released;
}
inline void OrderState::set_allocated_commissionandfeescurrency(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002u;
  }
  _impl_.commissionandfeescurrency_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.commissionandfeescurrency_.IsDefault()) {
    _impl_.commissionandfeescurrency_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.commissionAndFeesCurrency)
}

// optional string marginCurrency = 15;
inline bool OrderState::has_margincurrency() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline void OrderState::clear_margincurrency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.margincurrency_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline const std::string& OrderState::margincurrency() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.marginCurrency)
  return _internal_margincurrency();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_margincurrency(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.margincurrency_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderState.marginCurrency)
}
inline std::string* OrderState::mutable_margincurrency() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_margincurrency();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.marginCurrency)
  return _s;
}
inline const std::string& OrderState::_internal_margincurrency() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.margincurrency_.Get();
}
inline void OrderState::_internal_set_margincurrency(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.margincurrency_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_margincurrency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004u;
  return _impl_.margincurrency_.Mutable( GetArena());
}
inline std::string* OrderState::release_margincurrency() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderState.marginCurrency)
  if ((_impl_._has_bits_[0] & 0x00000004u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004u;
  auto* released = _impl_.margincurrency_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.margincurrency_.Set("", GetArena());
  }
  return released;
}
inline void OrderState::set_allocated_margincurrency(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004u;
  }
  _impl_.margincurrency_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.margincurrency_.IsDefault()) {
    _impl_.margincurrency_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.marginCurrency)
}

// optional double initMarginBeforeOutsideRTH = 16;
inline bool OrderState::has_initmarginbeforeoutsiderth() const {
  bool value = (_impl_._has_bits_[0] & 0x00100000u) != 0;
  return value;
}
inline void OrderState::clear_initmarginbeforeoutsiderth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginbeforeoutsiderth_ = 0;
  _impl_._has_bits_[0] &= ~0x00100000u;
}
inline double OrderState::initmarginbeforeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginBeforeOutsideRTH)
  return _internal_initmarginbeforeoutsiderth();
}
inline void OrderState::set_initmarginbeforeoutsiderth(double value) {
  _internal_set_initmarginbeforeoutsiderth(value);
  _impl_._has_bits_[0] |= 0x00100000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginBeforeOutsideRTH)
}
inline double OrderState::_internal_initmarginbeforeoutsiderth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initmarginbeforeoutsiderth_;
}
inline void OrderState::_internal_set_initmarginbeforeoutsiderth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginbeforeoutsiderth_ = value;
}

// optional double maintMarginBeforeOutsideRTH = 17;
inline bool OrderState::has_maintmarginbeforeoutsiderth() const {
  bool value = (_impl_._has_bits_[0] & 0x00200000u) != 0;
  return value;
}
inline void OrderState::clear_maintmarginbeforeoutsiderth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginbeforeoutsiderth_ = 0;
  _impl_._has_bits_[0] &= ~0x00200000u;
}
inline double OrderState::maintmarginbeforeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginBeforeOutsideRTH)
  return _internal_maintmarginbeforeoutsiderth();
}
inline void OrderState::set_maintmarginbeforeoutsiderth(double value) {
  _internal_set_maintmarginbeforeoutsiderth(value);
  _impl_._has_bits_[0] |= 0x00200000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginBeforeOutsideRTH)
}
inline double OrderState::_internal_maintmarginbeforeoutsiderth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maintmarginbeforeoutsiderth_;
}
inline void OrderState::_internal_set_maintmarginbeforeoutsiderth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginbeforeoutsiderth_ = value;
}

// optional double equityWithLoanBeforeOutsideRTH = 18;
inline bool OrderState::has_equitywithloanbeforeoutsiderth() const {
  bool value = (_impl_._has_bits_[0] & 0x00400000u) != 0;
  return value;
}
inline void OrderState::clear_equitywithloanbeforeoutsiderth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanbeforeoutsiderth_ = 0;
  _impl_._has_bits_[0] &= ~0x00400000u;
}
inline double OrderState::equitywithloanbeforeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanBeforeOutsideRTH)
  return _internal_equitywithloanbeforeoutsiderth();
}
inline void OrderState::set_equitywithloanbeforeoutsiderth(double value) {
  _internal_set_equitywithloanbeforeoutsiderth(value);
  _impl_._has_bits_[0] |= 0x00400000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanBeforeOutsideRTH)
}
inline double OrderState::_internal_equitywithloanbeforeoutsiderth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equitywithloanbeforeoutsiderth_;
}
inline void OrderState::_internal_set_equitywithloanbeforeoutsiderth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanbeforeoutsiderth_ = value;
}

// optional double initMarginChangeOutsideRTH = 19;
inline bool OrderState::has_initmarginchangeoutsiderth() const {
  bool value = (_impl_._has_bits_[0] & 0x00800000u) != 0;
  return value;
}
inline void OrderState::clear_initmarginchangeoutsiderth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginchangeoutsiderth_ = 0;
  _impl_._has_bits_[0] &= ~0x00800000u;
}
inline double OrderState::initmarginchangeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginChangeOutsideRTH)
  return _internal_initmarginchangeoutsiderth();
}
inline void OrderState::set_initmarginchangeoutsiderth(double value) {
  _internal_set_initmarginchangeoutsiderth(value);
  _impl_._has_bits_[0] |= 0x00800000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginChangeOutsideRTH)
}
inline double OrderState::_internal_initmarginchangeoutsiderth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initmarginchangeoutsiderth_;
}
inline void OrderState::_internal_set_initmarginchangeoutsiderth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginchangeoutsiderth_ = value;
}

// optional double maintMarginChangeOutsideRTH = 20;
inline bool OrderState::has_maintmarginchangeoutsiderth() const {
  bool value = (_impl_._has_bits_[0] & 0x01000000u) != 0;
  return value;
}
inline void OrderState::clear_maintmarginchangeoutsiderth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginchangeoutsiderth_ = 0;
  _impl_._has_bits_[0] &= ~0x01000000u;
}
inline double OrderState::maintmarginchangeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginChangeOutsideRTH)
  return _internal_maintmarginchangeoutsiderth();
}
inline void OrderState::set_maintmarginchangeoutsiderth(double value) {
  _internal_set_maintmarginchangeoutsiderth(value);
  _impl_._has_bits_[0] |= 0x01000000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginChangeOutsideRTH)
}
inline double OrderState::_internal_maintmarginchangeoutsiderth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maintmarginchangeoutsiderth_;
}
inline void OrderState::_internal_set_maintmarginchangeoutsiderth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginchangeoutsiderth_ = value;
}

// optional double equityWithLoanChangeOutsideRTH = 21;
inline bool OrderState::has_equitywithloanchangeoutsiderth() const {
  bool value = (_impl_._has_bits_[0] & 0x02000000u) != 0;
  return value;
}
inline void OrderState::clear_equitywithloanchangeoutsiderth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanchangeoutsiderth_ = 0;
  _impl_._has_bits_[0] &= ~0x02000000u;
}
inline double OrderState::equitywithloanchangeoutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanChangeOutsideRTH)
  return _internal_equitywithloanchangeoutsiderth();
}
inline void OrderState::set_equitywithloanchangeoutsiderth(double value) {
  _internal_set_equitywithloanchangeoutsiderth(value);
  _impl_._has_bits_[0] |= 0x02000000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanChangeOutsideRTH)
}
inline double OrderState::_internal_equitywithloanchangeoutsiderth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equitywithloanchangeoutsiderth_;
}
inline void OrderState::_internal_set_equitywithloanchangeoutsiderth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanchangeoutsiderth_ = value;
}

// optional double initMarginAfterOutsideRTH = 22;
inline bool OrderState::has_initmarginafteroutsiderth() const {
  bool value = (_impl_._has_bits_[0] & 0x04000000u) != 0;
  return value;
}
inline void OrderState::clear_initmarginafteroutsiderth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginafteroutsiderth_ = 0;
  _impl_._has_bits_[0] &= ~0x04000000u;
}
inline double OrderState::initmarginafteroutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.initMarginAfterOutsideRTH)
  return _internal_initmarginafteroutsiderth();
}
inline void OrderState::set_initmarginafteroutsiderth(double value) {
  _internal_set_initmarginafteroutsiderth(value);
  _impl_._has_bits_[0] |= 0x04000000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.initMarginAfterOutsideRTH)
}
inline double OrderState::_internal_initmarginafteroutsiderth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.initmarginafteroutsiderth_;
}
inline void OrderState::_internal_set_initmarginafteroutsiderth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.initmarginafteroutsiderth_ = value;
}

// optional double maintMarginAfterOutsideRTH = 23;
inline bool OrderState::has_maintmarginafteroutsiderth() const {
  bool value = (_impl_._has_bits_[0] & 0x08000000u) != 0;
  return value;
}
inline void OrderState::clear_maintmarginafteroutsiderth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginafteroutsiderth_ = 0;
  _impl_._has_bits_[0] &= ~0x08000000u;
}
inline double OrderState::maintmarginafteroutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.maintMarginAfterOutsideRTH)
  return _internal_maintmarginafteroutsiderth();
}
inline void OrderState::set_maintmarginafteroutsiderth(double value) {
  _internal_set_maintmarginafteroutsiderth(value);
  _impl_._has_bits_[0] |= 0x08000000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.maintMarginAfterOutsideRTH)
}
inline double OrderState::_internal_maintmarginafteroutsiderth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.maintmarginafteroutsiderth_;
}
inline void OrderState::_internal_set_maintmarginafteroutsiderth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.maintmarginafteroutsiderth_ = value;
}

// optional double equityWithLoanAfterOutsideRTH = 24;
inline bool OrderState::has_equitywithloanafteroutsiderth() const {
  bool value = (_impl_._has_bits_[0] & 0x10000000u) != 0;
  return value;
}
inline void OrderState::clear_equitywithloanafteroutsiderth() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanafteroutsiderth_ = 0;
  _impl_._has_bits_[0] &= ~0x10000000u;
}
inline double OrderState::equitywithloanafteroutsiderth() const {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.equityWithLoanAfterOutsideRTH)
  return _internal_equitywithloanafteroutsiderth();
}
inline void OrderState::set_equitywithloanafteroutsiderth(double value) {
  _internal_set_equitywithloanafteroutsiderth(value);
  _impl_._has_bits_[0] |= 0x10000000u;
  // @@protoc_insertion_point(field_set:protobuf.OrderState.equityWithLoanAfterOutsideRTH)
}
inline double OrderState::_internal_equitywithloanafteroutsiderth() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.equitywithloanafteroutsiderth_;
}
inline void OrderState::_internal_set_equitywithloanafteroutsiderth(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.equitywithloanafteroutsiderth_ = value;
}

// optional string suggestedSize = 25;
inline bool OrderState::has_suggestedsize() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline void OrderState::clear_suggestedsize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.suggestedsize_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline const std::string& OrderState::suggestedsize() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.suggestedSize)
  return _internal_suggestedsize();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_suggestedsize(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.suggestedsize_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderState.suggestedSize)
}
inline std::string* OrderState::mutable_suggestedsize() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_suggestedsize();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.suggestedSize)
  return _s;
}
inline const std::string& OrderState::_internal_suggestedsize() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.suggestedsize_.Get();
}
inline void OrderState::_internal_set_suggestedsize(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.suggestedsize_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_suggestedsize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008u;
  return _impl_.suggestedsize_.Mutable( GetArena());
}
inline std::string* OrderState::release_suggestedsize() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderState.suggestedSize)
  if ((_impl_._has_bits_[0] & 0x00000008u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008u;
  auto* released = _impl_.suggestedsize_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.suggestedsize_.Set("", GetArena());
  }
  return released;
}
inline void OrderState::set_allocated_suggestedsize(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008u;
  }
  _impl_.suggestedsize_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.suggestedsize_.IsDefault()) {
    _impl_.suggestedsize_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.suggestedSize)
}

// optional string rejectReason = 26;
inline bool OrderState::has_rejectreason() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline void OrderState::clear_rejectreason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.rejectreason_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline const std::string& OrderState::rejectreason() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.rejectReason)
  return _internal_rejectreason();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_rejectreason(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.rejectreason_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderState.rejectReason)
}
inline std::string* OrderState::mutable_rejectreason() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_rejectreason();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.rejectReason)
  return _s;
}
inline const std::string& OrderState::_internal_rejectreason() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.rejectreason_.Get();
}
inline void OrderState::_internal_set_rejectreason(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.rejectreason_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_rejectreason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010u;
  return _impl_.rejectreason_.Mutable( GetArena());
}
inline std::string* OrderState::release_rejectreason() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderState.rejectReason)
  if ((_impl_._has_bits_[0] & 0x00000010u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010u;
  auto* released = _impl_.rejectreason_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.rejectreason_.Set("", GetArena());
  }
  return released;
}
inline void OrderState::set_allocated_rejectreason(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010u;
  }
  _impl_.rejectreason_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.rejectreason_.IsDefault()) {
    _impl_.rejectreason_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.rejectReason)
}

// repeated .protobuf.OrderAllocation orderAllocations = 27;
inline int OrderState::_internal_orderallocations_size() const {
  return _internal_orderallocations().size();
}
inline int OrderState::orderallocations_size() const {
  return _internal_orderallocations_size();
}
inline ::protobuf::OrderAllocation* OrderState::mutable_orderallocations(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.orderAllocations)
  return _internal_mutable_orderallocations()->Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::OrderAllocation>* OrderState::mutable_orderallocations()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.OrderState.orderAllocations)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_orderallocations();
}
inline const ::protobuf::OrderAllocation& OrderState::orderallocations(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.orderAllocations)
  return _internal_orderallocations().Get(index);
}
inline ::protobuf::OrderAllocation* OrderState::add_orderallocations() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::protobuf::OrderAllocation* _add = _internal_mutable_orderallocations()->Add();
  // @@protoc_insertion_point(field_add:protobuf.OrderState.orderAllocations)
  return _add;
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::OrderAllocation>& OrderState::orderallocations() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.OrderState.orderAllocations)
  return _internal_orderallocations();
}
inline const ::google::protobuf::RepeatedPtrField<::protobuf::OrderAllocation>&
OrderState::_internal_orderallocations() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.orderallocations_;
}
inline ::google::protobuf::RepeatedPtrField<::protobuf::OrderAllocation>*
OrderState::_internal_mutable_orderallocations() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.orderallocations_;
}

// optional string warningText = 28;
inline bool OrderState::has_warningtext() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline void OrderState::clear_warningtext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.warningtext_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline const std::string& OrderState::warningtext() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.warningText)
  return _internal_warningtext();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_warningtext(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.warningtext_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderState.warningText)
}
inline std::string* OrderState::mutable_warningtext() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_warningtext();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.warningText)
  return _s;
}
inline const std::string& OrderState::_internal_warningtext() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.warningtext_.Get();
}
inline void OrderState::_internal_set_warningtext(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.warningtext_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_warningtext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020u;
  return _impl_.warningtext_.Mutable( GetArena());
}
inline std::string* OrderState::release_warningtext() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderState.warningText)
  if ((_impl_._has_bits_[0] & 0x00000020u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020u;
  auto* released = _impl_.warningtext_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.warningtext_.Set("", GetArena());
  }
  return released;
}
inline void OrderState::set_allocated_warningtext(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020u;
  }
  _impl_.warningtext_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.warningtext_.IsDefault()) {
    _impl_.warningtext_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.warningText)
}

// optional string completedTime = 29;
inline bool OrderState::has_completedtime() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline void OrderState::clear_completedtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completedtime_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline const std::string& OrderState::completedtime() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.completedTime)
  return _internal_completedtime();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_completedtime(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.completedtime_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderState.completedTime)
}
inline std::string* OrderState::mutable_completedtime() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_completedtime();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.completedTime)
  return _s;
}
inline const std::string& OrderState::_internal_completedtime() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.completedtime_.Get();
}
inline void OrderState::_internal_set_completedtime(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.completedtime_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_completedtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000040u;
  return _impl_.completedtime_.Mutable( GetArena());
}
inline std::string* OrderState::release_completedtime() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderState.completedTime)
  if ((_impl_._has_bits_[0] & 0x00000040u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000040u;
  auto* released = _impl_.completedtime_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.completedtime_.Set("", GetArena());
  }
  return released;
}
inline void OrderState::set_allocated_completedtime(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000040u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000040u;
  }
  _impl_.completedtime_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.completedtime_.IsDefault()) {
    _impl_.completedtime_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.completedTime)
}

// optional string completedStatus = 30;
inline bool OrderState::has_completedstatus() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline void OrderState::clear_completedstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.completedstatus_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline const std::string& OrderState::completedstatus() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.OrderState.completedStatus)
  return _internal_completedstatus();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void OrderState::set_completedstatus(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.completedstatus_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.OrderState.completedStatus)
}
inline std::string* OrderState::mutable_completedstatus() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_completedstatus();
  // @@protoc_insertion_point(field_mutable:protobuf.OrderState.completedStatus)
  return _s;
}
inline const std::string& OrderState::_internal_completedstatus() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.completedstatus_.Get();
}
inline void OrderState::_internal_set_completedstatus(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.completedstatus_.Set(value, GetArena());
}
inline std::string* OrderState::_internal_mutable_completedstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000080u;
  return _impl_.completedstatus_.Mutable( GetArena());
}
inline std::string* OrderState::release_completedstatus() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.OrderState.completedStatus)
  if ((_impl_._has_bits_[0] & 0x00000080u) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000080u;
  auto* released = _impl_.completedstatus_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.completedstatus_.Set("", GetArena());
  }
  return released;
}
inline void OrderState::set_allocated_completedstatus(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000080u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000080u;
  }
  _impl_.completedstatus_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.completedstatus_.IsDefault()) {
    _impl_.completedstatus_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.OrderState.completedStatus)
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // OrderState_2eproto_2epb_2eh

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: OrderAllocation.proto
// Protobuf C++ Version: 5.29.3

#include "OrderAllocation.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf {

inline constexpr OrderAllocation::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        account_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        position_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        positiondesired_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        positionafter_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        desiredallocqty_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        allowedallocqty_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ismonetary_{false} {}

template <typename>
PROTOBUF_CONSTEXPR OrderAllocation::OrderAllocation(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderAllocationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderAllocationDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderAllocationDefaultTypeInternal() {}
  union {
    OrderAllocation _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderAllocationDefaultTypeInternal _OrderAllocation_default_instance_;
}  // namespace protobuf
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_OrderAllocation_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_OrderAllocation_2eproto = nullptr;
const ::uint32_t
    TableStruct_OrderAllocation_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderAllocation, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderAllocation, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderAllocation, _impl_.account_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderAllocation, _impl_.position_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderAllocation, _impl_.positiondesired_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderAllocation, _impl_.positionafter_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderAllocation, _impl_.desiredallocqty_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderAllocation, _impl_.allowedallocqty_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderAllocation, _impl_.ismonetary_),
        0,
        1,
        2,
        3,
        4,
        5,
        6,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 15, -1, sizeof(::protobuf::OrderAllocation)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::protobuf::_OrderAllocation_default_instance_._instance,
};
const char descriptor_table_protodef_OrderAllocation_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025OrderAllocation.proto\022\010protobuf\"\303\002\n\017Or"
    "derAllocation\022\024\n\007account\030\001 \001(\tH\000\210\001\001\022\025\n\010p"
    "osition\030\002 \001(\tH\001\210\001\001\022\034\n\017positionDesired\030\003 "
    "\001(\tH\002\210\001\001\022\032\n\rpositionAfter\030\004 \001(\tH\003\210\001\001\022\034\n\017"
    "desiredAllocQty\030\005 \001(\tH\004\210\001\001\022\034\n\017allowedAll"
    "ocQty\030\006 \001(\tH\005\210\001\001\022\027\n\nisMonetary\030\007 \001(\010H\006\210\001"
    "\001B\n\n\010_accountB\013\n\t_positionB\022\n\020_positionD"
    "esiredB\020\n\016_positionAfterB\022\n\020_desiredAllo"
    "cQtyB\022\n\020_allowedAllocQtyB\r\n\013_isMonetaryB"
    "\?\n\026com.ib.client.protobufB\024OrderAllocati"
    "onProto\252\002\016IBApi.protobufb\006proto3"
};
static ::absl::once_flag descriptor_table_OrderAllocation_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_OrderAllocation_2eproto = {
    false,
    false,
    432,
    descriptor_table_protodef_OrderAllocation_2eproto,
    "OrderAllocation.proto",
    &descriptor_table_OrderAllocation_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_OrderAllocation_2eproto::offsets,
    file_level_enum_descriptors_OrderAllocation_2eproto,
    file_level_service_descriptors_OrderAllocation_2eproto,
};
namespace protobuf {
// ===================================================================

class OrderAllocation::_Internal {
 public:
  using HasBits =
      decltype(std::declval<OrderAllocation>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_._has_bits_);
};

OrderAllocation::OrderAllocation(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.OrderAllocation)
}
inline PROTOBUF_NDEBUG_INLINE OrderAllocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::protobuf::OrderAllocation& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        account_(arena, from.account_),
        position_(arena, from.position_),
        positiondesired_(arena, from.positiondesired_),
        positionafter_(arena, from.positionafter_),
        desiredallocqty_(arena, from.desiredallocqty_),
        allowedallocqty_(arena, from.allowedallocqty_) {}

OrderAllocation::OrderAllocation(
    ::google::protobuf::Arena* arena,
    const OrderAllocation& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderAllocation* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.ismonetary_ = from._impl_.ismonetary_;

  // @@protoc_insertion_point(copy_constructor:protobuf.OrderAllocation)
}
inline PROTOBUF_NDEBUG_INLINE OrderAllocation::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        account_(arena),
        position_(arena),
        positiondesired_(arena),
        positionafter_(arena),
        desiredallocqty_(arena),
        allowedallocqty_(arena) {}

inline void OrderAllocation::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.ismonetary_ = {};
}
OrderAllocation::~OrderAllocation() {
  // @@protoc_insertion_point(destructor:protobuf.OrderAllocation)
  SharedDtor(*this);
}
inline void OrderAllocation::SharedDtor(MessageLite& self) {
  OrderAllocation& this_ = static_cast<OrderAllocation&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.account_.Destroy();
  this_._impl_.position_.Destroy();
  this_._impl_.positiondesired_.Destroy();
  this_._impl_.positionafter_.Destroy();
  this_._impl_.desiredallocqty_.Destroy();
  this_._impl_.allowedallocqty_.Destroy();
  this_._impl_.~Impl_();
}

inline void* OrderAllocation::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) OrderAllocation(arena);
}
constexpr auto OrderAllocation::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderAllocation),
                                            alignof(OrderAllocation));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull OrderAllocation::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_OrderAllocation_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &OrderAllocation::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<OrderAllocation>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &OrderAllocation::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<OrderAllocation>(), &OrderAllocation::ByteSizeLong,
            &OrderAllocation::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_._cached_size_),
        false,
    },
    &OrderAllocation::kDescriptorMethods,
    &descriptor_table_OrderAllocation_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* OrderAllocation::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 7, 0, 106, 2> OrderAllocation::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_._has_bits_),
    0, // no _extensions_
    7, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967168,  // skipmap
    offsetof(decltype(_table_), field_entries),
    7,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf::OrderAllocation>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional string account = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.account_)}},
    // optional string position = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.position_)}},
    // optional string positionDesired = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.positiondesired_)}},
    // optional string positionAfter = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.positionafter_)}},
    // optional string desiredAllocQty = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.desiredallocqty_)}},
    // optional string allowedAllocQty = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 5, 0, PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.allowedallocqty_)}},
    // optional bool isMonetary = 7;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderAllocation, _impl_.ismonetary_), 6>(),
     {56, 6, 0, PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.ismonetary_)}},
  }}, {{
    65535, 65535
  }}, {{
    // optional string account = 1;
    {PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.account_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string position = 2;
    {PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.position_), _Internal::kHasBitsOffset + 1, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string positionDesired = 3;
    {PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.positiondesired_), _Internal::kHasBitsOffset + 2, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string positionAfter = 4;
    {PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.positionafter_), _Internal::kHasBitsOffset + 3, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string desiredAllocQty = 5;
    {PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.desiredallocqty_), _Internal::kHasBitsOffset + 4, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string allowedAllocQty = 6;
    {PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.allowedallocqty_), _Internal::kHasBitsOffset + 5, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional bool isMonetary = 7;
    {PROTOBUF_FIELD_OFFSET(OrderAllocation, _impl_.ismonetary_), _Internal::kHasBitsOffset + 6, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\30\7\10\17\15\17\17\0"
    "protobuf.OrderAllocation"
    "account"
    "position"
    "positionDesired"
    "positionAfter"
    "desiredAllocQty"
    "allowedAllocQty"
  }},
};

PROTOBUF_NOINLINE void OrderAllocation::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.OrderAllocation)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      _impl_.account_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000002u) {
      _impl_.position_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000004u) {
      _impl_.positiondesired_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000008u) {
      _impl_.positionafter_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000010u) {
      _impl_.desiredallocqty_.ClearNonDefaultToEmpty();
    }
    if (cached_has_bits & 0x00000020u) {
      _impl_.allowedallocqty_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.ismonetary_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* OrderAllocation::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const OrderAllocation& this_ = static_cast<const OrderAllocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* OrderAllocation::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const OrderAllocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:protobuf.OrderAllocation)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // optional string account = 1;
          if (cached_has_bits & 0x00000001u) {
            const std::string& _s = this_._internal_account();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderAllocation.account");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // optional string position = 2;
          if (cached_has_bits & 0x00000002u) {
            const std::string& _s = this_._internal_position();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderAllocation.position");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // optional string positionDesired = 3;
          if (cached_has_bits & 0x00000004u) {
            const std::string& _s = this_._internal_positiondesired();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderAllocation.positionDesired");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // optional string positionAfter = 4;
          if (cached_has_bits & 0x00000008u) {
            const std::string& _s = this_._internal_positionafter();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderAllocation.positionAfter");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          // optional string desiredAllocQty = 5;
          if (cached_has_bits & 0x00000010u) {
            const std::string& _s = this_._internal_desiredallocqty();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderAllocation.desiredAllocQty");
            target = stream->WriteStringMaybeAliased(5, _s, target);
          }

          // optional string allowedAllocQty = 6;
          if (cached_has_bits & 0x00000020u) {
            const std::string& _s = this_._internal_allowedallocqty();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderAllocation.allowedAllocQty");
            target = stream->WriteStringMaybeAliased(6, _s, target);
          }

          // optional bool isMonetary = 7;
          if (cached_has_bits & 0x00000040u) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                7, this_._internal_ismonetary(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:protobuf.OrderAllocation)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t OrderAllocation::ByteSizeLong(const MessageLite& base) {
          const OrderAllocation& this_ = static_cast<const OrderAllocation&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t OrderAllocation::ByteSizeLong() const {
          const OrderAllocation& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:protobuf.OrderAllocation)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
          cached_has_bits = this_._impl_._has_bits_[0];
          if (cached_has_bits & 0x0000007fu) {
            // optional string account = 1;
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_account());
            }
            // optional string position = 2;
            if (cached_has_bits & 0x00000002u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_position());
            }
            // optional string positionDesired = 3;
            if (cached_has_bits & 0x00000004u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_positiondesired());
            }
            // optional string positionAfter = 4;
            if (cached_has_bits & 0x00000008u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_positionafter());
            }
            // optional string desiredAllocQty = 5;
            if (cached_has_bits & 0x00000010u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_desiredallocqty());
            }
            // optional string allowedAllocQty = 6;
            if (cached_has_bits & 0x00000020u) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_allowedallocqty());
            }
            // optional bool isMonetary = 7;
            if (cached_has_bits & 0x00000040u) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void OrderAllocation::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderAllocation*>(&to_msg);
  auto& from = static_cast<const OrderAllocation&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.OrderAllocation)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      _this->_internal_set_account(from._internal_account());
    }
    if (cached_has_bits & 0x00000002u) {
      _this->_internal_set_position(from._internal_position());
    }
    if (cached_has_bits & 0x00000004u) {
      _this->_internal_set_positiondesired(from._internal_positiondesired());
    }
    if (cached_has_bits & 0x00000008u) {
      _this->_internal_set_positionafter(from._internal_positionafter());
    }
    if (cached_has_bits & 0x00000010u) {
      _this->_internal_set_desiredallocqty(from._internal_desiredallocqty());
    }
    if (cached_has_bits & 0x00000020u) {
      _this->_internal_set_allowedallocqty(from._internal_allowedallocqty());
    }
    if (cached_has_bits & 0x00000040u) {
      _this->_impl_.ismonetary_ = from._impl_.ismonetary_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderAllocation::CopyFrom(const OrderAllocation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.OrderAllocation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderAllocation::InternalSwap(OrderAllocation* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.account_, &other->_impl_.account_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.position_, &other->_impl_.position_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.positiondesired_, &other->_impl_.positiondesired_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.positionafter_, &other->_impl_.positionafter_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.desiredallocqty_, &other->_impl_.desiredallocqty_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.allowedallocqty_, &other->_impl_.allowedallocqty_, arena);
        swap(_impl_.ismonetary_, other->_impl_.ismonetary_);
}

::google::protobuf::Metadata OrderAllocation::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_OrderAllocation_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

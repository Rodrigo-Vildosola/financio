// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ComboLeg.proto
// Protobuf C++ Version: 6.32.1

#ifndef ComboLeg_2eproto_2epb_2eh
#define ComboLeg_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ComboLeg_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ComboLeg_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ComboLeg_2eproto;
}  // extern "C"
namespace protobuf {
class ComboLeg;
struct ComboLegDefaultTypeInternal;
extern ComboLegDefaultTypeInternal _ComboLeg_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ComboLeg_class_data_;
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf {

// ===================================================================


// -------------------------------------------------------------------

class ComboLeg final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.ComboLeg) */ {
 public:
  inline ComboLeg() : ComboLeg(nullptr) {}
  ~ComboLeg() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ComboLeg* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ComboLeg));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ComboLeg(::google::protobuf::internal::ConstantInitialized);

  inline ComboLeg(const ComboLeg& from) : ComboLeg(nullptr, from) {}
  inline ComboLeg(ComboLeg&& from) noexcept
      : ComboLeg(nullptr, ::std::move(from)) {}
  inline ComboLeg& operator=(const ComboLeg& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComboLeg& operator=(ComboLeg&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ComboLeg& default_instance() {
    return *reinterpret_cast<const ComboLeg*>(
        &_ComboLeg_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ComboLeg& a, ComboLeg& b) { a.Swap(&b); }
  inline void Swap(ComboLeg* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ComboLeg* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ComboLeg* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ComboLeg>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ComboLeg& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ComboLeg& from) { ComboLeg::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ComboLeg* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.ComboLeg"; }

 protected:
  explicit ComboLeg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ComboLeg(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ComboLeg& from);
  ComboLeg(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ComboLeg&& from) noexcept
      : ComboLeg(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kActionFieldNumber = 3,
    kExchangeFieldNumber = 4,
    kDesignatedLocationFieldNumber = 7,
    kConIdFieldNumber = 1,
    kRatioFieldNumber = 2,
    kOpenCloseFieldNumber = 5,
    kShortSalesSlotFieldNumber = 6,
    kPerLegPriceFieldNumber = 9,
    kExemptCodeFieldNumber = 8,
  };
  // optional string action = 3;
  bool has_action() const;
  void clear_action() ;
  const ::std::string& action() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_action(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_action();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_action();
  void set_allocated_action(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_action() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_action(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_action();

  public:
  // optional string exchange = 4;
  bool has_exchange() const;
  void clear_exchange() ;
  const ::std::string& exchange() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_exchange(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_exchange();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_exchange();
  void set_allocated_exchange(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_exchange() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_exchange(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_exchange();

  public:
  // optional string designatedLocation = 7;
  bool has_designatedlocation() const;
  void clear_designatedlocation() ;
  const ::std::string& designatedlocation() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_designatedlocation(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_designatedlocation();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_designatedlocation();
  void set_allocated_designatedlocation(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_designatedlocation() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_designatedlocation(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_designatedlocation();

  public:
  // optional int32 conId = 1;
  bool has_conid() const;
  void clear_conid() ;
  ::int32_t conid() const;
  void set_conid(::int32_t value);

  private:
  ::int32_t _internal_conid() const;
  void _internal_set_conid(::int32_t value);

  public:
  // optional int32 ratio = 2;
  bool has_ratio() const;
  void clear_ratio() ;
  ::int32_t ratio() const;
  void set_ratio(::int32_t value);

  private:
  ::int32_t _internal_ratio() const;
  void _internal_set_ratio(::int32_t value);

  public:
  // optional int32 openClose = 5;
  bool has_openclose() const;
  void clear_openclose() ;
  ::int32_t openclose() const;
  void set_openclose(::int32_t value);

  private:
  ::int32_t _internal_openclose() const;
  void _internal_set_openclose(::int32_t value);

  public:
  // optional int32 shortSalesSlot = 6;
  bool has_shortsalesslot() const;
  void clear_shortsalesslot() ;
  ::int32_t shortsalesslot() const;
  void set_shortsalesslot(::int32_t value);

  private:
  ::int32_t _internal_shortsalesslot() const;
  void _internal_set_shortsalesslot(::int32_t value);

  public:
  // optional double perLegPrice = 9;
  bool has_perlegprice() const;
  void clear_perlegprice() ;
  double perlegprice() const;
  void set_perlegprice(double value);

  private:
  double _internal_perlegprice() const;
  void _internal_set_perlegprice(double value);

  public:
  // optional int32 exemptCode = 8;
  bool has_exemptcode() const;
  void clear_exemptcode() ;
  ::int32_t exemptcode() const;
  void set_exemptcode(::int32_t value);

  private:
  ::int32_t _internal_exemptcode() const;
  void _internal_set_exemptcode(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.ComboLeg)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   0, 66,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ComboLeg& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr action_;
    ::google::protobuf::internal::ArenaStringPtr exchange_;
    ::google::protobuf::internal::ArenaStringPtr designatedlocation_;
    ::int32_t conid_;
    ::int32_t ratio_;
    ::int32_t openclose_;
    ::int32_t shortsalesslot_;
    double perlegprice_;
    ::int32_t exemptcode_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ComboLeg_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ComboLeg_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ComboLeg

// optional int32 conId = 1;
inline bool ComboLeg::has_conid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  return value;
}
inline void ComboLeg::clear_conid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline ::int32_t ComboLeg::conid() const {
  // @@protoc_insertion_point(field_get:protobuf.ComboLeg.conId)
  return _internal_conid();
}
inline void ComboLeg::set_conid(::int32_t value) {
  _internal_set_conid(value);
  _impl_._has_bits_[0] |= 0x00000008U;
  // @@protoc_insertion_point(field_set:protobuf.ComboLeg.conId)
}
inline ::int32_t ComboLeg::_internal_conid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.conid_;
}
inline void ComboLeg::_internal_set_conid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.conid_ = value;
}

// optional int32 ratio = 2;
inline bool ComboLeg::has_ratio() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  return value;
}
inline void ComboLeg::clear_ratio() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ratio_ = 0;
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline ::int32_t ComboLeg::ratio() const {
  // @@protoc_insertion_point(field_get:protobuf.ComboLeg.ratio)
  return _internal_ratio();
}
inline void ComboLeg::set_ratio(::int32_t value) {
  _internal_set_ratio(value);
  _impl_._has_bits_[0] |= 0x00000010U;
  // @@protoc_insertion_point(field_set:protobuf.ComboLeg.ratio)
}
inline ::int32_t ComboLeg::_internal_ratio() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.ratio_;
}
inline void ComboLeg::_internal_set_ratio(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.ratio_ = value;
}

// optional string action = 3;
inline bool ComboLeg::has_action() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001U) != 0;
  return value;
}
inline void ComboLeg::clear_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.action_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ComboLeg::action() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.ComboLeg.action)
  return _internal_action();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ComboLeg::set_action(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.action_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.ComboLeg.action)
}
inline ::std::string* PROTOBUF_NONNULL ComboLeg::mutable_action()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_action();
  // @@protoc_insertion_point(field_mutable:protobuf.ComboLeg.action)
  return _s;
}
inline const ::std::string& ComboLeg::_internal_action() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.action_.Get();
}
inline void ComboLeg::_internal_set_action(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.action_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ComboLeg::_internal_mutable_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.action_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ComboLeg::release_action() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.ComboLeg.action)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.action_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.action_.Set("", GetArena());
  }
  return released;
}
inline void ComboLeg::set_allocated_action(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.action_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.action_.IsDefault()) {
    _impl_.action_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.ComboLeg.action)
}

// optional string exchange = 4;
inline bool ComboLeg::has_exchange() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  return value;
}
inline void ComboLeg::clear_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ComboLeg::exchange() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.ComboLeg.exchange)
  return _internal_exchange();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ComboLeg::set_exchange(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.exchange_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.ComboLeg.exchange)
}
inline ::std::string* PROTOBUF_NONNULL ComboLeg::mutable_exchange()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_exchange();
  // @@protoc_insertion_point(field_mutable:protobuf.ComboLeg.exchange)
  return _s;
}
inline const ::std::string& ComboLeg::_internal_exchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_.Get();
}
inline void ComboLeg::_internal_set_exchange(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.exchange_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ComboLeg::_internal_mutable_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.exchange_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ComboLeg::release_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.ComboLeg.exchange)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.exchange_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exchange_.Set("", GetArena());
  }
  return released;
}
inline void ComboLeg::set_allocated_exchange(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.exchange_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exchange_.IsDefault()) {
    _impl_.exchange_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.ComboLeg.exchange)
}

// optional int32 openClose = 5;
inline bool ComboLeg::has_openclose() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020U) != 0;
  return value;
}
inline void ComboLeg::clear_openclose() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.openclose_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline ::int32_t ComboLeg::openclose() const {
  // @@protoc_insertion_point(field_get:protobuf.ComboLeg.openClose)
  return _internal_openclose();
}
inline void ComboLeg::set_openclose(::int32_t value) {
  _internal_set_openclose(value);
  _impl_._has_bits_[0] |= 0x00000020U;
  // @@protoc_insertion_point(field_set:protobuf.ComboLeg.openClose)
}
inline ::int32_t ComboLeg::_internal_openclose() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.openclose_;
}
inline void ComboLeg::_internal_set_openclose(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.openclose_ = value;
}

// optional int32 shortSalesSlot = 6;
inline bool ComboLeg::has_shortsalesslot() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040U) != 0;
  return value;
}
inline void ComboLeg::clear_shortsalesslot() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shortsalesslot_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::int32_t ComboLeg::shortsalesslot() const {
  // @@protoc_insertion_point(field_get:protobuf.ComboLeg.shortSalesSlot)
  return _internal_shortsalesslot();
}
inline void ComboLeg::set_shortsalesslot(::int32_t value) {
  _internal_set_shortsalesslot(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:protobuf.ComboLeg.shortSalesSlot)
}
inline ::int32_t ComboLeg::_internal_shortsalesslot() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.shortsalesslot_;
}
inline void ComboLeg::_internal_set_shortsalesslot(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.shortsalesslot_ = value;
}

// optional string designatedLocation = 7;
inline bool ComboLeg::has_designatedlocation() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  return value;
}
inline void ComboLeg::clear_designatedlocation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.designatedlocation_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& ComboLeg::designatedlocation() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.ComboLeg.designatedLocation)
  return _internal_designatedlocation();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ComboLeg::set_designatedlocation(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.designatedlocation_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.ComboLeg.designatedLocation)
}
inline ::std::string* PROTOBUF_NONNULL ComboLeg::mutable_designatedlocation()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_designatedlocation();
  // @@protoc_insertion_point(field_mutable:protobuf.ComboLeg.designatedLocation)
  return _s;
}
inline const ::std::string& ComboLeg::_internal_designatedlocation() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.designatedlocation_.Get();
}
inline void ComboLeg::_internal_set_designatedlocation(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.designatedlocation_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ComboLeg::_internal_mutable_designatedlocation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.designatedlocation_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ComboLeg::release_designatedlocation() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.ComboLeg.designatedLocation)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.designatedlocation_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.designatedlocation_.Set("", GetArena());
  }
  return released;
}
inline void ComboLeg::set_allocated_designatedlocation(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.designatedlocation_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.designatedlocation_.IsDefault()) {
    _impl_.designatedlocation_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.ComboLeg.designatedLocation)
}

// optional int32 exemptCode = 8;
inline bool ComboLeg::has_exemptcode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100U) != 0;
  return value;
}
inline void ComboLeg::clear_exemptcode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exemptcode_ = 0;
  _impl_._has_bits_[0] &= ~0x00000100U;
}
inline ::int32_t ComboLeg::exemptcode() const {
  // @@protoc_insertion_point(field_get:protobuf.ComboLeg.exemptCode)
  return _internal_exemptcode();
}
inline void ComboLeg::set_exemptcode(::int32_t value) {
  _internal_set_exemptcode(value);
  _impl_._has_bits_[0] |= 0x00000100U;
  // @@protoc_insertion_point(field_set:protobuf.ComboLeg.exemptCode)
}
inline ::int32_t ComboLeg::_internal_exemptcode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exemptcode_;
}
inline void ComboLeg::_internal_set_exemptcode(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exemptcode_ = value;
}

// optional double perLegPrice = 9;
inline bool ComboLeg::has_perlegprice() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080U) != 0;
  return value;
}
inline void ComboLeg::clear_perlegprice() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perlegprice_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline double ComboLeg::perlegprice() const {
  // @@protoc_insertion_point(field_get:protobuf.ComboLeg.perLegPrice)
  return _internal_perlegprice();
}
inline void ComboLeg::set_perlegprice(double value) {
  _internal_set_perlegprice(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:protobuf.ComboLeg.perLegPrice)
}
inline double ComboLeg::_internal_perlegprice() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.perlegprice_;
}
inline void ComboLeg::_internal_set_perlegprice(double value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.perlegprice_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ComboLeg_2eproto_2epb_2eh

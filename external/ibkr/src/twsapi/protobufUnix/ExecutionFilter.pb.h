// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ExecutionFilter.proto
// Protobuf C++ Version: 6.32.1

#ifndef ExecutionFilter_2eproto_2epb_2eh
#define ExecutionFilter_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_ExecutionFilter_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_ExecutionFilter_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_ExecutionFilter_2eproto;
}  // extern "C"
namespace protobuf {
class ExecutionFilter;
struct ExecutionFilterDefaultTypeInternal;
extern ExecutionFilterDefaultTypeInternal _ExecutionFilter_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ExecutionFilter_class_data_;
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace protobuf {

// ===================================================================


// -------------------------------------------------------------------

class ExecutionFilter final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:protobuf.ExecutionFilter) */ {
 public:
  inline ExecutionFilter() : ExecutionFilter(nullptr) {}
  ~ExecutionFilter() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ExecutionFilter* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ExecutionFilter));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ExecutionFilter(::google::protobuf::internal::ConstantInitialized);

  inline ExecutionFilter(const ExecutionFilter& from) : ExecutionFilter(nullptr, from) {}
  inline ExecutionFilter(ExecutionFilter&& from) noexcept
      : ExecutionFilter(nullptr, ::std::move(from)) {}
  inline ExecutionFilter& operator=(const ExecutionFilter& from) {
    CopyFrom(from);
    return *this;
  }
  inline ExecutionFilter& operator=(ExecutionFilter&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ExecutionFilter& default_instance() {
    return *reinterpret_cast<const ExecutionFilter*>(
        &_ExecutionFilter_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(ExecutionFilter& a, ExecutionFilter& b) { a.Swap(&b); }
  inline void Swap(ExecutionFilter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ExecutionFilter* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ExecutionFilter* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ExecutionFilter>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ExecutionFilter& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ExecutionFilter& from) { ExecutionFilter::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ExecutionFilter* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "protobuf.ExecutionFilter"; }

 protected:
  explicit ExecutionFilter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ExecutionFilter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ExecutionFilter& from);
  ExecutionFilter(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ExecutionFilter&& from) noexcept
      : ExecutionFilter(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSpecificDatesFieldNumber = 9,
    kAcctCodeFieldNumber = 2,
    kTimeFieldNumber = 3,
    kSymbolFieldNumber = 4,
    kSecTypeFieldNumber = 5,
    kExchangeFieldNumber = 6,
    kSideFieldNumber = 7,
    kClientIdFieldNumber = 1,
    kLastNDaysFieldNumber = 8,
  };
  // repeated int32 specificDates = 9;
  int specificdates_size() const;
  private:
  int _internal_specificdates_size() const;

  public:
  void clear_specificdates() ;
  ::int32_t specificdates(int index) const;
  void set_specificdates(int index, ::int32_t value);
  void add_specificdates(::int32_t value);
  const ::google::protobuf::RepeatedField<::int32_t>& specificdates() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL mutable_specificdates();

  private:
  const ::google::protobuf::RepeatedField<::int32_t>& _internal_specificdates() const;
  ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL _internal_mutable_specificdates();

  public:
  // optional string acctCode = 2;
  bool has_acctcode() const;
  void clear_acctcode() ;
  const ::std::string& acctcode() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_acctcode(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_acctcode();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_acctcode();
  void set_allocated_acctcode(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_acctcode() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_acctcode(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_acctcode();

  public:
  // optional string time = 3;
  bool has_time() const;
  void clear_time() ;
  const ::std::string& time() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_time(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_time();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_time();
  void set_allocated_time(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_time() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_time(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_time();

  public:
  // optional string symbol = 4;
  bool has_symbol() const;
  void clear_symbol() ;
  const ::std::string& symbol() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_symbol(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_symbol();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_symbol();
  void set_allocated_symbol(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_symbol() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_symbol(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_symbol();

  public:
  // optional string secType = 5;
  bool has_sectype() const;
  void clear_sectype() ;
  const ::std::string& sectype() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_sectype(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_sectype();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_sectype();
  void set_allocated_sectype(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_sectype() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_sectype(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_sectype();

  public:
  // optional string exchange = 6;
  bool has_exchange() const;
  void clear_exchange() ;
  const ::std::string& exchange() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_exchange(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_exchange();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_exchange();
  void set_allocated_exchange(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_exchange() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_exchange(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_exchange();

  public:
  // optional string side = 7;
  bool has_side() const;
  void clear_side() ;
  const ::std::string& side() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_side(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_side();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_side();
  void set_allocated_side(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_side() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_side(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_side();

  public:
  // optional int32 clientId = 1;
  bool has_clientid() const;
  void clear_clientid() ;
  ::int32_t clientid() const;
  void set_clientid(::int32_t value);

  private:
  ::int32_t _internal_clientid() const;
  void _internal_set_clientid(::int32_t value);

  public:
  // optional int32 lastNDays = 8;
  bool has_lastndays() const;
  void clear_lastndays() ;
  ::int32_t lastndays() const;
  void set_lastndays(::int32_t value);

  private:
  ::int32_t _internal_lastndays() const;
  void _internal_set_lastndays(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:protobuf.ExecutionFilter)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<4, 9,
                                   0, 78,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ExecutionFilter& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedField<::int32_t> specificdates_;
    ::google::protobuf::internal::CachedSize _specificdates_cached_byte_size_;
    ::google::protobuf::internal::ArenaStringPtr acctcode_;
    ::google::protobuf::internal::ArenaStringPtr time_;
    ::google::protobuf::internal::ArenaStringPtr symbol_;
    ::google::protobuf::internal::ArenaStringPtr sectype_;
    ::google::protobuf::internal::ArenaStringPtr exchange_;
    ::google::protobuf::internal::ArenaStringPtr side_;
    ::int32_t clientid_;
    ::int32_t lastndays_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_ExecutionFilter_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ExecutionFilter_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ExecutionFilter

// optional int32 clientId = 1;
inline bool ExecutionFilter::has_clientid() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040U) != 0;
  return value;
}
inline void ExecutionFilter::clear_clientid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientid_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040U;
}
inline ::int32_t ExecutionFilter::clientid() const {
  // @@protoc_insertion_point(field_get:protobuf.ExecutionFilter.clientId)
  return _internal_clientid();
}
inline void ExecutionFilter::set_clientid(::int32_t value) {
  _internal_set_clientid(value);
  _impl_._has_bits_[0] |= 0x00000040U;
  // @@protoc_insertion_point(field_set:protobuf.ExecutionFilter.clientId)
}
inline ::int32_t ExecutionFilter::_internal_clientid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.clientid_;
}
inline void ExecutionFilter::_internal_set_clientid(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.clientid_ = value;
}

// optional string acctCode = 2;
inline bool ExecutionFilter::has_acctcode() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001U) != 0;
  return value;
}
inline void ExecutionFilter::clear_acctcode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.acctcode_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ExecutionFilter::acctcode() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.ExecutionFilter.acctCode)
  return _internal_acctcode();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilter::set_acctcode(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.acctcode_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.ExecutionFilter.acctCode)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::mutable_acctcode()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_acctcode();
  // @@protoc_insertion_point(field_mutable:protobuf.ExecutionFilter.acctCode)
  return _s;
}
inline const ::std::string& ExecutionFilter::_internal_acctcode() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.acctcode_.Get();
}
inline void ExecutionFilter::_internal_set_acctcode(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.acctcode_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::_internal_mutable_acctcode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.acctcode_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilter::release_acctcode() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.ExecutionFilter.acctCode)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.acctcode_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.acctcode_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilter::set_allocated_acctcode(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.acctcode_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.acctcode_.IsDefault()) {
    _impl_.acctcode_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.ExecutionFilter.acctCode)
}

// optional string time = 3;
inline bool ExecutionFilter::has_time() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002U) != 0;
  return value;
}
inline void ExecutionFilter::clear_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.time_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& ExecutionFilter::time() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.ExecutionFilter.time)
  return _internal_time();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilter::set_time(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.time_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.ExecutionFilter.time)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::mutable_time()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_time();
  // @@protoc_insertion_point(field_mutable:protobuf.ExecutionFilter.time)
  return _s;
}
inline const ::std::string& ExecutionFilter::_internal_time() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.time_.Get();
}
inline void ExecutionFilter::_internal_set_time(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.time_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::_internal_mutable_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.time_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilter::release_time() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.ExecutionFilter.time)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.time_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.time_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilter::set_allocated_time(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.time_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.time_.IsDefault()) {
    _impl_.time_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.ExecutionFilter.time)
}

// optional string symbol = 4;
inline bool ExecutionFilter::has_symbol() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004U) != 0;
  return value;
}
inline void ExecutionFilter::clear_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.symbol_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& ExecutionFilter::symbol() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.ExecutionFilter.symbol)
  return _internal_symbol();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilter::set_symbol(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.symbol_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.ExecutionFilter.symbol)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::mutable_symbol()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_symbol();
  // @@protoc_insertion_point(field_mutable:protobuf.ExecutionFilter.symbol)
  return _s;
}
inline const ::std::string& ExecutionFilter::_internal_symbol() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.symbol_.Get();
}
inline void ExecutionFilter::_internal_set_symbol(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.symbol_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::_internal_mutable_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.symbol_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilter::release_symbol() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.ExecutionFilter.symbol)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.symbol_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.symbol_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilter::set_allocated_symbol(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.symbol_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.symbol_.IsDefault()) {
    _impl_.symbol_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.ExecutionFilter.symbol)
}

// optional string secType = 5;
inline bool ExecutionFilter::has_sectype() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008U) != 0;
  return value;
}
inline void ExecutionFilter::clear_sectype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.sectype_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000008U;
}
inline const ::std::string& ExecutionFilter::sectype() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.ExecutionFilter.secType)
  return _internal_sectype();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilter::set_sectype(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.sectype_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.ExecutionFilter.secType)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::mutable_sectype()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_sectype();
  // @@protoc_insertion_point(field_mutable:protobuf.ExecutionFilter.secType)
  return _s;
}
inline const ::std::string& ExecutionFilter::_internal_sectype() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.sectype_.Get();
}
inline void ExecutionFilter::_internal_set_sectype(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  _impl_.sectype_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::_internal_mutable_sectype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000008U;
  return _impl_.sectype_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilter::release_sectype() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.ExecutionFilter.secType)
  if ((_impl_._has_bits_[0] & 0x00000008U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000008U;
  auto* released = _impl_.sectype_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.sectype_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilter::set_allocated_sectype(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000008U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000008U;
  }
  _impl_.sectype_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.sectype_.IsDefault()) {
    _impl_.sectype_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.ExecutionFilter.secType)
}

// optional string exchange = 6;
inline bool ExecutionFilter::has_exchange() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010U) != 0;
  return value;
}
inline void ExecutionFilter::clear_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.exchange_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000010U;
}
inline const ::std::string& ExecutionFilter::exchange() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.ExecutionFilter.exchange)
  return _internal_exchange();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilter::set_exchange(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.exchange_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.ExecutionFilter.exchange)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::mutable_exchange()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_exchange();
  // @@protoc_insertion_point(field_mutable:protobuf.ExecutionFilter.exchange)
  return _s;
}
inline const ::std::string& ExecutionFilter::_internal_exchange() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.exchange_.Get();
}
inline void ExecutionFilter::_internal_set_exchange(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  _impl_.exchange_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::_internal_mutable_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000010U;
  return _impl_.exchange_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilter::release_exchange() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.ExecutionFilter.exchange)
  if ((_impl_._has_bits_[0] & 0x00000010U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000010U;
  auto* released = _impl_.exchange_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.exchange_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilter::set_allocated_exchange(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000010U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000010U;
  }
  _impl_.exchange_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.exchange_.IsDefault()) {
    _impl_.exchange_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.ExecutionFilter.exchange)
}

// optional string side = 7;
inline bool ExecutionFilter::has_side() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020U) != 0;
  return value;
}
inline void ExecutionFilter::clear_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.side_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000020U;
}
inline const ::std::string& ExecutionFilter::side() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:protobuf.ExecutionFilter.side)
  return _internal_side();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ExecutionFilter::set_side(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  _impl_.side_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:protobuf.ExecutionFilter.side)
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::mutable_side()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_side();
  // @@protoc_insertion_point(field_mutable:protobuf.ExecutionFilter.side)
  return _s;
}
inline const ::std::string& ExecutionFilter::_internal_side() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.side_.Get();
}
inline void ExecutionFilter::_internal_set_side(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  _impl_.side_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ExecutionFilter::_internal_mutable_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000020U;
  return _impl_.side_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ExecutionFilter::release_side() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:protobuf.ExecutionFilter.side)
  if ((_impl_._has_bits_[0] & 0x00000020U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000020U;
  auto* released = _impl_.side_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.side_.Set("", GetArena());
  }
  return released;
}
inline void ExecutionFilter::set_allocated_side(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000020U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000020U;
  }
  _impl_.side_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.side_.IsDefault()) {
    _impl_.side_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:protobuf.ExecutionFilter.side)
}

// optional int32 lastNDays = 8;
inline bool ExecutionFilter::has_lastndays() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080U) != 0;
  return value;
}
inline void ExecutionFilter::clear_lastndays() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastndays_ = 0;
  _impl_._has_bits_[0] &= ~0x00000080U;
}
inline ::int32_t ExecutionFilter::lastndays() const {
  // @@protoc_insertion_point(field_get:protobuf.ExecutionFilter.lastNDays)
  return _internal_lastndays();
}
inline void ExecutionFilter::set_lastndays(::int32_t value) {
  _internal_set_lastndays(value);
  _impl_._has_bits_[0] |= 0x00000080U;
  // @@protoc_insertion_point(field_set:protobuf.ExecutionFilter.lastNDays)
}
inline ::int32_t ExecutionFilter::_internal_lastndays() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.lastndays_;
}
inline void ExecutionFilter::_internal_set_lastndays(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.lastndays_ = value;
}

// repeated int32 specificDates = 9;
inline int ExecutionFilter::_internal_specificdates_size() const {
  return _internal_specificdates().size();
}
inline int ExecutionFilter::specificdates_size() const {
  return _internal_specificdates_size();
}
inline void ExecutionFilter::clear_specificdates() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.specificdates_.Clear();
}
inline ::int32_t ExecutionFilter::specificdates(int index) const {
  // @@protoc_insertion_point(field_get:protobuf.ExecutionFilter.specificDates)
  return _internal_specificdates().Get(index);
}
inline void ExecutionFilter::set_specificdates(int index, ::int32_t value) {
  _internal_mutable_specificdates()->Set(index, value);
  // @@protoc_insertion_point(field_set:protobuf.ExecutionFilter.specificDates)
}
inline void ExecutionFilter::add_specificdates(::int32_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_specificdates()->Add(value);
  // @@protoc_insertion_point(field_add:protobuf.ExecutionFilter.specificDates)
}
inline const ::google::protobuf::RepeatedField<::int32_t>& ExecutionFilter::specificdates() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:protobuf.ExecutionFilter.specificDates)
  return _internal_specificdates();
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL ExecutionFilter::mutable_specificdates()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:protobuf.ExecutionFilter.specificDates)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_specificdates();
}
inline const ::google::protobuf::RepeatedField<::int32_t>&
ExecutionFilter::_internal_specificdates() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.specificdates_;
}
inline ::google::protobuf::RepeatedField<::int32_t>* PROTOBUF_NONNULL
ExecutionFilter::_internal_mutable_specificdates() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.specificdates_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // ExecutionFilter_2eproto_2epb_2eh

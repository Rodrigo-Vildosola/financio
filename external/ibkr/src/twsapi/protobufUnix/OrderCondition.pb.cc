// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: OrderCondition.proto
// Protobuf C++ Version: 6.32.1

#include "OrderCondition.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf {

inline constexpr OrderCondition::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sectype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        type_{0},
        isconjunctionconnection_{false},
        ismore_{false},
        conid_{0},
        percent_{0},
        changepercent_{0},
        price_{0},
        triggermethod_{0},
        volume_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OrderCondition::OrderCondition(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(OrderCondition_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct OrderConditionDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OrderConditionDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OrderConditionDefaultTypeInternal() {}
  union {
    OrderCondition _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OrderConditionDefaultTypeInternal _OrderCondition_default_instance_;
}  // namespace protobuf
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_OrderCondition_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_OrderCondition_2eproto = nullptr;
const ::uint32_t
    TableStruct_OrderCondition_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_._has_bits_),
        16, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.type_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.isconjunctionconnection_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.ismore_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.conid_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.exchange_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.sectype_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.percent_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.changepercent_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.price_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.triggermethod_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::protobuf::OrderCondition, _impl_.volume_),
        4,
        5,
        6,
        7,
        0,
        1,
        2,
        8,
        9,
        10,
        11,
        3,
        12,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::protobuf::OrderCondition)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::protobuf::_OrderCondition_default_instance_._instance,
};
const char descriptor_table_protodef_OrderCondition_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024OrderCondition.proto\022\010protobuf\"\352\003\n\016Ord"
    "erCondition\022\021\n\004type\030\001 \001(\005H\000\210\001\001\022$\n\027isConj"
    "unctionConnection\030\002 \001(\010H\001\210\001\001\022\023\n\006isMore\030\003"
    " \001(\010H\002\210\001\001\022\022\n\005conId\030\004 \001(\005H\003\210\001\001\022\025\n\010exchang"
    "e\030\005 \001(\tH\004\210\001\001\022\023\n\006symbol\030\006 \001(\tH\005\210\001\001\022\024\n\007sec"
    "Type\030\007 \001(\tH\006\210\001\001\022\024\n\007percent\030\010 \001(\005H\007\210\001\001\022\032\n"
    "\rchangePercent\030\t \001(\001H\010\210\001\001\022\022\n\005price\030\n \001(\001"
    "H\t\210\001\001\022\032\n\rtriggerMethod\030\013 \001(\005H\n\210\001\001\022\021\n\004tim"
    "e\030\014 \001(\tH\013\210\001\001\022\023\n\006volume\030\r \001(\005H\014\210\001\001B\007\n\005_ty"
    "peB\032\n\030_isConjunctionConnectionB\t\n\007_isMor"
    "eB\010\n\006_conIdB\013\n\t_exchangeB\t\n\007_symbolB\n\n\010_"
    "secTypeB\n\n\010_percentB\020\n\016_changePercentB\010\n"
    "\006_priceB\020\n\016_triggerMethodB\007\n\005_timeB\t\n\007_v"
    "olumeB>\n\026com.ib.client.protobufB\023OrderCo"
    "nditionProto\252\002\016IBApi.protobufb\006proto3"
};
static ::absl::once_flag descriptor_table_OrderCondition_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_OrderCondition_2eproto = {
    false,
    false,
    597,
    descriptor_table_protodef_OrderCondition_2eproto,
    "OrderCondition.proto",
    &descriptor_table_OrderCondition_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_OrderCondition_2eproto::offsets,
    file_level_enum_descriptors_OrderCondition_2eproto,
    file_level_service_descriptors_OrderCondition_2eproto,
};
namespace protobuf {
// ===================================================================

class OrderCondition::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<OrderCondition>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_._has_bits_);
};

OrderCondition::OrderCondition(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderCondition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.OrderCondition)
}
PROTOBUF_NDEBUG_INLINE OrderCondition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::protobuf::OrderCondition& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        exchange_(arena, from.exchange_),
        symbol_(arena, from.symbol_),
        sectype_(arena, from.sectype_),
        time_(arena, from.time_) {}

OrderCondition::OrderCondition(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const OrderCondition& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, OrderCondition_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  OrderCondition* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, type_),
           offsetof(Impl_, volume_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::volume_));

  // @@protoc_insertion_point(copy_constructor:protobuf.OrderCondition)
}
PROTOBUF_NDEBUG_INLINE OrderCondition::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        exchange_(arena),
        symbol_(arena),
        sectype_(arena),
        time_(arena) {}

inline void OrderCondition::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, type_),
           0,
           offsetof(Impl_, volume_) -
               offsetof(Impl_, type_) +
               sizeof(Impl_::volume_));
}
OrderCondition::~OrderCondition() {
  // @@protoc_insertion_point(destructor:protobuf.OrderCondition)
  SharedDtor(*this);
}
inline void OrderCondition::SharedDtor(MessageLite& self) {
  OrderCondition& this_ = static_cast<OrderCondition&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.exchange_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.sectype_.Destroy();
  this_._impl_.time_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL OrderCondition::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) OrderCondition(arena);
}
constexpr auto OrderCondition::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(OrderCondition),
                                            alignof(OrderCondition));
}
constexpr auto OrderCondition::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_OrderCondition_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &OrderCondition::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<OrderCondition>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &OrderCondition::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<OrderCondition>(), &OrderCondition::ByteSizeLong,
              &OrderCondition::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_._cached_size_),
          false,
      },
      &OrderCondition::kDescriptorMethods,
      &descriptor_table_OrderCondition_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull OrderCondition_class_data_ =
        OrderCondition::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
OrderCondition::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&OrderCondition_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(OrderCondition_class_data_.tc_table);
  return OrderCondition_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 13, 0, 65, 2>
OrderCondition::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_._has_bits_),
    0, // no _extensions_
    13, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294959104,  // skipmap
    offsetof(decltype(_table_), field_entries),
    13,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    OrderCondition_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf::OrderCondition>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 type = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderCondition, _impl_.type_), 4>(),
     {8, 4, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.type_)}},
    // optional bool isConjunctionConnection = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderCondition, _impl_.isconjunctionconnection_), 5>(),
     {16, 5, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.isconjunctionconnection_)}},
    // optional bool isMore = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(OrderCondition, _impl_.ismore_), 6>(),
     {24, 6, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.ismore_)}},
    // optional int32 conId = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderCondition, _impl_.conid_), 7>(),
     {32, 7, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.conid_)}},
    // optional string exchange = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 0, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.exchange_)}},
    // optional string symbol = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 1, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.symbol_)}},
    // optional string secType = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 2, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.sectype_)}},
    // optional int32 percent = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderCondition, _impl_.percent_), 8>(),
     {64, 8, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.percent_)}},
    // optional double changePercent = 9;
    {::_pbi::TcParser::FastF64S1,
     {73, 9, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.changepercent_)}},
    // optional double price = 10;
    {::_pbi::TcParser::FastF64S1,
     {81, 10, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.price_)}},
    // optional int32 triggerMethod = 11;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderCondition, _impl_.triggermethod_), 11>(),
     {88, 11, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.triggermethod_)}},
    // optional string time = 12;
    {::_pbi::TcParser::FastUS1,
     {98, 3, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.time_)}},
    // optional int32 volume = 13;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(OrderCondition, _impl_.volume_), 12>(),
     {104, 12, 0, PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.volume_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 type = 1;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.type_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional bool isConjunctionConnection = 2;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.isconjunctionconnection_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional bool isMore = 3;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.ismore_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // optional int32 conId = 4;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.conid_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string exchange = 5;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.exchange_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string symbol = 6;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.symbol_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string secType = 7;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.sectype_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 percent = 8;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.percent_), _Internal::kHasBitsOffset + 8, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional double changePercent = 9;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.changepercent_), _Internal::kHasBitsOffset + 9, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional double price = 10;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.price_), _Internal::kHasBitsOffset + 10, 0, (0 | ::_fl::kFcOptional | ::_fl::kDouble)},
    // optional int32 triggerMethod = 11;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.triggermethod_), _Internal::kHasBitsOffset + 11, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string time = 12;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.time_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 volume = 13;
    {PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.volume_), _Internal::kHasBitsOffset + 12, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\27\0\0\0\0\10\6\7\0\0\0\0\4\0\0\0"
    "protobuf.OrderCondition"
    "exchange"
    "symbol"
    "secType"
    "time"
  }},
};
PROTOBUF_NOINLINE void OrderCondition::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.OrderCondition)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000000fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.exchange_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.symbol_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.sectype_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.time_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000f0U) != 0) {
    ::memset(&_impl_.type_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.conid_) -
        reinterpret_cast<char*>(&_impl_.type_)) + sizeof(_impl_.conid_));
  }
  if ((cached_has_bits & 0x00001f00U) != 0) {
    ::memset(&_impl_.percent_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.volume_) -
        reinterpret_cast<char*>(&_impl_.percent_)) + sizeof(_impl_.volume_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL OrderCondition::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const OrderCondition& this_ = static_cast<const OrderCondition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL OrderCondition::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const OrderCondition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.OrderCondition)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 type = 1;
  if ((cached_has_bits & 0x00000010U) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_type(), target);
  }

  // optional bool isConjunctionConnection = 2;
  if ((cached_has_bits & 0x00000020U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        2, this_._internal_isconjunctionconnection(), target);
  }

  // optional bool isMore = 3;
  if ((cached_has_bits & 0x00000040U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(
        3, this_._internal_ismore(), target);
  }

  // optional int32 conId = 4;
  if ((cached_has_bits & 0x00000080U) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<4>(
            stream, this_._internal_conid(), target);
  }

  // optional string exchange = 5;
  if ((cached_has_bits & 0x00000001U) != 0) {
    const ::std::string& _s = this_._internal_exchange();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderCondition.exchange");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string symbol = 6;
  if ((cached_has_bits & 0x00000002U) != 0) {
    const ::std::string& _s = this_._internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderCondition.symbol");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string secType = 7;
  if ((cached_has_bits & 0x00000004U) != 0) {
    const ::std::string& _s = this_._internal_sectype();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderCondition.secType");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional int32 percent = 8;
  if ((cached_has_bits & 0x00000100U) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
            stream, this_._internal_percent(), target);
  }

  // optional double changePercent = 9;
  if ((cached_has_bits & 0x00000200U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        9, this_._internal_changepercent(), target);
  }

  // optional double price = 10;
  if ((cached_has_bits & 0x00000400U) != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteDoubleToArray(
        10, this_._internal_price(), target);
  }

  // optional int32 triggerMethod = 11;
  if ((cached_has_bits & 0x00000800U) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<11>(
            stream, this_._internal_triggermethod(), target);
  }

  // optional string time = 12;
  if ((cached_has_bits & 0x00000008U) != 0) {
    const ::std::string& _s = this_._internal_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.OrderCondition.time");
    target = stream->WriteStringMaybeAliased(12, _s, target);
  }

  // optional int32 volume = 13;
  if ((cached_has_bits & 0x00001000U) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<13>(
            stream, this_._internal_volume(), target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.OrderCondition)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t OrderCondition::ByteSizeLong(const MessageLite& base) {
  const OrderCondition& this_ = static_cast<const OrderCondition&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t OrderCondition::ByteSizeLong() const {
  const OrderCondition& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:protobuf.OrderCondition)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  total_size += ::absl::popcount(0x00000600U & cached_has_bits) * 9;
  total_size += ::absl::popcount(0x00000060U & cached_has_bits) * 2;
  if ((cached_has_bits & 0x0000009fU) != 0) {
    // optional string exchange = 5;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_exchange());
    }
    // optional string symbol = 6;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_symbol());
    }
    // optional string secType = 7;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_sectype());
    }
    // optional string time = 12;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_time());
    }
    // optional int32 type = 1;
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_type());
    }
    // optional int32 conId = 4;
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_conid());
    }
  }
  if ((cached_has_bits & 0x00001900U) != 0) {
    // optional int32 percent = 8;
    if ((cached_has_bits & 0x00000100U) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_percent());
    }
    // optional int32 triggerMethod = 11;
    if ((cached_has_bits & 0x00000800U) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_triggermethod());
    }
    // optional int32 volume = 13;
    if ((cached_has_bits & 0x00001000U) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_volume());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void OrderCondition::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<OrderCondition*>(&to_msg);
  auto& from = static_cast<const OrderCondition&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.OrderCondition)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _this->_internal_set_exchange(from._internal_exchange());
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _this->_internal_set_symbol(from._internal_symbol());
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _this->_internal_set_sectype(from._internal_sectype());
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _this->_internal_set_time(from._internal_time());
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _this->_impl_.type_ = from._impl_.type_;
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _this->_impl_.isconjunctionconnection_ = from._impl_.isconjunctionconnection_;
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      _this->_impl_.ismore_ = from._impl_.ismore_;
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      _this->_impl_.conid_ = from._impl_.conid_;
    }
  }
  if ((cached_has_bits & 0x00001f00U) != 0) {
    if ((cached_has_bits & 0x00000100U) != 0) {
      _this->_impl_.percent_ = from._impl_.percent_;
    }
    if ((cached_has_bits & 0x00000200U) != 0) {
      _this->_impl_.changepercent_ = from._impl_.changepercent_;
    }
    if ((cached_has_bits & 0x00000400U) != 0) {
      _this->_impl_.price_ = from._impl_.price_;
    }
    if ((cached_has_bits & 0x00000800U) != 0) {
      _this->_impl_.triggermethod_ = from._impl_.triggermethod_;
    }
    if ((cached_has_bits & 0x00001000U) != 0) {
      _this->_impl_.volume_ = from._impl_.volume_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OrderCondition::CopyFrom(const OrderCondition& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.OrderCondition)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void OrderCondition::InternalSwap(OrderCondition* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sectype_, &other->_impl_.sectype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_, &other->_impl_.time_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.volume_)
      + sizeof(OrderCondition::_impl_.volume_)
      - PROTOBUF_FIELD_OFFSET(OrderCondition, _impl_.type_)>(
          reinterpret_cast<char*>(&_impl_.type_),
          reinterpret_cast<char*>(&other->_impl_.type_));
}

::google::protobuf::Metadata OrderCondition::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_OrderCondition_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"

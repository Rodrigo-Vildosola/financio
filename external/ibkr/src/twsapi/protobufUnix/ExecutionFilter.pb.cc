// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ExecutionFilter.proto
// Protobuf C++ Version: 6.32.1

#include "ExecutionFilter.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace protobuf {

inline constexpr ExecutionFilter::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        specificdates_{},
        _specificdates_cached_byte_size_{0},
        acctcode_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        time_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        symbol_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sectype_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        exchange_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        side_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        clientid_{0},
        lastndays_{0} {}

template <typename>
PROTOBUF_CONSTEXPR ExecutionFilter::ExecutionFilter(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ExecutionFilter_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ExecutionFilterDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ExecutionFilterDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ExecutionFilterDefaultTypeInternal() {}
  union {
    ExecutionFilter _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ExecutionFilterDefaultTypeInternal _ExecutionFilter_default_instance_;
}  // namespace protobuf
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_ExecutionFilter_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_ExecutionFilter_2eproto = nullptr;
const ::uint32_t
    TableStruct_ExecutionFilter_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_._has_bits_),
        12, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_.clientid_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_.acctcode_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_.time_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_.symbol_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_.sectype_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_.exchange_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_.side_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_.lastndays_),
        PROTOBUF_FIELD_OFFSET(::protobuf::ExecutionFilter, _impl_.specificdates_),
        6,
        0,
        1,
        2,
        3,
        4,
        5,
        7,
        ~0u,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::protobuf::ExecutionFilter)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::protobuf::_ExecutionFilter_default_instance_._instance,
};
const char descriptor_table_protodef_ExecutionFilter_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\025ExecutionFilter.proto\022\010protobuf\"\264\002\n\017Ex"
    "ecutionFilter\022\025\n\010clientId\030\001 \001(\005H\000\210\001\001\022\025\n\010"
    "acctCode\030\002 \001(\tH\001\210\001\001\022\021\n\004time\030\003 \001(\tH\002\210\001\001\022\023"
    "\n\006symbol\030\004 \001(\tH\003\210\001\001\022\024\n\007secType\030\005 \001(\tH\004\210\001"
    "\001\022\025\n\010exchange\030\006 \001(\tH\005\210\001\001\022\021\n\004side\030\007 \001(\tH\006"
    "\210\001\001\022\026\n\tlastNDays\030\010 \001(\005H\007\210\001\001\022\025\n\rspecificD"
    "ates\030\t \003(\005B\013\n\t_clientIdB\013\n\t_acctCodeB\007\n\005"
    "_timeB\t\n\007_symbolB\n\n\010_secTypeB\013\n\t_exchang"
    "eB\007\n\005_sideB\014\n\n_lastNDaysB\?\n\026com.ib.clien"
    "t.protobufB\024ExecutionFilterProto\252\002\016IBApi"
    ".protobufb\006proto3"
};
static ::absl::once_flag descriptor_table_ExecutionFilter_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ExecutionFilter_2eproto = {
    false,
    false,
    417,
    descriptor_table_protodef_ExecutionFilter_2eproto,
    "ExecutionFilter.proto",
    &descriptor_table_ExecutionFilter_2eproto_once,
    nullptr,
    0,
    1,
    schemas,
    file_default_instances,
    TableStruct_ExecutionFilter_2eproto::offsets,
    file_level_enum_descriptors_ExecutionFilter_2eproto,
    file_level_service_descriptors_ExecutionFilter_2eproto,
};
namespace protobuf {
// ===================================================================

class ExecutionFilter::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ExecutionFilter>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_._has_bits_);
};

ExecutionFilter::ExecutionFilter(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExecutionFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:protobuf.ExecutionFilter)
}
PROTOBUF_NDEBUG_INLINE ExecutionFilter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::protobuf::ExecutionFilter& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        specificdates_{visibility, arena, from.specificdates_},
        _specificdates_cached_byte_size_{0},
        acctcode_(arena, from.acctcode_),
        time_(arena, from.time_),
        symbol_(arena, from.symbol_),
        sectype_(arena, from.sectype_),
        exchange_(arena, from.exchange_),
        side_(arena, from.side_) {}

ExecutionFilter::ExecutionFilter(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ExecutionFilter& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ExecutionFilter_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ExecutionFilter* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, clientid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, clientid_),
           offsetof(Impl_, lastndays_) -
               offsetof(Impl_, clientid_) +
               sizeof(Impl_::lastndays_));

  // @@protoc_insertion_point(copy_constructor:protobuf.ExecutionFilter)
}
PROTOBUF_NDEBUG_INLINE ExecutionFilter::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        specificdates_{visibility, arena},
        _specificdates_cached_byte_size_{0},
        acctcode_(arena),
        time_(arena),
        symbol_(arena),
        sectype_(arena),
        exchange_(arena),
        side_(arena) {}

inline void ExecutionFilter::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, clientid_),
           0,
           offsetof(Impl_, lastndays_) -
               offsetof(Impl_, clientid_) +
               sizeof(Impl_::lastndays_));
}
ExecutionFilter::~ExecutionFilter() {
  // @@protoc_insertion_point(destructor:protobuf.ExecutionFilter)
  SharedDtor(*this);
}
inline void ExecutionFilter::SharedDtor(MessageLite& self) {
  ExecutionFilter& this_ = static_cast<ExecutionFilter&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.acctcode_.Destroy();
  this_._impl_.time_.Destroy();
  this_._impl_.symbol_.Destroy();
  this_._impl_.sectype_.Destroy();
  this_._impl_.exchange_.Destroy();
  this_._impl_.side_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ExecutionFilter::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ExecutionFilter(arena);
}
constexpr auto ExecutionFilter::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.specificdates_) +
          decltype(ExecutionFilter::_impl_.specificdates_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ExecutionFilter), alignof(ExecutionFilter), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ExecutionFilter::PlacementNew_,
                                 sizeof(ExecutionFilter),
                                 alignof(ExecutionFilter));
  }
}
constexpr auto ExecutionFilter::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ExecutionFilter_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ExecutionFilter::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ExecutionFilter>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ExecutionFilter::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ExecutionFilter>(), &ExecutionFilter::ByteSizeLong,
              &ExecutionFilter::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_._cached_size_),
          false,
      },
      &ExecutionFilter::kDescriptorMethods,
      &descriptor_table_ExecutionFilter_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ExecutionFilter_class_data_ =
        ExecutionFilter::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ExecutionFilter::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ExecutionFilter_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ExecutionFilter_class_data_.tc_table);
  return ExecutionFilter_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 0, 78, 2>
ExecutionFilter::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ExecutionFilter_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::protobuf::ExecutionFilter>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // optional int32 clientId = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExecutionFilter, _impl_.clientid_), 6>(),
     {8, 6, 0, PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.clientid_)}},
    // optional string acctCode = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.acctcode_)}},
    // optional string time = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 1, 0, PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.time_)}},
    // optional string symbol = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 2, 0, PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.symbol_)}},
    // optional string secType = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 3, 0, PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.sectype_)}},
    // optional string exchange = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 4, 0, PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.exchange_)}},
    // optional string side = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 5, 0, PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.side_)}},
    // optional int32 lastNDays = 8;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(ExecutionFilter, _impl_.lastndays_), 7>(),
     {64, 7, 0, PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.lastndays_)}},
    // repeated int32 specificDates = 9;
    {::_pbi::TcParser::FastV32P1,
     {74, 63, 0, PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.specificdates_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // optional int32 clientId = 1;
    {PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.clientid_), _Internal::kHasBitsOffset + 6, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // optional string acctCode = 2;
    {PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.acctcode_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string time = 3;
    {PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.time_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string symbol = 4;
    {PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.symbol_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string secType = 5;
    {PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.sectype_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string exchange = 6;
    {PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.exchange_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional string side = 7;
    {PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.side_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // optional int32 lastNDays = 8;
    {PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.lastndays_), _Internal::kHasBitsOffset + 7, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
    // repeated int32 specificDates = 9;
    {PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.specificdates_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kPackedInt32)},
  }},
  // no aux_entries
  {{
    "\30\0\10\4\6\7\10\4\0\0\0\0\0\0\0\0"
    "protobuf.ExecutionFilter"
    "acctCode"
    "time"
    "symbol"
    "secType"
    "exchange"
    "side"
  }},
};
PROTOBUF_NOINLINE void ExecutionFilter::Clear() {
// @@protoc_insertion_point(message_clear_start:protobuf.ExecutionFilter)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.specificdates_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.acctcode_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.time_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.symbol_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.sectype_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.exchange_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _impl_.side_.ClearNonDefaultToEmpty();
    }
  }
  if ((cached_has_bits & 0x000000c0U) != 0) {
    ::memset(&_impl_.clientid_, 0, static_cast<::size_t>(
        reinterpret_cast<char*>(&_impl_.lastndays_) -
        reinterpret_cast<char*>(&_impl_.clientid_)) + sizeof(_impl_.lastndays_));
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ExecutionFilter::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ExecutionFilter& this_ = static_cast<const ExecutionFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ExecutionFilter::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ExecutionFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:protobuf.ExecutionFilter)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  cached_has_bits = this_._impl_._has_bits_[0];
  // optional int32 clientId = 1;
  if ((cached_has_bits & 0x00000040U) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<1>(
            stream, this_._internal_clientid(), target);
  }

  // optional string acctCode = 2;
  if ((cached_has_bits & 0x00000001U) != 0) {
    const ::std::string& _s = this_._internal_acctcode();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ExecutionFilter.acctCode");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // optional string time = 3;
  if ((cached_has_bits & 0x00000002U) != 0) {
    const ::std::string& _s = this_._internal_time();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ExecutionFilter.time");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // optional string symbol = 4;
  if ((cached_has_bits & 0x00000004U) != 0) {
    const ::std::string& _s = this_._internal_symbol();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ExecutionFilter.symbol");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // optional string secType = 5;
  if ((cached_has_bits & 0x00000008U) != 0) {
    const ::std::string& _s = this_._internal_sectype();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ExecutionFilter.secType");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // optional string exchange = 6;
  if ((cached_has_bits & 0x00000010U) != 0) {
    const ::std::string& _s = this_._internal_exchange();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ExecutionFilter.exchange");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  // optional string side = 7;
  if ((cached_has_bits & 0x00000020U) != 0) {
    const ::std::string& _s = this_._internal_side();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "protobuf.ExecutionFilter.side");
    target = stream->WriteStringMaybeAliased(7, _s, target);
  }

  // optional int32 lastNDays = 8;
  if ((cached_has_bits & 0x00000080U) != 0) {
    target =
        ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<8>(
            stream, this_._internal_lastndays(), target);
  }

  // repeated int32 specificDates = 9;
  {
    int byte_size = this_._impl_._specificdates_cached_byte_size_.Get();
    if (byte_size > 0) {
      target = stream->WriteInt32Packed(
          9, this_._internal_specificdates(), byte_size, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:protobuf.ExecutionFilter)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ExecutionFilter::ByteSizeLong(const MessageLite& base) {
  const ExecutionFilter& this_ = static_cast<const ExecutionFilter&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ExecutionFilter::ByteSizeLong() const {
  const ExecutionFilter& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:protobuf.ExecutionFilter)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated int32 specificDates = 9;
    {
      total_size +=
          ::_pbi::WireFormatLite::Int32SizeWithPackedTagSize(
              this_._internal_specificdates(), 1,
              this_._impl_._specificdates_cached_byte_size_);
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    // optional string acctCode = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_acctcode());
    }
    // optional string time = 3;
    if ((cached_has_bits & 0x00000002U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_time());
    }
    // optional string symbol = 4;
    if ((cached_has_bits & 0x00000004U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_symbol());
    }
    // optional string secType = 5;
    if ((cached_has_bits & 0x00000008U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_sectype());
    }
    // optional string exchange = 6;
    if ((cached_has_bits & 0x00000010U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_exchange());
    }
    // optional string side = 7;
    if ((cached_has_bits & 0x00000020U) != 0) {
      total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                      this_._internal_side());
    }
    // optional int32 clientId = 1;
    if ((cached_has_bits & 0x00000040U) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_clientid());
    }
    // optional int32 lastNDays = 8;
    if ((cached_has_bits & 0x00000080U) != 0) {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
          this_._internal_lastndays());
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ExecutionFilter::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ExecutionFilter*>(&to_msg);
  auto& from = static_cast<const ExecutionFilter&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:protobuf.ExecutionFilter)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_specificdates()->MergeFrom(from._internal_specificdates());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x000000ffU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _this->_internal_set_acctcode(from._internal_acctcode());
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _this->_internal_set_time(from._internal_time());
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _this->_internal_set_symbol(from._internal_symbol());
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _this->_internal_set_sectype(from._internal_sectype());
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _this->_internal_set_exchange(from._internal_exchange());
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      _this->_internal_set_side(from._internal_side());
    }
    if ((cached_has_bits & 0x00000040U) != 0) {
      _this->_impl_.clientid_ = from._impl_.clientid_;
    }
    if ((cached_has_bits & 0x00000080U) != 0) {
      _this->_impl_.lastndays_ = from._impl_.lastndays_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ExecutionFilter::CopyFrom(const ExecutionFilter& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:protobuf.ExecutionFilter)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ExecutionFilter::InternalSwap(ExecutionFilter* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.specificdates_.InternalSwap(&other->_impl_.specificdates_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.acctcode_, &other->_impl_.acctcode_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.time_, &other->_impl_.time_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.symbol_, &other->_impl_.symbol_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sectype_, &other->_impl_.sectype_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.exchange_, &other->_impl_.exchange_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.side_, &other->_impl_.side_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.lastndays_)
      + sizeof(ExecutionFilter::_impl_.lastndays_)
      - PROTOBUF_FIELD_OFFSET(ExecutionFilter, _impl_.clientid_)>(
          reinterpret_cast<char*>(&_impl_.clientid_),
          reinterpret_cast<char*>(&other->_impl_.clientid_));
}

::google::protobuf::Metadata ExecutionFilter::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace protobuf
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_ExecutionFilter_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
